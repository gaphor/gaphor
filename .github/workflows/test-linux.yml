name: Test with Linux

env:
  POETRY_VERSION: 1.1.7

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published, prereleased]

jobs:

  linux:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
      - name: Use Python Dependency Cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-20.04
      - name: Install Dependencies
        run: >
          sudo apt-get update -q && sudo apt-get install
          --no-install-recommends -y xvfb python3-dev python3-gi upx
          python3-gi-cairo gir1.2-gtk-3.0 libgirepository1.0-dev libcairo2-dev
      - name: Install Poetry
        run: pip install poetry==$POETRY_VERSION
      - name: Collect Project Data
        id: meta
        run: .github/scripts/metadata.sh
      - name: Install Python Dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install
      - name: Test with Pytest
        run: xvfb-run poetry run poe test-all
      - name: Upload Code Coverage to Code Climate
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: 05f6288b94a87daa172d3e96a33ec331a4374be7d01eb9a42b3b21c4c550a8ff
        with:
          coverageCommand: poetry run coverage xml
