name: Create and Upload Linux Packages

env:
  POETRY_VERSION: 1.1.7

on:
  push:
# Once merged to master, enable this
#   branches:
#     - master
  release:
    types: [published, prereleased]

jobs:

  linux:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
      - name: Use Python Dependency Cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-20.04
      - name: Install Dependencies
        run: >
          sudo apt-get update -q && sudo apt-get install
          --no-install-recommends -y xvfb python3-dev python3-gi upx
          python3-gi-cairo gir1.2-gtk-3.0 libgirepository1.0-dev libcairo2-dev
      - name: Install Poetry
        run: pip install poetry==$POETRY_VERSION
      - name: Collect Project Data
        id: meta
        run: .github/scripts/metadata.sh
      - name: Install Python Dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-dev
      - name: Create Source Dist and Wheel
        run: poetry run poe dist
      - name: Upload gaphor-${{ steps.meta.outputs.version }}.tar.gz
        uses: actions/upload-artifact@v2
        with:
          name: gaphor-${{ steps.meta.outputs.version }}.tar.gz
          path: dist/gaphor-${{ steps.meta.outputs.version }}.tar.gz
      - name: Upload gaphor-${{ steps.meta.outputs.version }}-py3-none-any.whl
        uses: actions/upload-artifact@v2
        with:
          name: gaphor-${{ steps.meta.outputs.version }}-py3-none-any.whl
          path: dist/gaphor-${{ steps.meta.outputs.version }}-py3-none-any.whl
      - name: Build AppImage
        run: |
          poetry run poe package
          cd packaging/appimage
          make dist
      - name: Upload gaphor-${{ steps.meta.outputs.version }}-x86_64.AppImage
        uses: actions/upload-artifact@v2
        with:
          name: Gaphor-${{ steps.meta.outputs.version }}-x86_64.AppImage
          path: packaging/dist/Gaphor-${{ steps.meta.outputs.version }}-x86_64.AppImage
      - name: Upload Assets (release only)
        uses: AButler/upload-release-assets@v2.0
        if: github.event_name == 'release'
        with:
          files: "packaging/dist/*; dist/*"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to PyPI (release only)
        if: github.event_name == 'release'
        run: poetry publish -u __token__ -p ${{ secrets.PYPI_TOKEN }}
