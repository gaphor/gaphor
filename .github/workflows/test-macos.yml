name: Test with macOS

env:
  POETRY_VERSION: 1.1.7

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published, prereleased]

jobs:

  macos:
    runs-on: macos-latest
    timeout-minutes: 30
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    env:
      LDFLAGS: -L/usr/local/opt/python@3.9/lib
      PKG_CONFIG_PATH: /usr/local/opt/libffi/lib/pkgconfig:/usr/local/opt/python@3.9/lib/pkgconfig:${PKG_CONFIG_PATH:-}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
      - name: Install Dependencies
        run: brew install gobject-introspection gtk+3 adwaita-icon-theme gtk-mac-integration create-dmg upx
      - name: Install Poetry
        run: pip install poetry==$POETRY_VERSION
      - name: Collect Project Data
        id: meta
        run: .github/scripts/metadata.sh
      - name: Use Python Dependency Cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install Python Dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install
      - name: Test with Pytest
        run: poetry run poe test-all

  macos-gtk4:
    runs-on: macos-latest
    timeout-minutes: 30
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    env:
      LDFLAGS: -L/usr/local/opt/python@3.9/lib
      PKG_CONFIG_PATH: /usr/local/opt/libffi/lib/pkgconfig:/usr/local/opt/python@3.9/lib/pkgconfig:${PKG_CONFIG_PATH:-}
      GAPHOR_USE_GTK: 4
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
      - name: Install Dependencies
        run: brew install gobject-introspection gtk4 adwaita-icon-theme
      - name: Install Poetry
        run: pip install poetry==$POETRY_VERSION
      - name: Collect Project Data
        id: meta
        run: .github/scripts/metadata.sh
      - name: Use Python Dependency Cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install Python Dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install
      - name: Test with Pytest for GTK 4
        continue-on-error: true
        run: poetry run poe test-all
