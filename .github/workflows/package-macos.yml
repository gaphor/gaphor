name: Create and Upload macOS Package

env:
  POETRY_VERSION: 1.1.7

on:
  push:
# Once merged to master, enable this
#   branches:
#     - master
  release:
    types: [published, prereleased]

jobs:

  macos:
    runs-on: macos-latest
    timeout-minutes: 30
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    env:
      LDFLAGS: -L/usr/local/opt/python@3.9/lib
      PKG_CONFIG_PATH: /usr/local/opt/libffi/lib/pkgconfig:/usr/local/opt/python@3.9/lib/pkgconfig:${PKG_CONFIG_PATH:-}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
      - name: Install Dependencies
        run: brew install gobject-introspection gtk+3 adwaita-icon-theme gtk-mac-integration create-dmg upx
      - name: Install Poetry
        run: pip install poetry==$POETRY_VERSION
      - name: Collect Project Data
        id: meta
        run: .github/scripts/metadata.sh
      - name: Use Python Dependency Cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install Python Dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry run poe install-nodev
      - name: Import codesign certificate
        uses: apple-actions/import-codesign-certs@v1.0.4
        with:
          p12-file-base64: ${{ secrets.BASE64_ENCODED_P12 }}
          p12-password: ${{ secrets.CERTPASSWORD_P12 }}
      - name: Build Wheel
        run: poetry run poe dist
      - name: Create Signed macOS Application
        run: poetry run poe package-macos-signed
      - name: Notarize app
        uses: devbotsxyz/xcode-notarize@v1
        with:
          product-path: "packaging/dist/Gaphor.app"
          appstore-connect-username: ${{ secrets.AC_USERNAME }}
          appstore-connect-password: ${{ secrets.AC_PASSWORD }}
      - name: Staple app
        uses: devbotsxyz/xcode-staple@v1
        with:
          product-path: "packaging/dist/Gaphor.app"
      - name: Create dmg
        run: >
          cd packaging

          create-dmg --volname "Gaphor ${{ steps.meta.outputs.version }}"
          --background "macos/background.png"
          --window-pos 200 120 --window-size 700 400 --icon-size 100
          --icon "Gaphor.app" 200 240 --hide-extension "Gaphor.app"
          --app-drop-link 500 240 "dist/Gaphor-${{ steps.meta.outputs.version }}.dmg"
          "dist/Gaphor.app"
      - name: Notarize dmg
        uses: devbotsxyz/xcode-notarize@v1
        with:
          product-path: "packaging/dist/Gaphor-${{ steps.meta.outputs.version }}.dmg"
          appstore-connect-username: ${{ secrets.AC_USERNAME }}
          appstore-connect-password: ${{ secrets.AC_PASSWORD }}
          primary-bundle-id: org.gaphor.gaphor
      - name: Staple .dmg
        uses: devbotsxyz/xcode-staple@v1
        with:
          product-path: "packaging/dist/Gaphor-${{ steps.meta.outputs.version }}.dmg"
      - name: Upload Gaphor-${{ steps.meta.outputs.version }}.dmg
        uses: actions/upload-artifact@v2
        with:
          name: Gaphor-${{ steps.meta.outputs.version }}.dmg
          path: packaging/dist/Gaphor-${{ steps.meta.outputs.version }}.dmg
      - name: Upload Assets (release only)
        uses: AButler/upload-release-assets@v2.0
        if: github.event_name == 'release'
        with:
          files: "packaging/dist/Gaphor-${{ steps.meta.outputs.version }}.dmg"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
