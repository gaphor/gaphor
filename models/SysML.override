comment
  This is a file with custom definitions for Gaphor's data model.

  Parts are separated by '%%' (no training spaces) on a line.
  Comment parts start with 'comment' on the line below the percentage
  symbols, 'override' is used to define a overridden variable.

  Overrides may in their turn derive from other properties, in that case
  the 'derives' keyword may be used. It's only useful to declare the
  associations (and other derived properties) an overridden value depends
  on, since attributes have been written anyway. Note that no smart things
  wrt inheritance is done.
%%
header

def _directed_relationship_property_path_target_source(type):
    return lambda self: [
        element.targetContext
        for element in self.model.select(type)
        if element.sourceContext is self and element.targetContext
    ]
%%
override AbstractRequirement.derived: derived[AbstractRequirement]

AbstractRequirement.derived = derived("derived", AbstractRequirement, 0, "*",
    _directed_relationship_property_path_target_source(DeriveReqt))
%%
override AbstractRequirement.derivedFrom: derived[AbstractRequirement]

AbstractRequirement.derivedFrom = derived("derivedFrom", AbstractRequirement, 0, "*", lambda self: [
    element.sourceContext
    for element in self.model.select(DeriveReqt)
    if element.sourceContext and element.targetContext is self
])
%%
override AbstractRequirement.master: derived[AbstractRequirement]

AbstractRequirement.master = derived("master", AbstractRequirement, 0, "*",
    _directed_relationship_property_path_target_source(Copy))
%%
override AbstractRequirement.refinedBy: derived[_NamedElement]

AbstractRequirement.refinedBy = derived("refinedBy", _NamedElement, 0, "*",
    _directed_relationship_property_path_target_source(Refine))
%%
override AbstractRequirement.satisfiedBy: derived[_NamedElement]

AbstractRequirement.satisfiedBy = derived("satisfiedBy", _NamedElement, 0, "*",
    _directed_relationship_property_path_target_source(Satisfy))
%%
override AbstractRequirement.tracedTo: derived[_NamedElement]

AbstractRequirement.tracedTo = derived("tracedTo", _NamedElement, 0, "*",
    _directed_relationship_property_path_target_source(Trace))
%%
override AbstractRequirement.verifiedBy: derived[_NamedElement]

AbstractRequirement.verifiedBy = derived("verifiedBy", _NamedElement, 0, "*",
    _directed_relationship_property_path_target_source(Verify))
