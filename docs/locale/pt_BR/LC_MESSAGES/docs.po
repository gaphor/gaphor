# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001, The Gaphor Development Team
# This file is distributed under the same license as the Gaphor package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Gaphor 2.23.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-15 20:49-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../changelog.rst:2
msgid "Change Log"
msgstr ""

#: ../changelog.rst:4
msgid "This is a curated list of the changes per version."
msgstr ""

#: ../changelog.rst:8
msgid "The latest version may not have been released yet."
msgstr ""

#: ../../CHANGELOG.md:1
msgid "2.24.0"
msgstr ""

#: ../../CHANGELOG.md:3
msgid "Fine grained CSS styling for model elements"
msgstr ""

#: ../../CHANGELOG.md:4
msgid "Gaphor is now REUSE compliant"
msgstr ""

#: ../../CHANGELOG.md:5
msgid "Connected elements are no longer automatcally removed from a diagram"
msgstr ""

#: ../../CHANGELOG.md:6
msgid "Fix header bars for various windows"
msgstr ""

#: ../../CHANGELOG.md:7
msgid "Various smaller UX improvements: greeter, diagram background, empty parameters"
msgstr ""

#: ../../CHANGELOG.md:8
msgid "Install schemas by running `gaphor install-schemas`"
msgstr ""

#: ../../CHANGELOG.md:9
msgid "Mitigations for false virus warnings on Windows"
msgstr ""

#: ../../CHANGELOG.md:10
msgid "Fix issue when undoing fails"
msgstr ""

#: ../../CHANGELOG.md:12
msgid "2.23.2"
msgstr ""

#: ../../CHANGELOG.md:14
msgid "Fix models failing to load for collection not hashable TypeError"
msgstr ""

#: ../../CHANGELOG.md:15
msgid "Fix file filters for export image dialog"
msgstr ""

#: ../../CHANGELOG.md:16
msgid "Add CSS for \"from: \", stereotypes, and compartments"
msgstr ""

#: ../../CHANGELOG.md:17
msgid "Update Hungarian translations"
msgstr ""

#: ../../CHANGELOG.md:19
msgid "2.23.1"
msgstr ""

#: ../../CHANGELOG.md:21
msgid "Fix Activity Swimlanes aren't visible"
msgstr ""

#: ../../CHANGELOG.md:22
msgid "Fix CSS attribute rules"
msgstr ""

#: ../../CHANGELOG.md:23
msgid "Remove duplicate stereotypes at root of model browser"
msgstr ""

#: ../../CHANGELOG.md:24
#: ../../CHANGELOG.md:124
msgid "Update Croatian translations"
msgstr ""

#: ../../CHANGELOG.md:26
msgid "2.23.0"
msgstr ""

#: ../../CHANGELOG.md:28
msgid "Support types for parameters"
msgstr ""

#: ../../CHANGELOG.md:29
msgid "Restore windows in maximized and full-screen state"
msgstr ""

#: ../../CHANGELOG.md:30
msgid "Fine grained CSS: elements in a presentation item can be changed from CSS (experimental)"
msgstr ""

#: ../../CHANGELOG.md:31
msgid "Very long element names are now wrapped"
msgstr ""

#: ../../CHANGELOG.md:32
msgid "Format files accessed from Flatpak via portals"
msgstr ""

#: ../../CHANGELOG.md:33
msgid "Update Property Editor to use Gtk.ColumnView and ListView"
msgstr ""

#: ../../CHANGELOG.md:34
msgid "Replace deprecated Gtk.FileChooser by FileDialog"
msgstr ""

#: ../../CHANGELOG.md:35
msgid "Replace in-app notifications by Adwaita Toasts"
msgstr ""

#: ../../CHANGELOG.md:36
msgid "macOS: Update app icon"
msgstr ""

#: ../../CHANGELOG.md:37
msgid "macOS: Fix ⓘ icon in Property Editor isn't displayed"
msgstr ""

#: ../../CHANGELOG.md:38
msgid "macOS and Windows: Apply custom window shadow"
msgstr ""

#: ../../CHANGELOG.md:39
msgid "Fix Gaphor should work if GSettings schema is not available"
msgstr ""

#: ../../CHANGELOG.md:40
msgid "Fix values showing under part compartment in SysML Block elements"
msgstr ""

#: ../../CHANGELOG.md:41
msgid "Fix merge-node icon"
msgstr ""

#: ../../CHANGELOG.md:42
msgid "Fix connecting lines when model is loaded and documentation updates"
msgstr ""

#: ../../CHANGELOG.md:43
msgid "Fix macOS build and documentation generation"
msgstr ""

#: ../../CHANGELOG.md:44
msgid "Update Russian, Chinese, Polish, Hungarian, Turkish and German translations"
msgstr ""

#: ../../CHANGELOG.md:46
msgid "2.22.1"
msgstr ""

#: ../../CHANGELOG.md:48
msgid "Flatpak: Fix app preferences aren't saved"
msgstr ""

#: ../../CHANGELOG.md:49
msgid "Fix TypeError when changing to dark mode and refactor settings"
msgstr ""

#: ../../CHANGELOG.md:50
msgid "Fix grouping: allow to group to \"root\""
msgstr ""

#: ../../CHANGELOG.md:51
msgid "Add support for dropping SysML diagrams on diagrams"
msgstr ""

#: ../../CHANGELOG.md:52
msgid "Catch errors when a clipboard is empty"
msgstr ""

#: ../../CHANGELOG.md:53
msgid "Fix DnD file opening on macOS"
msgstr ""

#: ../../CHANGELOG.md:54
msgid "Fix libadwaita 1.4.0 missing for hypothesis tests"
msgstr ""

#: ../../CHANGELOG.md:55
msgid "Make ActivityParameterNode droppable"
msgstr ""

#: ../../CHANGELOG.md:57
msgid "2.22.0"
msgstr ""

#: ../../CHANGELOG.md:59
msgid "Proxy port improvements"
msgstr ""

#: ../../CHANGELOG.md:60
msgid "Add preferences for overriding dark mode and language to English"
msgstr ""

#: ../../CHANGELOG.md:61
msgid "Add allocations toolbox with allocate relationship item"
msgstr ""

#: ../../CHANGELOG.md:62
msgid "Add members in model browser"
msgstr ""

#: ../../CHANGELOG.md:63
msgid "Make line selection easier by increasing tolerance"
msgstr ""

#: ../../CHANGELOG.md:64
msgid "Make model loading more lenient"
msgstr ""

#: ../../CHANGELOG.md:65
msgid "Remove duplicated elements in Component.provided property"
msgstr ""

#: ../../CHANGELOG.md:66
msgid "Replace Black, check toml, isort, and refurb with Ruff"
msgstr ""

#: ../../CHANGELOG.md:67
msgid "macOS: fix About dialog links"
msgstr ""

#: ../../CHANGELOG.md:68
msgid "macOS: upgrade notarization from altool to notarytool"
msgstr ""

#: ../../CHANGELOG.md:69
msgid "Upgrade to libadwaita 1.4.0"
msgstr ""

#: ../../CHANGELOG.md:70
msgid "Update Sphinx to version 6.0"
msgstr ""

#: ../../CHANGELOG.md:71
msgid "Update PyInstaller to version 6.1"
msgstr ""

#: ../../CHANGELOG.md:72
msgid "Clean up transactional event handling"
msgstr ""

#: ../../CHANGELOG.md:73
msgid "Use defusedxml to avoid loading potentially dangerous xml"
msgstr ""

#: ../../CHANGELOG.md:74
msgid "Update Portuguese (Brazilian), Italian, Tamil,"
msgstr ""

#: ../../CHANGELOG.md:76
msgid "2.21.0"
msgstr ""

#: ../../CHANGELOG.md:78
msgid "Add picture as core element"
msgstr ""

#: ../../CHANGELOG.md:79
msgid "Move diagram elements with the arrow keys"
msgstr ""

#: ../../CHANGELOG.md:80
msgid "Add interface block to element creation menu"
msgstr ""

#: ../../CHANGELOG.md:81
msgid "Support state entry, exit, and do behavior selection via dropdown"
msgstr ""

#: ../../CHANGELOG.md:82
msgid "Add feature to align diagram elements"
msgstr ""

#: ../../CHANGELOG.md:83
msgid "Display type of element in the properties panel"
msgstr ""

#: ../../CHANGELOG.md:84
msgid "Removed unnecessary operations and attributes for requirements"
msgstr ""

#: ../../CHANGELOG.md:85
msgid "Enable macOS keybindings again"
msgstr ""

#: ../../CHANGELOG.md:86
msgid "Fix missing derive relationship icon in the model browser"
msgstr ""

#: ../../CHANGELOG.md:87
msgid "Fix block not showing parts and references"
msgstr ""

#: ../../CHANGELOG.md:88
msgid "Fixed Profile is created instead of Stereotype in model browser"
msgstr ""

#: ../../CHANGELOG.md:89
msgid "Add ownership rules to DirectedRelationshipPropertyPath.targetContext"
msgstr ""

#: ../../CHANGELOG.md:90
msgid "Add tests and fix `Component.required`"
msgstr ""

#: ../../CHANGELOG.md:91
msgid "Present the Greeter, instead of only making it visible"
msgstr ""

#: ../../CHANGELOG.md:92
msgid "Fix derive-reqt model browser icon"
msgstr ""

#: ../../CHANGELOG.md:93
msgid "Improve coverage reporting"
msgstr ""

#: ../../CHANGELOG.md:94
msgid "Add system style sheet to the documentation"
msgstr ""

#: ../../CHANGELOG.md:96
msgid "2.20.0"
msgstr ""

#: ../../CHANGELOG.md:98
msgid "Add ValueSpecificationAction"
msgstr ""

#: ../../CHANGELOG.md:99
msgid "New element creation through model browser"
msgstr ""

#: ../../CHANGELOG.md:100
msgid "Interface block support on diagram"
msgstr ""

#: ../../CHANGELOG.md:101
msgid "Constrain SysML diagram creation in the model explorer to conform with SysML 1.6 specification"
msgstr ""

#: ../../CHANGELOG.md:102
msgid "Add type selection for Lifelines"
msgstr ""

#: ../../CHANGELOG.md:103
msgid "Support SysMLDiagram type and diagram type specific header formatting"
msgstr ""

#: ../../CHANGELOG.md:104
msgid "Pin type multiplicity"
msgstr ""

#: ../../CHANGELOG.md:105
msgid "Deep copy for packages and diagrams"
msgstr ""

#: ../../CHANGELOG.md:106
msgid "Add Direct association to toolbar menu"
msgstr ""

#: ../../CHANGELOG.md:107
msgid "Add CallBehaviorAction to Activity profile"
msgstr ""

#: ../../CHANGELOG.md:108
msgid "Add operations compartment to Blocks"
msgstr ""

#: ../../CHANGELOG.md:109
msgid "Toggle visibility of ProxyPort type"
msgstr ""

#: ../../CHANGELOG.md:110
msgid "Provide value for 'Show value' in properties page"
msgstr ""

#: ../../CHANGELOG.md:111
msgid "Format pins by their name"
msgstr ""

#: ../../CHANGELOG.md:112
msgid "Do not remove unused Packages with children"
msgstr ""

#: ../../CHANGELOG.md:113
msgid "Fix: tree view should not collapse when an element is deleted"
msgstr ""

#: ../../CHANGELOG.md:114
msgid "Fix: only open model browser elements with a model element"
msgstr ""

#: ../../CHANGELOG.md:115
msgid "Upgrade Gvsbuild to 2023.7.1"
msgstr ""

#: ../../CHANGELOG.md:116
msgid "Update minimal Python version to 3.10"
msgstr ""

#: ../../CHANGELOG.md:117
msgid "Fix: ensure a newly placed item is no longer a dropzone item"
msgstr ""

#: ../../CHANGELOG.md:118
msgid "Fix: incorrect filling between shapes"
msgstr ""

#: ../../CHANGELOG.md:119
msgid "Fix: weird pin rendering"
msgstr ""

#: ../../CHANGELOG.md:120
msgid "Fix: diagram background shouldn't be shared between open models"
msgstr ""

#: ../../CHANGELOG.md:121
msgid "Fix: activity parameter node is always stuck to the activity when moving"
msgstr ""

#: ../../CHANGELOG.md:122
msgid "Fix: notes should be applied to model elements and will be named \"Note\""
msgstr ""

#: ../../CHANGELOG.md:123
msgid "Fix: error when inverting association"
msgstr ""

#: ../../CHANGELOG.md:126
msgid "2.19.3"
msgstr ""

#: ../../CHANGELOG.md:128
msgid "Windows: Fix missing toolbar icons"
msgstr ""

#: ../../CHANGELOG.md:129
msgid "Fix loading of ProxyPorts with informationFlow attached"
msgstr ""

#: ../../CHANGELOG.md:130
msgid "Fix to resolve CSS style variables before using the values"
msgstr ""

#: ../../CHANGELOG.md:132
msgid "2.19.2"
msgstr ""

#: ../../CHANGELOG.md:134
msgid "Add SysML Requirements trace derived unions"
msgstr ""

#: ../../CHANGELOG.md:135
msgid "Fix Parameter Node and Execution Specification with Dark mode"
msgstr ""

#: ../../CHANGELOG.md:136
msgid "Scale parameter nodes to contain long names"
msgstr ""

#: ../../CHANGELOG.md:137
msgid "Lenient derived unions"
msgstr ""

#: ../../CHANGELOG.md:138
msgid "Fix segfault by reverting Gtk.ListVew for Parameters"
msgstr ""

#: ../../CHANGELOG.md:139
msgid "Fix connect interaction fragments"
msgstr ""

#: ../../CHANGELOG.md:140
msgid "chore: clean up deprecated properties from UIComponent"
msgstr ""

#: ../../CHANGELOG.md:141
msgid "Add Python 3.12 Support, Update Poetry to version 1.5.1"
msgstr ""

#: ../../CHANGELOG.md:142
msgid "Apply security best practices to GitHub Actions"
msgstr ""

#: ../../CHANGELOG.md:143
msgid "Create a Security Policy and Run Scorecard Checks"
msgstr ""

#: ../../CHANGELOG.md:144
msgid "Only use mature translations for released versions of Gaphor"
msgstr ""

#: ../../CHANGELOG.md:145
msgid "Update Spanish, Hungarian, and Finnish translations"
msgstr ""

#: ../../CHANGELOG.md:146
msgid "Fix scaling of Activity Parameter nodes"
msgstr ""

#: ../../CHANGELOG.md:148
msgid "2.19.1"
msgstr ""

#: ../../CHANGELOG.md:150
msgid "Fix: order is preserved when undoing a change"
msgstr ""

#: ../../CHANGELOG.md:151
msgid "Actions: ObjectNode now also connects to decision/merge and join/fork nodes."
msgstr ""

#: ../../CHANGELOG.md:152
msgid "Fix: ports should be nested under properties"
msgstr ""

#: ../../CHANGELOG.md:153
msgid "Experimental: support for plugins"
msgstr ""

#: ../../CHANGELOG.md:154
msgid "Add fullscreen mode with F11"
msgstr ""

#: ../../CHANGELOG.md:155
msgid "Remove Tkinter from packaging"
msgstr ""

#: ../../CHANGELOG.md:157
msgid "2.19.0"
msgstr ""

#: ../../CHANGELOG.md:159
msgid "Dropped support for AppImage"
msgstr ""

#: ../../CHANGELOG.md:160
msgid "Add Information Flow support for Associations"
msgstr ""

#: ../../CHANGELOG.md:161
msgid "Interactions: fixed DnD for partially connected messages"
msgstr ""

#: ../../CHANGELOG.md:162
msgid "Restore CSS auto-complete"
msgstr ""

#: ../../CHANGELOG.md:163
msgid "Docs: A coffee machine tutorial has been added"
msgstr ""

#: ../../CHANGELOG.md:164
msgid "Make model loading more lenient to model corruption"
msgstr ""

#: ../../CHANGELOG.md:165
msgid "CLI: export diagrams and run scripts within Gaphor"
msgstr ""

#: ../../CHANGELOG.md:166
msgid "Enable PyPI Trusted Publisher"
msgstr ""

#: ../../CHANGELOG.md:167
msgid "Replace deprecated Gtk.TreeView with ListView: Activity Parameter Nodes"
msgstr ""

#: ../../CHANGELOG.md:168
msgid "Use consistent naming for element_factory in storage module"
msgstr ""

#: ../../CHANGELOG.md:169
msgid "Use new style Dropdowns for selecting items in property editor"
msgstr ""

#: ../../CHANGELOG.md:170
msgid "Updates to translations"
msgstr ""

#: ../../CHANGELOG.md:172
msgid "2.18.1"
msgstr ""

#: ../../CHANGELOG.md:174
msgid "Make operations visible on Blocks"
msgstr ""

#: ../../CHANGELOG.md:175
msgid "A quick fix for crashes in the CSS editor, disable autocomplete"
msgstr ""

#: ../../CHANGELOG.md:176
msgid "Fix doc translation catalogs not found"
msgstr ""

#: ../../CHANGELOG.md:177
msgid "Fix encoding warnings for no encoding argument"
msgstr ""

#: ../../CHANGELOG.md:178
msgid "Update AppImage build with GTK 4.10"
msgstr ""

#: ../../CHANGELOG.md:179
msgid "Add non-goals to README"
msgstr ""

#: ../../CHANGELOG.md:180
msgid "Enable translation of docs, and add Crotian, German, and Dutch"
msgstr ""

#: ../../CHANGELOG.md:181
msgid "Updates to most translations and add Tamil"
msgstr ""

#: ../../CHANGELOG.md:183
msgid "2.18.0"
msgstr ""

#: ../../CHANGELOG.md:185
msgid "Support for manually resolving Git merge conflicts"
msgstr ""

#: ../../CHANGELOG.md:186
msgid "Drop support for GTK3, bundle macOS with GTK4"
msgstr ""

#: ../../CHANGELOG.md:187
msgid "Enable middle-click mouse scrolling of diagrams"
msgstr ""

#: ../../CHANGELOG.md:188
msgid "Support for changing the spoken language in a model"
msgstr ""

#: ../../CHANGELOG.md:189
msgid "Add diagrams in diagrams"
msgstr ""

#: ../../CHANGELOG.md:190
msgid "Upgrade development build to GNOME 44"
msgstr ""

#: ../../CHANGELOG.md:191
msgid "Clean up application architecture for copy service"
msgstr ""

#: ../../CHANGELOG.md:192
msgid "Css editor dark mode"
msgstr ""

#: ../../CHANGELOG.md:193
msgid "macOS: update notarize, staple, and cert actions"
msgstr ""

#: ../../CHANGELOG.md:194
msgid "Just load modules for gaphor.modules entry points"
msgstr ""

#: ../../CHANGELOG.md:195
msgid "Finnish, Dutch, Spanish, Polish, Portuguese (BRA) translation update"
msgstr ""

#: ../../CHANGELOG.md:196
msgid "Toggle the \"no tabs\" background based on notebook activity"
msgstr ""

#: ../../CHANGELOG.md:197
msgid "Fix drag from model browser"
msgstr ""

#: ../../CHANGELOG.md:198
msgid "Fix orthogonal lines during copy/paste"
msgstr ""

#: ../../CHANGELOG.md:199
msgid "Update diagram directly when partitions change"
msgstr ""

#: ../../CHANGELOG.md:200
msgid "Make main window always available to avoid warnings"
msgstr ""

#: ../../CHANGELOG.md:202
msgid "2.17.0"
msgstr ""

#: ../../CHANGELOG.md:204
msgid "Add support for diagram metadata"
msgstr ""

#: ../../CHANGELOG.md:205
msgid "macOS: Fix freeze creating new diagram"
msgstr ""

#: ../../CHANGELOG.md:206
msgid "Properly unsubscribe when property page is removed"
msgstr ""

#: ../../CHANGELOG.md:207
msgid "Package GSettings daemon schemas for AppImage"
msgstr ""

#: ../../CHANGELOG.md:208
msgid "Consider only default modifiers in toolbox shortcuts"
msgstr ""

#: ../../CHANGELOG.md:209
msgid "New status page icon"
msgstr ""

#: ../../CHANGELOG.md:210
msgid "Workaround removing skip-changelog labels"
msgstr ""

#: ../../CHANGELOG.md:211
msgid "Update gvsbuild to version 2023.2.0"
msgstr ""

#: ../../CHANGELOG.md:212
msgid "meta: Add .doap-file"
msgstr ""

#: ../../CHANGELOG.md:213
msgid "Update \"Keep model in sync\" design principle"
msgstr ""

#: ../../CHANGELOG.md:214
msgid "Update to using the GNOME Code of Conduct"
msgstr ""

#: ../../CHANGELOG.md:215
msgid "Add Polish translation"
msgstr ""

#: ../../CHANGELOG.md:216
msgid "Spanish, Dutch, Croatian, Turkish, and German Translation Updates"
msgstr ""

#: ../../CHANGELOG.md:218
msgid "2.16.0"
msgstr ""

#: ../../CHANGELOG.md:220
msgid "Automatic switching to dark mode in diagrams"
msgstr ""

#: ../../CHANGELOG.md:221
msgid "Add Model browser multi select and popup menu"
msgstr ""

#: ../../CHANGELOG.md:222
msgid "Refactor and improve model browser"
msgstr ""

#: ../../CHANGELOG.md:223
msgid "Use normal + icon for new diagram dropdown"
msgstr ""

#: ../../CHANGELOG.md:224
msgid "Add support for CSS variables and named colors"
msgstr ""

#: ../../CHANGELOG.md:225
msgid "Apply development mode for dev releases"
msgstr ""

#: ../../CHANGELOG.md:226
msgid "Show diagram name in header"
msgstr ""

#: ../../CHANGELOG.md:227
msgid "Show something when no diagrams are opened"
msgstr ""

#: ../../CHANGELOG.md:228
msgid "Fix the packaged data dirs"
msgstr ""

#: ../../CHANGELOG.md:229
msgid "Stabilize macOS/GTK tests"
msgstr ""

#: ../../CHANGELOG.md:230
msgid "Add a comments option to our documentation"
msgstr ""

#: ../../CHANGELOG.md:231
msgid "Split tips in to multiple labels"
msgstr ""

#: ../../CHANGELOG.md:232
msgid "Win and macOS: Fix wrong language selected when region not default"
msgstr ""

#: ../../CHANGELOG.md:233
msgid "Fix translation warning never logged with missing mo files"
msgstr ""

#: ../../CHANGELOG.md:234
msgid "Spanish, Russian, Hungarian, Czech translation update"
msgstr ""

#: ../../CHANGELOG.md:236
msgid "2.15.0"
msgstr ""

#: ../../CHANGELOG.md:238
msgid "Add basic git merge conflict support by asking which model to load"
msgstr ""

#: ../../CHANGELOG.md:239
msgid "Improvements to CSS autocomplete with function completion"
msgstr ""

#: ../../CHANGELOG.md:240
msgid "Insert colons, spaces, and () automatically for CSS autocomplete"
msgstr ""

#: ../../CHANGELOG.md:241
msgid "Use native file chooser in Windows"
msgstr ""

#: ../../CHANGELOG.md:242
msgid "Fix translations not loading in Windows, macOS, and AppImage"
msgstr ""

#: ../../CHANGELOG.md:243
msgid "Fix PyInstaller versionfile parse error with pre-release versions"
msgstr ""

#: ../../CHANGELOG.md:244
msgid "Update CI to publish to PyPI after all other jobs have passed"
msgstr ""

#: ../../CHANGELOG.md:245
msgid "Replace pytest-mock with monkeypatch for tests"
msgstr ""

#: ../../CHANGELOG.md:246
msgid "Fix PEP597 encoding warnings"
msgstr ""

#: ../../CHANGELOG.md:247
msgid "Fix regression that caused line handles to not snap to elements"
msgstr ""

#: ../../CHANGELOG.md:248
msgid "Add Turkish, and update French, Russian, and Swedish translations"
msgstr ""

#: ../../CHANGELOG.md:249
msgid "Remove translation Makefile"
msgstr ""

#: ../../CHANGELOG.md:251
msgid "2.14.2"
msgstr ""

#: ../../CHANGELOG.md:253
msgid "Fix macOS release failed"
msgstr ""

#: ../../CHANGELOG.md:255
msgid "2.14.1"
msgstr ""

#: ../../CHANGELOG.md:257
msgid "Add autocompletion for CSS properties"
msgstr ""

#: ../../CHANGELOG.md:258
msgid "Fix coredumps on Flatpak"
msgstr ""

#: ../../CHANGELOG.md:259
msgid "Hide New Package menu unless package selected"
msgstr ""

#: ../../CHANGELOG.md:260
msgid "Update Getting Started pages"
msgstr ""

#: ../../CHANGELOG.md:261
msgid "Spanish translation update"
msgstr ""

#: ../../CHANGELOG.md:263
msgid "2.14.0"
msgstr ""

#: ../../CHANGELOG.md:265
msgid "Simplify the greeter and provide more info to new users"
msgstr ""

#: ../../CHANGELOG.md:266
msgid "New element handle and toolbox styles"
msgstr ""

#: ../../CHANGELOG.md:267
msgid "Use system fonts by default for diagrams"
msgstr ""

#: ../../CHANGELOG.md:268
msgid "Add tooltips to the application header icons"
msgstr ""

#: ../../CHANGELOG.md:269
msgid "Make sequence diagram messages horizontal by default"
msgstr ""

#: ../../CHANGELOG.md:270
msgid "Make keyboard shortcuts more standard especially on macOS"
msgstr ""

#: ../../CHANGELOG.md:271
msgid "macOS: cursor shortcuts for text entry widgets"
msgstr ""

#: ../../CHANGELOG.md:272
msgid "Load template as part of CI self-test"
msgstr ""

#: ../../CHANGELOG.md:273
msgid "Update docs to make it more clear how to edit CSS"
msgstr ""

#: ../../CHANGELOG.md:274
msgid "Switch doc style to Furo"
msgstr ""

#: ../../CHANGELOG.md:275
msgid "Add custom style sheet language"
msgstr ""

#: ../../CHANGELOG.md:276
msgid "Support non-standard Sphinx directory structures"
msgstr ""

#: ../../CHANGELOG.md:277
msgid "Continue to make model loading and saving more reliable"
msgstr ""

#: ../../CHANGELOG.md:278
msgid "Move Control Flow line style to CSS"
msgstr ""

#: ../../CHANGELOG.md:279
msgid "Do not auto-layout sequence diagrams"
msgstr ""

#: ../../CHANGELOG.md:280
msgid "Use new actions/cache/(save|restore)"
msgstr ""

#: ../../CHANGELOG.md:281
msgid "Remove querymixin from modeling lists"
msgstr ""

#: ../../CHANGELOG.md:282
msgid "Improve Windows build reliability by limiting cores to 2"
msgstr ""

#: ../../CHANGELOG.md:283
msgid "Croatian, Hungarian, Czech, Swedish, and Finnish translation updates"
msgstr ""

#: ../../CHANGELOG.md:285
msgid "2.13.0"
msgstr ""

#: ../../CHANGELOG.md:287
msgid "Auto-layout for diagrams"
msgstr ""

#: ../../CHANGELOG.md:288
msgid "Relations to actors can connect below actor name"
msgstr ""

#: ../../CHANGELOG.md:289
msgid "Export to EPS"
msgstr ""

#: ../../CHANGELOG.md:290
msgid "Zoom with Ctrl+scroll wheel works again"
msgstr ""

#: ../../CHANGELOG.md:291
msgid "Recent files is disabled if none are present"
msgstr ""

#: ../../CHANGELOG.md:292
msgid "Windows and AppImage are upgraded to GTK4"
msgstr ""

#: ../../CHANGELOG.md:293
msgid "Update packaging to use Python 3.11"
msgstr ""

#: ../../CHANGELOG.md:294
msgid "Many GTK4 improvements: About window, diagram tabs, message dialogs"
msgstr ""

#: ../../CHANGELOG.md:295
msgid "Ensure toolbox is always visible"
msgstr ""

#: ../../CHANGELOG.md:296
msgid "Add additional tests around architectural rules"
msgstr ""

#: ../../CHANGELOG.md:297
msgid "Many translation updates and bug fixes"
msgstr ""

#: ../../CHANGELOG.md:299
msgid "2.12.1"
msgstr ""

#: ../../CHANGELOG.md:301
msgid "Fix/move connected handle"
msgstr ""

#: ../../CHANGELOG.md:302
msgid "Fix error when disconnecting line with multiple segments"
msgstr ""

#: ../../CHANGELOG.md:303
msgid "Fail CI build if Windows certificate signing fails"
msgstr ""

#: ../../CHANGELOG.md:304
msgid "namespace.py: Actually set properties for rectangle"
msgstr ""

#: ../../CHANGELOG.md:305
msgid "Update Shortcuts window"
msgstr ""

#: ../../CHANGELOG.md:307
msgid "2.12.0"
msgstr ""

#: ../../CHANGELOG.md:309
msgid "GTK4 is now the default for Flatpak; Windows, macOS, and AppImage still use GTK3"
msgstr ""

#: ../../CHANGELOG.md:310
msgid "Save folder is remembered across save actions"
msgstr ""

#: ../../CHANGELOG.md:311
msgid "State machine functionality has been expanded, including support for regions"
msgstr ""

#: ../../CHANGELOG.md:312
msgid "Resize of partition keeps actions in the same swimlane"
msgstr ""

#: ../../CHANGELOG.md:313
msgid "Activities (behaviors) can be assigned to classifiers"
msgstr ""

#: ../../CHANGELOG.md:314
msgid "Stereotypes can be inherited from other stereotypes"
msgstr ""

#: ../../CHANGELOG.md:315
msgid "Many GTK4 fixes: rename, search, instant editors"
msgstr ""

#: ../../CHANGELOG.md:316
msgid "Many translation updates"
msgstr ""

#: ../../CHANGELOG.md:318
msgid "2.11.0"
msgstr ""

#: ../../CHANGELOG.md:320
msgid "Add Copy/Paste for GTK4"
msgstr ""

#: ../../CHANGELOG.md:321
msgid "Make dialogs work with GTK4"
msgstr ""

#: ../../CHANGELOG.md:322
msgid "Fix instant editors for GTK4"
msgstr ""

#: ../../CHANGELOG.md:323
msgid "Update list view for GTK4"
msgstr ""

#: ../../CHANGELOG.md:324
msgid "Make SysML Enumerations also ValueTypes"
msgstr ""

#: ../../CHANGELOG.md:325
msgid "Add union types"
msgstr ""

#: ../../CHANGELOG.md:326
msgid "Let Gaphor check for its own health"
msgstr ""

#: ../../CHANGELOG.md:327
msgid "Add error reports window"
msgstr ""

#: ../../CHANGELOG.md:328
msgid "Add element to diagram by double click"
msgstr ""

#: ../../CHANGELOG.md:329
msgid "Ensure all models are saved with UTF-8 encoding"
msgstr ""

#: ../../CHANGELOG.md:330
msgid "Fix states can't transition to themselves"
msgstr ""

#: ../../CHANGELOG.md:331
msgid "Fix unlinking elements from the model"
msgstr ""

#: ../../CHANGELOG.md:332
msgid "Fix issue with fully pasting a diagram"
msgstr ""

#: ../../CHANGELOG.md:333
msgid "Fix scroll speed for touch screens"
msgstr ""

#: ../../CHANGELOG.md:334
msgid "Fix codeql warnings and error"
msgstr ""

#: ../../CHANGELOG.md:335
msgid "Improve text placement for Associations"
msgstr ""

#: ../../CHANGELOG.md:336
msgid "Enable additional pre-commit hooks"
msgstr ""

#: ../../CHANGELOG.md:337
msgid "Add example in docs of color for comments using CSS"
msgstr ""

#: ../../CHANGELOG.md:338
msgid "Hungarian translation updates"
msgstr ""

#: ../../CHANGELOG.md:340
msgid "2.10.0"
msgstr ""

#: ../../CHANGELOG.md:342
msgid "Pin support for activity diagram"
msgstr ""

#: ../../CHANGELOG.md:343
msgid "Add Activity item to diagram"
msgstr ""

#: ../../CHANGELOG.md:344
msgid "Allow to drag and drop all elements from tree view to diagram"
msgstr ""

#: ../../CHANGELOG.md:345
msgid "Codegen use all defined modeling languages"
msgstr ""

#: ../../CHANGELOG.md:346
msgid "Fix diagram dependency cycle"
msgstr ""

#: ../../CHANGELOG.md:347
msgid "Add Skip Duplicate Action and Release-Drafter Permissions"
msgstr ""

#: ../../CHANGELOG.md:348
msgid "Update permissions for CodeQL GitHub Action"
msgstr ""

#: ../../CHANGELOG.md:349
msgid "Include all diagram items in test model"
msgstr ""

#: ../../CHANGELOG.md:350
msgid "Fix GTK4 property page layouts"
msgstr ""

#: ../../CHANGELOG.md:351
msgid "Use official RAAML logo in greeter"
msgstr ""

#: ../../CHANGELOG.md:352
msgid "Relation metadata to allow better reuse"
msgstr ""

#: ../../CHANGELOG.md:353
msgid "Rename relationship connector base classes"
msgstr ""

#: ../../CHANGELOG.md:354
msgid "Add design principles to docs"
msgstr ""

#: ../../CHANGELOG.md:355
msgid "French, Finnish, Croatian translation update"
msgstr ""

#: ../../CHANGELOG.md:357
msgid "2.9.2"
msgstr ""

#: ../../CHANGELOG.md:359
msgid "Fix Windows build"
msgstr ""

#: ../../CHANGELOG.md:361
msgid "2.9.1"
msgstr ""

#: ../../CHANGELOG.md:363
msgid "Fix bad release of version 2.9.0"
msgstr ""

#: ../../CHANGELOG.md:364
msgid "Cleanup try except blocks and add more f-strings"
msgstr ""

#: ../../CHANGELOG.md:366
msgid "2.9.0"
msgstr ""

#: ../../CHANGELOG.md:368
msgid "Separate Control and Object Flow"
msgstr ""

#: ../../CHANGELOG.md:369
msgid "Automatically select dark mode for macOS and Windows"
msgstr ""

#: ../../CHANGELOG.md:370
msgid "Automatically Enable Rename Prompt for Newly Created Diagrams"
msgstr ""

#: ../../CHANGELOG.md:371
msgid "New group function for element grouping"
msgstr ""

#: ../../CHANGELOG.md:372
msgid "Simulate user behavior with Hypothesis and fix uncovered bugs"
msgstr ""

#: ../../CHANGELOG.md:373
msgid "Proxyport: update ports when proxyport is moved"
msgstr ""

#: ../../CHANGELOG.md:374
msgid "Fix AppImage Crashes on Save Command"
msgstr ""

#: ../../CHANGELOG.md:375
msgid "Improve reconnect for relationships"
msgstr ""

#: ../../CHANGELOG.md:376
msgid "Update connection behavior for Association"
msgstr ""

#: ../../CHANGELOG.md:377
msgid "Enable preferences shortcut"
msgstr ""

#: ../../CHANGELOG.md:378
msgid "Rename Component Toolbox to Deployment"
msgstr ""

#: ../../CHANGELOG.md:379
msgid "Update Finnish, Spanish, Croation, and German translatio"
msgstr ""

#: ../../CHANGELOG.md:381
msgid "2.8.2"
msgstr ""

#: ../../CHANGELOG.md:383
msgid "Fix splitting of lines"
msgstr ""

#: ../../CHANGELOG.md:384
msgid "Update README to reflect new functionality"
msgstr ""

#: ../../CHANGELOG.md:385
msgid "Add additional strings to translations"
msgstr ""

#: ../../CHANGELOG.md:386
msgid "Update Hungarian, Spanish, and Finnish translations"
msgstr ""

#: ../../CHANGELOG.md:388
msgid "2.8.1"
msgstr ""

#: ../../CHANGELOG.md:390
msgid "Fix Gaphor fails to load when launched in German"
msgstr ""

#: ../../CHANGELOG.md:391
msgid "Simplify the greeter dialogs"
msgstr ""

#: ../../CHANGELOG.md:392
msgid "Update Hungarian, Finnish, and Chinese (Simplified) translations"
msgstr ""

#: ../../CHANGELOG.md:394
msgid "2.8.0"
msgstr ""

#: ../../CHANGELOG.md:396
msgid "Add diagram type support"
msgstr ""

#: ../../CHANGELOG.md:397
msgid "Improve the welcoming experience with a greeter window and starting templates"
msgstr ""

#: ../../CHANGELOG.md:398
msgid "Add a Magnet-tool"
msgstr ""

#: ../../CHANGELOG.md:399
msgid "Support SysML Item flow"
msgstr ""

#: ../../CHANGELOG.md:400
msgid "Stereotypes for ItemFlow properties"
msgstr ""

#: ../../CHANGELOG.md:401
msgid "Full Copy/Paste of model elements"
msgstr ""

#: ../../CHANGELOG.md:402
msgid "Allow for deleting elements in the tree view"
msgstr ""

#: ../../CHANGELOG.md:403
msgid "Allocation of structural types to swimlane partitions"
msgstr ""

#: ../../CHANGELOG.md:404
msgid "User notification when model elements are automatically removed"
msgstr ""

#: ../../CHANGELOG.md:405
msgid "Store toolbox settings per modeling language"
msgstr ""

#: ../../CHANGELOG.md:406
msgid "Grow item when an item is dropped on it"
msgstr ""

#: ../../CHANGELOG.md:407
msgid "Add \"values\" compartment to Block item and set a minimal height for compartments"
msgstr ""

#: ../../CHANGELOG.md:408
msgid "Support empty square bracket notation in an Operation"
msgstr ""

#: ../../CHANGELOG.md:409
msgid "New code generator"
msgstr ""

#: ../../CHANGELOG.md:410
msgid "Fix AppImage GLIBC Error on Older Distro Versions"
msgstr ""

#: ../../CHANGELOG.md:411
msgid "Fix Sequence diagram loading when message is close to lifeline body"
msgstr ""

#: ../../CHANGELOG.md:412
msgid "Support for loading .gaphor files directly from the macOS Finder"
msgstr ""

#: ../../CHANGELOG.md:413
msgid "Fix positions of nested items during undo"
msgstr ""

#: ../../CHANGELOG.md:414
msgid "Fix ownership of Connector, ProxyPort, and ItemFlow"
msgstr ""

#: ../../CHANGELOG.md:415
msgid "Improve GTK4 compatibility"
msgstr ""

#: ../../CHANGELOG.md:416
msgid "Improve clarity of syntax for attributes and operations using a popover"
msgstr ""

#: ../../CHANGELOG.md:417
msgid "Clean up Toolbox and remove some legacy code"
msgstr ""

#: ../../CHANGELOG.md:418
msgid "Invert association creation"
msgstr ""

#: ../../CHANGELOG.md:419
msgid "Ensure model consistency on save and fork node loading fixes"
msgstr ""

#: ../../CHANGELOG.md:420
msgid "Core as a separate ModelingLanguage"
msgstr ""

#: ../../CHANGELOG.md:421
msgid "Use symbolic close icon for notebook tabs"
msgstr ""

#: ../../CHANGELOG.md:422
msgid "Update to latest gvsbuild, switch to wingtk repo"
msgstr ""

#: ../../CHANGELOG.md:423
msgid "Spanish, Hungarian, Finnish, Dutch, Portuguese, Croation, Espanian, and Galician translations updates"
msgstr ""

#: ../../CHANGELOG.md:424
msgid "Add Chinese (Simplified) translation"
msgstr ""

#: ../../CHANGELOG.md:426
msgid "2.7.1"
msgstr ""

#: ../../CHANGELOG.md:428
msgid "Fix lines don't disconnect when moved"
msgstr ""

#: ../../CHANGELOG.md:429
msgid "No GTK required anymore for generating docs"
msgstr ""

#: ../../CHANGELOG.md:430
msgid "Update Python to 3.10.0"
msgstr ""

#: ../../CHANGELOG.md:431
msgid "Spanish translation updates"
msgstr ""

#: ../../CHANGELOG.md:433
msgid "2.7.0"
msgstr ""

#: ../../CHANGELOG.md:435
msgid "Add Reflexive Message item for Interactions"
msgstr ""

#: ../../CHANGELOG.md:436
msgid "Allow messages to move freely on Lifeline and ExecutionSpec"
msgstr ""

#: ../../CHANGELOG.md:437
msgid "Pop-up element name editor on creation of a new element"
msgstr ""

#: ../../CHANGELOG.md:438
msgid "Add option to show underlying DecisionNode type"
msgstr ""

#: ../../CHANGELOG.md:439
msgid "Add InformationFlow for Connectors"
msgstr ""

#: ../../CHANGELOG.md:440
msgid "Swap relationship direction for Generalization, Dependency, Import, Include, and Extend"
msgstr ""

#: ../../CHANGELOG.md:441
msgid "Use Jedi for autocomplete in the Python Console"
msgstr ""

#: ../../CHANGELOG.md:442
msgid "Sphinx directive for embedding Gaphor models into docs"
msgstr ""

#: ../../CHANGELOG.md:443
msgid "Fix lifeline ordering when not all items are linked in a diagram"
msgstr ""

#: ../../CHANGELOG.md:444
msgid "Allow generalizations to be reused"
msgstr ""

#: ../../CHANGELOG.md:445
msgid "Allow auto-generated elements (Activity, State Machine, Interaction, Region) to be removed"
msgstr ""

#: ../../CHANGELOG.md:446
msgid "Fix Windows build by updating to Python 3.9.9"
msgstr ""

#: ../../CHANGELOG.md:447
msgid "Emit events for Diagram.ownedPresentation and Presentation.diagram after element creation"
msgstr ""

#: ../../CHANGELOG.md:448
msgid "Show underlying DecisionNode type"
msgstr ""

#: ../../CHANGELOG.md:449
msgid "Add documentation dependencies to pyproject.toml"
msgstr ""

#: ../../CHANGELOG.md:450
msgid "Move enumeration layout to UML.classes"
msgstr ""

#: ../../CHANGELOG.md:451
msgid "Rename packaging to _packaging"
msgstr ""

#: ../../CHANGELOG.md:452
msgid "Remove names for initial/final nodes"
msgstr ""

#: ../../CHANGELOG.md:453
msgid "Update to latest gvsbuild"
msgstr ""

#: ../../CHANGELOG.md:454
msgid "Update to PyInstaller 4.6"
msgstr ""

#: ../../CHANGELOG.md:455
msgid "Add gtksourceview to Windows docs"
msgstr ""

#: ../../CHANGELOG.md:456
msgid "Fix Python 3.10 warnings"
msgstr ""

#: ../../CHANGELOG.md:457
msgid "Fix indentation in Style Sheet docs"
msgstr ""

#: ../../CHANGELOG.md:458
msgid "Expand the number of strings translated"
msgstr ""

#: ../../CHANGELOG.md:459
msgid "Hungarian, Spanish, Japanese, Finnish, and Croatian translation updates"
msgstr ""

#: ../../CHANGELOG.md:461
msgid "2.6.5"
msgstr ""

#: ../../CHANGELOG.md:463
msgid "Update style sheet editor to be a code editor"
msgstr ""

#: ../../CHANGELOG.md:464
msgid "Update strings to improve ability to translate"
msgstr ""

#: ../../CHANGELOG.md:465
msgid "Ensure all relationships are brought to top"
msgstr ""

#: ../../CHANGELOG.md:466
msgid "Fix errors in Italian translation which prevented model saving"
msgstr ""

#: ../../CHANGELOG.md:467
msgid "Add association end properties to editor pane"
msgstr ""

#: ../../CHANGELOG.md:468
msgid "Restore rename right click option to diagrams in tree view"
msgstr ""

#: ../../CHANGELOG.md:469
msgid "Add Japanese translation"
msgstr ""

#: ../../CHANGELOG.md:470
msgid "Update Hungarian, Croatian, and Spanish translations"
msgstr ""

#: ../../CHANGELOG.md:472
msgid "2.6.4"
msgstr ""

#: ../../CHANGELOG.md:474
msgid "Fix Flatpak build failure by reverting to previous dependencies"
msgstr ""

#: ../../CHANGELOG.md:476
msgid "2.6.3"
msgstr ""

#: ../../CHANGELOG.md:478
msgid "Fix about dialog logo"
msgstr ""

#: ../../CHANGELOG.md:479
msgid "Add translation of more elements"
msgstr ""

#: ../../CHANGELOG.md:480
msgid "Remove importlib_metadata dependency"
msgstr ""

#: ../../CHANGELOG.md:481
msgid "Simpler services for about dialog"
msgstr ""

#: ../../CHANGELOG.md:482
msgid "Up typing compliance to 3.9, and remove typing_extensions"
msgstr ""

#: ../../CHANGELOG.md:483
msgid "Finnish translation updates"
msgstr ""

#: ../../CHANGELOG.md:485
msgid "2.6.2"
msgstr ""

#: ../../CHANGELOG.md:487
msgid "Fix localization of UI files"
msgstr ""

#: ../../CHANGELOG.md:488
msgid "Fix icons in dark mode"
msgstr ""

#: ../../CHANGELOG.md:489
msgid "Update Spanish, Finnish, Hugarian, and Portuguese (Br) translations"
msgstr ""

#: ../../CHANGELOG.md:491
msgid "2.6.1"
msgstr ""

#: ../../CHANGELOG.md:493
msgid "Display guard conditions in square brackets"
msgstr ""

#: ../../CHANGELOG.md:494
msgid "Use flat buttons in the header bar"
msgstr ""

#: ../../CHANGELOG.md:495
msgid "Fix translation support"
msgstr ""

#: ../../CHANGELOG.md:496
msgid "Fix drag and drop of elements does not work on diagrams"
msgstr ""

#: ../../CHANGELOG.md:497
msgid "Fix parameter is incorrect error with \";;\" in path"
msgstr ""

#: ../../CHANGELOG.md:498
msgid "Fix fork/join node incorrectly rotates"
msgstr ""

#: ../../CHANGELOG.md:499
msgid "Fix close button on about dialog doesn't work in Windows"
msgstr ""

#: ../../CHANGELOG.md:500
msgid "Fix wrong label is displayed when object node ordering is enabled"
msgstr ""

#: ../../CHANGELOG.md:501
msgid "Improve inline editor undo/redo behavior"
msgstr ""

#: ../../CHANGELOG.md:502
msgid "Fixed closing of about dialog"
msgstr ""

#: ../../CHANGELOG.md:503
msgid "Add VSCode debug instructions for Windows"
msgstr ""

#: ../../CHANGELOG.md:504
msgid "Rename usage of Partitions to Swimlanes"
msgstr ""

#: ../../CHANGELOG.md:505
msgid "Update Dutch and Hungarian Translations"
msgstr ""

#: ../../CHANGELOG.md:506
msgid "Croatian translation updates"
msgstr ""

#: ../../CHANGELOG.md:507
msgid "Simplify attribute and enumeration lookup"
msgstr ""

#: ../../CHANGELOG.md:509
msgid "2.6.0"
msgstr ""

#: ../../CHANGELOG.md:511
msgid "Improve zoom and pan for mouse"
msgstr ""

#: ../../CHANGELOG.md:512
msgid "Add Finnish, Galician, Hungarian, and Korean, update Spanish translations"
msgstr ""

#: ../../CHANGELOG.md:513
msgid "Fix disappearing elements from tree view on Windows"
msgstr ""

#: ../../CHANGELOG.md:514
msgid "Convert CI from mingw to gvsbuild"
msgstr ""

#: ../../CHANGELOG.md:515
msgid "Upgrade Windows Build Script from Bash to Python"
msgstr ""

#: ../../CHANGELOG.md:516
msgid "Refactor GitHub Actions to use composite actions"
msgstr ""

#: ../../CHANGELOG.md:517
msgid "Add translations for UI files"
msgstr ""

#: ../../CHANGELOG.md:518
msgid "Add information flows to UML model"
msgstr ""

#: ../../CHANGELOG.md:519
msgid "Add extra rules to avoid cyclic references"
msgstr ""

#: ../../CHANGELOG.md:520
msgid "Fix typo in UML.gaphor"
msgstr ""

#: ../../CHANGELOG.md:521
msgid "Refactor class property pages in to multiple modules"
msgstr ""

#: ../../CHANGELOG.md:522
msgid "Fix Windows and other developer documentation updates"
msgstr ""

#: ../../CHANGELOG.md:523
msgid "Enable pyupgrade"
msgstr ""

#: ../../CHANGELOG.md:524
msgid "Update the README for Flatpak string translation"
msgstr ""

#: ../../CHANGELOG.md:525
msgid "Fix documentation build errors, update dependencies"
msgstr ""

#: ../../CHANGELOG.md:527
msgid "2.5.1"
msgstr ""

#: ../../CHANGELOG.md:529
msgid "Fix app release signing in Windows and macOS"
msgstr ""

#: ../../CHANGELOG.md:531
msgid "2.5.0"
msgstr ""

#: ../../CHANGELOG.md:533
msgid "Add initial support for STPA in RAAML"
msgstr ""

#: ../../CHANGELOG.md:534
msgid "Add support for notes in property pages and attributes"
msgstr ""

#: ../../CHANGELOG.md:535
msgid "Allow for diagrams to be nested under all elements"
msgstr ""

#: ../../CHANGELOG.md:536
msgid "Fix delete and undo of a diagram"
msgstr ""

#: ../../CHANGELOG.md:537
msgid "Rename C4ContainerDatabaseItem to C4DatabaseItem"
msgstr ""

#: ../../CHANGELOG.md:538
msgid "Cleanup model loading"
msgstr ""

#: ../../CHANGELOG.md:539
msgid "Change diagram item management to the element factory"
msgstr ""

#: ../../CHANGELOG.md:540
msgid "Organize and simplify element events"
msgstr ""

#: ../../CHANGELOG.md:541
msgid "Cleanup toolbox and diagram action code"
msgstr ""

#: ../../CHANGELOG.md:543
msgid "2.4.2"
msgstr ""

#: ../../CHANGELOG.md:545
msgid "Fix AttributeError when creating composite associations"
msgstr ""

#: ../../CHANGELOG.md:546
msgid "Add tooltips for A and S in attribute editor"
msgstr ""

#: ../../CHANGELOG.md:547
msgid "Improve drag and drop for TreeView"
msgstr ""

#: ../../CHANGELOG.md:548
msgid "Started to add support for GTK4"
msgstr ""

#: ../../CHANGELOG.md:549
msgid "Upload Linux assets during release automatically"
msgstr ""

#: ../../CHANGELOG.md:550
msgid "Sign only builds on the master branch"
msgstr ""

#: ../../CHANGELOG.md:552
msgid "2.4.1"
msgstr ""

#: ../../CHANGELOG.md:554
msgid "Fix reordering attributes and operations with drag and drop"
msgstr ""

#: ../../CHANGELOG.md:556
msgid "2.4.0"
msgstr ""

#: ../../CHANGELOG.md:558
msgid "Add support for DataType, ValueType, Primitive, and Enumeration"
msgstr ""

#: ../../CHANGELOG.md:559
msgid "Model state is stored per model, restores where you left off"
msgstr ""

#: ../../CHANGELOG.md:560
msgid "Add support for Containment Relationship"
msgstr ""

#: ../../CHANGELOG.md:561
msgid "Focus already opened model when opening a model file"
msgstr ""

#: ../../CHANGELOG.md:562
msgid "Remove the New From Template option"
msgstr ""

#: ../../CHANGELOG.md:563
msgid "Upgrade toolbox to be compatible with GTK 4"
msgstr ""

#: ../../CHANGELOG.md:564
msgid "Add regression tests"
msgstr ""

#: ../../CHANGELOG.md:565
msgid "Fix build fails when GitHub Actions secrets are not available"
msgstr ""

#: ../../CHANGELOG.md:566
msgid "Fix association direction arrow is not updated"
msgstr ""

#: ../../CHANGELOG.md:568
msgid "2.3.2"
msgstr ""

#: ../../CHANGELOG.md:570
msgid "Fix issue where ornaments were not show on associations after loading a model"
msgstr ""

#: ../../CHANGELOG.md:573
msgid "2.3.1"
msgstr ""

#: ../../CHANGELOG.md:575
msgid "Fix scrollbars cause the diagram to disappear"
msgstr ""

#: ../../CHANGELOG.md:576
#: ../../CHANGELOG.md:626
msgid "Update Italian translation"
msgstr ""

#: ../../CHANGELOG.md:577
msgid "Left align the toolbox header labels"
msgstr ""

#: ../../CHANGELOG.md:579
msgid "2.3.0"
msgstr ""

#: ../../CHANGELOG.md:581
msgid "Add support for C4 model"
msgstr ""

#: ../../CHANGELOG.md:582
msgid "Add support for Fault Tree Analysis with RAAML"
msgstr ""

#: ../../CHANGELOG.md:583
msgid "Update the UML data model to align closer to version 2.5.1"
msgstr ""

#: ../../CHANGELOG.md:584
msgid "Enable arrow keys to expand and collapse namespace tree"
msgstr ""

#: ../../CHANGELOG.md:585
msgid "Allow Gaphor profiles to be copy and pasted between models"
msgstr ""

#: ../../CHANGELOG.md:586
msgid "Improve diagram drawing and scrolling speed"
msgstr ""

#: ../../CHANGELOG.md:587
msgid "Add Croatian translation"
msgstr ""

#: ../../CHANGELOG.md:588
msgid "Remove gray borders around editable text"
msgstr ""

#: ../../CHANGELOG.md:589
msgid "Complete converting all tests to pytest"
msgstr ""

#: ../../CHANGELOG.md:590
msgid "Fix guides are misaligned when top-left handle is moved"
msgstr ""

#: ../../CHANGELOG.md:591
msgid "Update development environment instructions"
msgstr ""

#: ../../CHANGELOG.md:592
msgid "Fix undo and redo does not set attributes"
msgstr ""

#: ../../CHANGELOG.md:593
msgid "Fix selection lasso is in the wrong place after scrolling"
msgstr ""

#: ../../CHANGELOG.md:595
msgid "2.2.2"
msgstr ""

#: ../../CHANGELOG.md:597
msgid "Fix undo of deleted elements"
msgstr ""

#: ../../CHANGELOG.md:598
msgid "Fix requirements are missing ID and text"
msgstr ""

#: ../../CHANGELOG.md:599
msgid "Add CSS styling to dropzone and grayed out elements"
msgstr ""

#: ../../CHANGELOG.md:600
msgid "Start to remove use of inline styles"
msgstr ""

#: ../../CHANGELOG.md:602
msgid "2.2.1"
msgstr ""

#: ../../CHANGELOG.md:604
msgid "Fix drawing of composite association"
msgstr ""

#: ../../CHANGELOG.md:606
msgid "2.2.0"
msgstr ""

#: ../../CHANGELOG.md:608
msgid "Guide users to create valid relationships"
msgstr ""

#: ../../CHANGELOG.md:609
msgid "macOS builds are signed and notarized"
msgstr ""

#: ../../CHANGELOG.md:610
msgid "New app icon"
msgstr ""

#: ../../CHANGELOG.md:611
msgid "Improvements to copy and paste, and undo robustness"
msgstr ""

#: ../../CHANGELOG.md:612
msgid "Fix RuntimeError caused by style sheet creation"
msgstr ""

#: ../../CHANGELOG.md:613
msgid "Use EventControllers from GTK 3.24"
msgstr ""

#: ../../CHANGELOG.md:615
msgid "2.1.1"
msgstr ""

#: ../../CHANGELOG.md:617
msgid "Fix copy and paste in Linux with Wayland"
msgstr ""

#: ../../CHANGELOG.md:619
msgid "2.1.0"
msgstr ""

#: ../../CHANGELOG.md:621
msgid "Improve swimlane behavior"
msgstr ""

#: ../../CHANGELOG.md:622
msgid "Add auto select in tree view"
msgstr ""

#: ../../CHANGELOG.md:623
msgid "Add in-app notifications"
msgstr ""

#: ../../CHANGELOG.md:624
msgid "Improve file load and save dialogs"
msgstr ""

#: ../../CHANGELOG.md:625
msgid "Show more elements and relationships in namespace tree"
msgstr ""

#: ../../CHANGELOG.md:627
msgid "Make lifelines and messages owned by interactions"
msgstr ""

#: ../../CHANGELOG.md:629
msgid "2.0.1"
msgstr ""

#: ../../CHANGELOG.md:631
msgid "Fix Gaphor fails to launch in macOS"
msgstr ""

#: ../../CHANGELOG.md:632
msgid "Use certificate to sign Windows binaries"
msgstr ""

#: ../../CHANGELOG.md:633
msgid "Fix copy/paste issue that causes association ends to be removed"
msgstr ""

#: ../../CHANGELOG.md:634
msgid "Improve editing for inline editors (popovers)"
msgstr ""

#: ../../CHANGELOG.md:635
msgid "Fix undo on diagram items corrupts the model"
msgstr ""

#: ../../CHANGELOG.md:636
msgid "Fix UML composite and shared association tools"
msgstr ""

#: ../../CHANGELOG.md:638
msgid "2.0.0"
msgstr ""

#: ../../CHANGELOG.md:640
msgid "Add initial support for SysML"
msgstr ""

#: ../../CHANGELOG.md:641
msgid "Add support for styling using CSS"
msgstr ""

#: ../../CHANGELOG.md:642
msgid "Translate to Italian"
msgstr ""

#: ../../CHANGELOG.md:643
msgid "Improve dmg for macOS"
msgstr ""

#: ../../CHANGELOG.md:644
msgid "Improve Copy/Paste for nested items"
msgstr ""

#: ../../CHANGELOG.md:645
msgid "Add new modeling language service"
msgstr ""

#: ../../CHANGELOG.md:646
msgid "Show the element editor by default"
msgstr ""

#: ../../CHANGELOG.md:647
msgid "Create completely new data model code generator"
msgstr ""

#: ../../CHANGELOG.md:648
msgid "Add part and shared associations to tool palette"
msgstr ""

#: ../../CHANGELOG.md:649
msgid "Remove unused imports, enable flake8 checks"
msgstr ""

#: ../../CHANGELOG.md:650
msgid "Update App icons"
msgstr ""

#: ../../CHANGELOG.md:651
msgid "Update animation gif in README"
msgstr ""

#: ../../CHANGELOG.md:652
msgid "Fix Windows Build Errors caused by Missing ZST Archives"
msgstr ""

#: ../../CHANGELOG.md:653
msgid "Fix installation on Windows"
msgstr ""

#: ../../CHANGELOG.md:654
msgid "Add extra diagram item tests"
msgstr ""

#: ../../CHANGELOG.md:655
msgid "Fix macOS Python version problem"
msgstr ""

#: ../../CHANGELOG.md:656
msgid "Place UML model and diagram items closer together"
msgstr ""

#: ../../CHANGELOG.md:657
msgid "Refactor Code Generator to New Module and add CLI"
msgstr ""

#: ../../CHANGELOG.md:658
msgid "Fix MSYS2 package names and disable system update"
msgstr ""

#: ../../CHANGELOG.md:659
msgid "Remove CI workaround for console plugin"
msgstr ""

#: ../../CHANGELOG.md:660
msgid "Move core modeling concepts to a separate package"
msgstr ""

#: ../../CHANGELOG.md:661
msgid "Convert Some Profile Tests to Pytest"
msgstr ""

#: ../../CHANGELOG.md:662
msgid "Speed up text rendering"
msgstr ""

#: ../../CHANGELOG.md:663
msgid "Fix tree view text to allow names with angle brackets"
msgstr ""

#: ../../CHANGELOG.md:664
msgid "Clear the clipboard when diagram items are copied"
msgstr ""

#: ../../CHANGELOG.md:665
msgid "Fix name change for activity partitions"
msgstr ""

#: ../coffee_machine.md:1
msgid "Tutorial: Coffee Machine"
msgstr ""

#: ../coffee_machine.md:4
#: ../first_model.md:4
msgid "In this tutorial we refer to the different parts of the gaphor interface: {ref}`Model Browser <getting_started:model browser>`, [Toolbox](getting_started:toolbox), {ref}`Property Editor <getting_started:property editor>`."
msgstr ""

#: ../coffee_machine.md:8
msgid "Although the names should speak for themselves, you can check out the [Getting Started](getting_started) page for more information about those sections."
msgstr ""

#: ../coffee_machine.md:12
#: ../coffee_machine_concept.md:7
#: ../coffee_machine_logical.md:7
msgid "Introduction"
msgstr ""

#: ../coffee_machine.md:14
msgid "In the bustling town of Antville, a colony of ants had formed a Systems Engineering consulting company called AntSource. They value collaboration, transparency, and community-driven engineering, and seeks to empower their employees and customers through open communication and participation in the systems engineering process."
msgstr ""

#: ../coffee_machine.md:20
msgid "The engineers at AntSource all have nicknames that reflect the key principles and concepts of their craft: Qual-ant, Reli-ant, Safe-ant, Usa-ant, and Sust-ant. They were experts in designing and optimizing complex systems, and they took pride in their work."
msgstr ""

#: ../coffee_machine.md:25
msgid "One day, a new client approached AntSource with an unusual request. Cappuccino, a cat who owned a popular coffee shop called Milk & Whiskers Café, needed a custom espresso machine designed specifically for felines. Cats just love their coffee strong, with a creamy and smooth body and topped with the perfect foamy layer of crema. The ants were intrigued by the challenge and immediately set to work."
msgstr ""

#: ../coffee_machine.md:32
msgid "Qual-ant was responsible for ensuring that the machine met all quality standards and specifications, while Reli-ant was tasked with making sure that the machine was dependable and would work correctly every time it was used. Safe-ant designed the machine with safety in mind, ensuring that it wouldn't cause harm to anyone who used it. Usa-ant designed the machine to be easy and intuitive to use, while Sust-ant ensured that the machine was environmentally friendly and sustainable. In this tutorial we follow the adventures of AntSource to create the perfect kittie espresso machine."
msgstr ""

#: ../coffee_machine.md:41
msgid "![Two shots of espresso being pulled from an espresso machine](images/coffee-machine-double-shot.jpg)"
msgstr ""

#: ../coffee_machine.md:41
msgid "Two shots of espresso being pulled from an espressomachine"
msgstr ""

#: ../coffee_machine.md:44
msgid "The first thing the ants did was to open Gaphor to the Greeter window and start a new model with the _SysML_ template."
msgstr ""

#: ../coffee_machine.md:47
msgid "Abstraction Levels"
msgstr ""

#: ../coffee_machine.md:48
msgid "Abstraction is a way of simplifying complex systems by focusing on only the most important details, while ignoring the rest. It's a process of reducing complexity by removing unnecessary details and highlighting the key aspects of a system in order to focus on the problem to be solved. It is the key to rigorous analysis of a system."
msgstr ""

#: ../coffee_machine.md:54
msgid "To understand abstraction, think about a painting. When you look at a painting, you see a representation of something - perhaps a person, a landscape, or an object. The artist has simplified the real world into a set of lines, shapes, and colors that represent the most important details of the subject. In the same way, systems engineers, like our friends the ants, use abstraction to represent complex systems by breaking them down into their essential components and highlighting the most important aspects."
msgstr ""

#: ../coffee_machine.md:62
msgid "Abstraction levels refer to the different levels of detail at which a system can be represented. These levels are used to break down complex systems into smaller, more manageable parts that can be analyzed and optimized. Said another way, abstraction levels group portions of a design where similar types of questions are answered."
msgstr ""

#: ../coffee_machine.md:68
msgid "There are typically three levels of abstraction in systems engineering and these are the three levels used in the SysML template:"
msgstr ""

#: ../coffee_machine.md:71
msgid "Concept Level: Sometimes also called Conceptual Level. Defines the problem being solved. This is the highest level of abstraction, where the system is described in terms of its overall purpose, goals, and functions. At this level, the focus is on understanding the system's requirements and how it will interact with other systems."
msgstr ""

#: ../coffee_machine.md:76
msgid "Logical Level: Defines a technology-agnostic solution. This is the middle level of abstraction, where the system is described in terms of its structure and behavior. At this level, the focus is on how the system components are organized and how they interact with each other."
msgstr ""

#: ../coffee_machine.md:80
msgid "Technology Level: Sometimes also called Physical level. Defines the detailed technical solution. This is the lowest level of abstraction, where the system is described in terms of its components and their properties. At this level, the focus is on the details of the system's implementation."
msgstr ""

#: ../coffee_machine.md:85
msgid "Each level of abstraction provides a different perspective on the system, and each level is important for different aspects of system design and analysis. For example, the conceptual level is important for understanding the overall goals and requirements of the system, while the physical level is important for understanding how the system will be built and how it will interact with the environment."
msgstr ""

#: ../coffee_machine.md:92
msgid "There is a fourth abstraction level called the Implementation Level that isn't modeled, which is the concrete built system."
msgstr ""

#: ../coffee_machine.md:95
msgid "In the upper left hand corner of Gaphor, the Model Browser shows the three top level packages, dividing up the model in to these three abstraction levels."
msgstr ""

#: ../coffee_machine.md:98
msgid "![Top level packages of the SysML template](images/coffee-machine-top-level-packages.png)"
msgstr ""

#: ../coffee_machine.md:98
msgid "Top level packages of the SysMLtemplate"
msgstr ""

#: ../coffee_machine.md:101
msgid "Pillars"
msgstr ""

#: ../coffee_machine.md:103
msgid "There are four pillars of SysML which help classify the types of diagrams based on what they represent:"
msgstr ""

#: ../coffee_machine.md:106
msgid "Behavior: The functionality of a system"
msgstr ""

#: ../coffee_machine.md:107
msgid "Structure: How a system is formed using parts and connections"
msgstr ""

#: ../coffee_machine.md:108
msgid "Requirements: Written statements that constrain the system"
msgstr ""

#: ../coffee_machine.md:109
msgid "Parametrics: Enforces mathematical rules across values in the system"
msgstr ""

#: ../coffee_machine.md:111
msgid "If you want to learn more about these four pillars, there is a 30-minute video by Rick Steiner called [The Four Pillars of SysML](https://youtu.be/998UznK9ogY)."
msgstr ""

#: ../coffee_machine.md:114
msgid "Since Parametrics Diagrams are one of the least used diagram types in SysML, we are going to only focus on the first three. The power of SysML comes in being able to make relationships between these three pillars. For example, by allocating behavior like an activity to an element of the structure like a block."
msgstr ""

#: ../coffee_machine.md:119
msgid "If you expand the top-level Abstraction Level packages in the Model Browser, each one contains three more packages, one for each pillar. It is in these packages that we will start to build up the design for the espresso machine."
msgstr ""

#: ../coffee_machine.md:123
msgid "![Three pillar packages nested under each abstraction level package](images/coffee-machine-pillars.png)"
msgstr ""

#: ../coffee_machine.md:123
msgid "Three pillar packages nested under each abstraction levelpackage"
msgstr ""

#: ../coffee_machine.md:126
msgid "Table of Contents"
msgstr ""

#: ../coffee_machine_concept.md:5
msgid "Coffee Machine: Concept Level"
msgstr ""

#: ../coffee_machine_concept.md:9
msgid "The concept level defines the problem we are trying to solve. For the espresso machine, we are going to use diagrams at this abstraction level to answer questions like:"
msgstr ""

#: ../coffee_machine_concept.md:12
msgid "Who will use the machine and what are their goals while using it?"
msgstr ""

#: ../coffee_machine_concept.md:13
msgid "What sequence of events will a person take while operating the machine?"
msgstr ""

#: ../coffee_machine_concept.md:14
msgid "What are the key features and capabilities required for the machine to perform its intended function?"
msgstr ""

#: ../coffee_machine_concept.md:15
msgid "What are the design constraints and requirements that must be considered when designing the machine?"
msgstr ""

#: ../coffee_machine_concept.md:16
msgid "What are the key performance metrics that the machine must meet in order to be considered successful?"
msgstr ""

#: ../coffee_machine_concept.md:17
msgid "How will the machine fit into the larger context of the café, and how will it interact with other systems and components within the café?"
msgstr ""

#: ../coffee_machine_concept.md:19
msgid "What are the needs of others like those marketing, selling, manufacturing, or buying the machine?"
msgstr ""

#: ../coffee_machine_concept.md:21
msgid "At this level, the focus is on understanding the big picture of the espresso machine and its role within the café system. The answers to these questions will help guide the design and development of the machine at the logical and technology levels of abstraction."
msgstr ""

#: ../coffee_machine_concept.md:26
msgid "Use Case Diagram"
msgstr ""

#: ../coffee_machine_concept.md:28
msgid "First the ants work on the behavior of the system. Expand the Behavior package in the Model Browser and double-click on the diagram named Use Cases."
msgstr ""

#: ../coffee_machine_concept.md:31
msgid "A use case diagram is a type of visual representation used in systems engineering to describe the functional requirements of a system, such as an espresso machine. In the context of the espresso machine, a use case diagram would be used to identify and define the different ways in which the machine will be used by its users, such as the café staff and customers."
msgstr ""

#: ../coffee_machine_concept.md:37
msgid "The diagram would typically include different actors or users, such as the barista, the customer, and possibly a manager or maintenance technician. It would also include different \"use cases\" or scenarios, which describe the different actions that the users can take with the machine, such as placing an order, making an espresso, or cleaning the machine."
msgstr ""

#: ../coffee_machine_concept.md:43
msgid "The use case diagram helps to ensure that all the necessary functional requirements of the espresso machine are identified and accounted for, and that the system is designed to meet the needs of its users. It can also be used as a communication tool between the different stakeholders involved in the development of the machine, such as the ants and Cappuccino the cat."
msgstr ""

#: ../coffee_machine_concept.md:49
msgid "The ants need your help updating the diagrams, so let's get started:"
msgstr ""

#: ../coffee_machine_concept.md:51
msgid "Double-click on the actor to pop up the rename dialog, and replace User with Barista."
msgstr ""

#: ../coffee_machine_concept.md:53
msgid "Update the name of the oval Use Case from Use Case #1 to Brew espresso."
msgstr ""

#: ../coffee_machine_concept.md:54
msgid "Update the name of the rectangle Block from Feature to Espresso Machine"
msgstr ""

#: ../coffee_machine_concept.md:56
msgid "A barista interacts with the espresso machine. The barista is provided a simple interface with a few push buttons."
msgstr ""

#: ../coffee_machine_concept.md:59
msgid "In this particular use case diagram, we have one actor named Barista and one use case called Brew espresso, which is allocated to a block called Espresso Machine. The actor, in this case, is a cat barista who interacts with the system (an espresso machine) to accomplish a particular task, which is brewing espresso."
msgstr ""

#: ../coffee_machine_concept.md:65
msgid "Use case diagram showing an actor named Barista and a use case called Brew espresso"
msgstr ""

#: ../coffee_machine_concept.md:70
msgid "The use case Brew espresso represents a specific functionality or action that the system (the Espresso Machine block) can perform. It describes the steps or interactions necessary to complete the task of brewing espresso, such as selecting the appropriate settings, starting the brewing process, and stopping the process once it's complete."
msgstr ""

#: ../coffee_machine_concept.md:76
msgid "The use case diagram shows the relationship between the actor and the use case. It is represented by an oval shape with the use case name inside and an association with the actor. The association represents the interaction from the actor to the use case."
msgstr ""

#: ../coffee_machine_concept.md:81
msgid "Domain Diagram"
msgstr ""

#: ../coffee_machine_concept.md:83
msgid "A domain diagram is a graphical representation of the concepts, terms, and relationships within a specific domain. In the case of a coffee shop, a domain diagram could represent the key elements and relationships within the coffee shop domain."
msgstr ""

#: ../coffee_machine_concept.md:88
msgid "The following is a domain diagram that builds upon the context diagram with additional blocks:"
msgstr ""

#: ../coffee_machine_concept.md:90
msgid "Barista"
msgstr ""

#: ../coffee_machine_concept.md:91
msgid "Coffee Machine"
msgstr ""

#: ../coffee_machine_concept.md:92
msgid "Roasted Coffee"
msgstr ""

#: ../coffee_machine_concept.md:93
msgid "Coffee Grinder"
msgstr ""

#: ../coffee_machine_concept.md:94
msgid "Water Supply"
msgstr ""

#: ../coffee_machine_concept.md:95
msgid "Customer"
msgstr ""

#: ../coffee_machine_concept.md:97
msgid "Each block represents a key concept within the coffee shop domain, and the containment relationship is used between the domain and the blocks to show that they are part of the domain."
msgstr ""

#: ../coffee_machine_concept.md:101
msgid "Block Definition Diagram showing hierarchy of blocks in the Coffee Shop domain"
msgstr ""

#: ../coffee_machine_concept.md:106
msgid "The Barista block is responsible for preparing and serving the coffee to the customers. The Roasted Coffee block contains the types of coffee available for the barista to use. The Coffee Grinder block grinds the roasted coffee beans to the desired consistency before brewing. The Water Supply block contains the water source for the coffee machine, and finally the Customer block represents the person who orders and receives the coffee."
msgstr ""

#: ../coffee_machine_concept.md:113
msgid "The ants need more of your help to rename the Feature Domain diagram and update it so that it matches the one above."
msgstr ""

#: ../coffee_machine_concept.md:116
msgid "The domain diagram provides a high-level view of the coffee shop domain and the key concepts and relationships involved in it. It can be a useful tool for understanding the relationships between different elements of the domain and for communicating these relationships to others."
msgstr ""

#: ../coffee_machine_concept.md:121
msgid "Context Diagram"
msgstr ""

#: ../coffee_machine_concept.md:123
msgid "The context diagram is a high-level view of the system, and it shows its interaction with external entities. In the case of a coffee machine, a context diagram provides a clear and concise representation of the system and its interactions with the external environment."
msgstr ""

#: ../coffee_machine_concept.md:128
msgid "The context diagram for a coffee machine shows the coffee machine as the system at the center, with all its external entities surrounding it. The external entities include the barista, the power source, the coffee grinder, and the water source."
msgstr ""

#: ../coffee_machine_concept.md:133
msgid "Block definition diagram showing context of the coffee shop with external entities"
msgstr ""

#: ../coffee_machine_concept.md:138
msgid "The ants need more of your help to rename the Feature Context diagram and update it so that it matches the one above."
msgstr ""

#: ../coffee_machine_concept.md:141
msgid "Overall, the context diagram for a coffee machine provides a high-level view of the system and its interactions with external entities. It is a useful tool for understanding the system and its role in the broader environment."
msgstr ""

#: ../coffee_machine_concept.md:145
msgid "Concept Requirements"
msgstr ""

#: ../coffee_machine_concept.md:146
msgid "Concept requirements are typically collected by analyzing the needs of the stakeholders involved in the development of the coffee machine. This involves identifying and gathering input from various stakeholders, such as the barista, the other engineers working on the product, manufacturing, and service."
msgstr ""

#: ../coffee_machine_concept.md:151
msgid "To collect concept requirements, stakeholders may be asked questions about what they want the coffee machine to do, what features it should have, and what problems it should solve. They may also be asked to provide feedback on existing coffee machines to identify areas where improvements could be made."
msgstr ""

#: ../coffee_machine_concept.md:156
msgid "Once the needs of the stakeholders have been gathered, they can be analyzed to identify common themes and requirements. This information can then be used to develop the concept requirements for the coffee machine, which serve as a starting point for the design process."
msgstr ""

#: ../coffee_machine_concept.md:161
msgid "The following are some concept requirements for a coffee machine that addresses a water tank, heat-up time, and HMI button:"
msgstr ""

#: ../coffee_machine_concept.md:164
msgid "Water Tank: The coffee machine should have a water tank of sufficient size to make multiple cups of coffee before needing a refill. The water tank should be easy to access and fill."
msgstr ""

#: ../coffee_machine_concept.md:168
msgid "Heat-up Time: The coffee machine should have a heat-up time of no more than 10 minutes from the time the user turns on the machine until it's ready to brew coffee."
msgstr ""

#: ../coffee_machine_concept.md:172
msgid "HMI Button: The coffee machine should have an HMI with a 1 cup brew button to make it easy for the user to select the amount of coffee they want to brew. The HMI should be intuitive and easy to use."
msgstr ""

#: ../coffee_machine_concept.md:176
msgid "Concept requirements for water tank, heat-up time, and HMI button"
msgstr ""

#: ../coffee_machine_concept.md:181
msgid "Help the ants update the Concept Requirements diagram with these requirements."
msgstr ""

#: ../coffee_machine_concept.md:184
msgid "Throughout the design process, the concept requirements will be refined and expanded upon as more information becomes available and the needs of the stakeholders become clearer. This iterative process ensures that the final design of the coffee machine meets the needs of all stakeholders and delivers a high-quality product."
msgstr ""

#: ../coffee_machine_logical.md:5
msgid "Coffee Machine: Logical Level"
msgstr ""

#: ../coffee_machine_logical.md:9
msgid "At the logical Level, we'll define a technology-agnostic solution. This is the middle level of abstraction, where the system is described in terms of its structure and behavior. At this level, the focus is on how the system components are organized and how they interact with each other."
msgstr ""

#: ../coffee_machine_logical.md:14
msgid "Functional Boundary Behavior"
msgstr ""

#: ../coffee_machine_logical.md:16
msgid "A Functional Boundary Behavior diagram is a type of SysML Activity diagram used to show the interactions between different logical blocks. The swim lanes divide the diagram into different areas, each representing a different functional block or component."
msgstr ""

#: ../coffee_machine_logical.md:21
msgid "In this case, the diagram includes swimlanes for the HMI, Controller, Water Pump, Water Heater, Grouphead, and Portafilter. The HMI receives the button press from the barista and then sends a command to the Controller. The Controller then commands the Water Pump and Water Heater to start, and once the water has reached the correct temperature, the Controller commands the Pump and Heater to start. The water would then be pumped through the Grouphead and into the Portafilter, brewing the coffee. The diagram shows the flow of information and actions between the different logical blocks, and help to ensure that the behavior that each block provides is properly connected and integrated into the system."
msgstr ""

#: ../coffee_machine_logical.md:36
msgid "From the Logical package, expand the Behavior package in the Model Browser and double-click on the diagram named Functional Boundary Behavior. Additional swimlanes can be added by clicking on the swimlanes and add additional partitions in the Property Editor."
msgstr ""

#: ../coffee_machine_logical.md:41
msgid "In the Structure package, right-click on the Blocks with the B symbol and rename them from the context menu so that the names of the Logical Blocks in each swimlane are correct. The name of the partition before the colon can also be changed in the Property Editor."
msgstr ""

#: ../coffee_machine_logical.md:46
msgid "Additional Object Flows, pins, and actions can be created using the Toolbox. The Parameter Nodes which are attached to the Activity on the very left and right of the diagram are renamed and created by clicking on the Activity and modifying them in the Property Editor."
msgstr ""

#: ../coffee_machine_logical.md:51
msgid "Logical State Machine"
msgstr ""

#: ../coffee_machine_logical.md:53
msgid "The logical state machine for the coffee machine is a diagram that shows the different states and transitions that the machine goes through to make coffee. In this case, there are two main states: On and Off."
msgstr ""

#: ../coffee_machine_logical.md:57
msgid "When the coffee machine is turned on, it enters the On state. Inside the On state, there are some substates, starting with the heat water state. The machine will transition from the heat water state to the ready state when the temperature reaches the set point."
msgstr ""

#: ../coffee_machine_logical.md:62
msgid "Once the machine is in the ready state, the user can select one or two cup mode. Depending on the mode selected, the machine will transition to either the one cup mode or two cup mode."
msgstr ""

#: ../coffee_machine_logical.md:66
msgid "State machine diagram showing logical states including on and off"
msgstr ""

#: ../coffee_machine_logical.md:71
msgid "Open the Logical States diagram and use the Toolbox to add the additional substates and transition. Guards for the transitions, shown surrounded by brackets, are added by selecting the transition and adding the guard in the Property Editor."
msgstr ""

#: ../coffee_machine_logical.md:76
msgid "The logical state machine diagram for the coffee machine shows these states, and the different conditions that trigger the transitions. This helps the ants designing the machine to understand how the coffee machine works and ensure that it functions properly."
msgstr ""

#: ../coffee_machine_logical.md:81
msgid "Logical Structure"
msgstr ""

#: ../coffee_machine_logical.md:83
msgid "The logical structure shows which logical blocks the espresso machine is made up of. Since we are at the logical level, these blocks should be agnostic to technical choices."
msgstr ""

#: ../coffee_machine_logical.md:87
msgid "The following logical blocks are part of the espresso machine:"
msgstr ""

#: ../coffee_machine_logical.md:88
msgid "Water tank"
msgstr ""

#: ../coffee_machine_logical.md:89
msgid "Water pump"
msgstr ""

#: ../coffee_machine_logical.md:90
msgid "Water heater"
msgstr ""

#: ../coffee_machine_logical.md:91
msgid "Portafilter"
msgstr ""

#: ../coffee_machine_logical.md:92
msgid "Controller"
msgstr ""

#: ../coffee_machine_logical.md:93
msgid "Grouphead"
msgstr ""

#: ../coffee_machine_logical.md:94
msgid "HMI"
msgstr ""

#: ../coffee_machine_logical.md:96
msgid "Each block represents a key portion of the espresso machine, and the containment relationship is used between the espresso machine and its logical parts."
msgstr ""

#: ../coffee_machine_logical.md:100
msgid "Block definition diagram showing the coffee machine and its logical parts"
msgstr ""

#: ../coffee_machine_logical.md:105
msgid "Water tank: The water tank is a container that stores the water used in the espresso machine. It typically has a specific capacity and is designed for easy filling and cleaning. The water tank supplies water to the water pump when needed."
msgstr ""

#: ../coffee_machine_logical.md:110
msgid "Water pump: The water pump is responsible for drawing water from the water tank and creating the necessary pressure to force the water through the coffee grounds in the portafilter. It plays a crucial role in the espresso extraction process by ensuring a consistent flow of water."
msgstr ""

#: ../coffee_machine_logical.md:115
msgid "Water heater: The water heater, also known as the boiler or heating element, is responsible for heating the water to the optimal temperature for brewing espresso. It maintains the water at the desired temperature to ensure proper extraction and flavor."
msgstr ""

#: ../coffee_machine_logical.md:120
msgid "Portafilter: The portafilter is a detachable handle-like device that holds the coffee grounds. It is attached to the espresso machine and acts as a filter holder. The water from the pump is forced through the coffee grounds in the portafilter to extract the flavors and create the espresso."
msgstr ""

#: ../coffee_machine_logical.md:125
msgid "Controller: The controller, often a microcontroller or a dedicated circuit board, is the brain of the espresso machine. It manages and coordinates the operation of various components, such as the water pump, water heater, and HMI, to ensure the correct brewing process. It monitors and controls temperature, pressure, and other parameters to maintain consistency and deliver the desired results."
msgstr ""

#: ../coffee_machine_logical.md:132
msgid "Grouphead: The grouphead is a part of the espresso machine where the portafilter attaches. It provides a secure connection between the portafilter and the machine, allowing the brewed espresso to flow out of the portafilter and into the cup. The grouphead also helps to maintain proper temperature and pressure during the brewing process."
msgstr ""

#: ../coffee_machine_logical.md:138
msgid "HMI (Human-Machine Interface): The HMI is the user interface of the espresso machine. It provides a means for the user to interact with the machine, usually through buttons, switches, or a touchscreen. The HMI allows the user to select different brewing options, adjust settings, and monitor the status of the machine. It provides feedback and displays information related to the brewing process, such as brewing time, temperature, and cup size selection."
msgstr ""

#: ../coffee_machine_logical.md:145
msgid "We didn't make any technical choices at this time, for example we didn't specify which type of controller, the pump capacity, or the model of the grouphead. These details will be defined once we get to the Technology level."
msgstr ""

#: ../coffee_machine_logical.md:149
msgid "The ants need more of your help to update the Logical Structure diagram so that it matches the one above."
msgstr ""

#: ../coffee_machine_logical.md:152
msgid "Logical Boundary"
msgstr ""

#: ../coffee_machine_logical.md:154
msgid "The Logical Boundary is a type of Internal Block Diagram that represents the internal structure of a system, illustrating the relationships between its internal components or blocks. It helps to visualize how these blocks interact and exchange information within the system. The term boundary used here means a clear box view inside the espresso machine at the logical boundary. It uses part properties of the blocks that were in the Logical Structure diagram above."
msgstr ""

#: ../coffee_machine_logical.md:161
msgid "Internal block diagram showing the clear box view of the espresso machine"
msgstr ""

#: ../coffee_machine_logical.md:166
msgid "The interactions between the part properties inside the espresso machine are shown as ItemFlows on the Connectors."
msgstr ""

#: ../coffee_machine_logical.md:169
msgid "Water: Represents the flow of water from the water tank to the water pump."
msgstr ""

#: ../coffee_machine_logical.md:170
msgid "On/Off: Represents the command or signal to turn the espresso machine on or off."
msgstr ""

#: ../coffee_machine_logical.md:171
msgid "Volume Adjustment: Represents the user-selected volume adjustment for the coffee output."
msgstr ""

#: ../coffee_machine_logical.md:172
msgid "Pressurized Water: Represents the water flow under pressure for extracting coffee."
msgstr ""

#: ../coffee_machine_logical.md:173
msgid "Heat Command: Represents the command or signal to activate the water heater and initiate the heating process."
msgstr ""

#: ../coffee_machine_logical.md:174
msgid "Temperature: Represents the feedback signal indicating the current temperature of the water."
msgstr ""

#: ../coffee_machine_logical.md:175
msgid "Hot Pressurized Water: Represents the pressurized hot water for brewing coffee."
msgstr ""

#: ../coffee_machine_logical.md:176
msgid "Coffee Water Mixture: Represents the mixture of hot water and coffee grounds during the brewing process."
msgstr ""

#: ../coffee_machine_logical.md:180
msgid "Notice that we aren't actually showing anything entering or leaving the boundary of the espresso machine, like the input from the barista or the resulting coffee. Gaphor doesn't current support adding ports to the boundary of an internal block diagram, but hopefully we'll be able to add support soon!"
msgstr ""

#: ../coffee_machine_logical.md:186
msgid "These item flows capture the essential interactions and exchanges within the espresso machine. They represent the flow of water, control signals, temperature feedback, and the resulting coffee water mixture. The item flows illustrate the sequence and connections between the various components, allowing for a better understanding of how the machine functions as a whole."
msgstr ""

#: ../coffee_machine_logical.md:192
msgid "Once again, help the ants by updating the Logical Boundary diagram so that it matches the one above."
msgstr ""

#: ../coffee_machine_logical.md:195
msgid "Logical Requirements"
msgstr ""

#: ../coffee_machine_logical.md:196
msgid "Logical requirements refer to the high-level specifications and functionalities that describe what a system or product should accomplish without specifying how it will be implemented. These requirements focus on the desired outcomes and behavior of the system rather than the specific technical details."
msgstr ""

#: ../coffee_machine_logical.md:201
msgid "We have also already defined the behavior and the structure of the espresso machine at the logical level, so the main task now is to translate that information in to words as requirement statements."
msgstr ""

#: ../coffee_machine_logical.md:206
msgid "If you need help writing good requirements, the [INCOSE Guide to Needs and Requirements](https://portal.incose.org/commerce/store?productId=INCOSE-GUIDENEEDSREQ) and the [Easy Approach to Requirements Syntax](https://alistairmavin.com/ears/) are recommended resources."
msgstr ""

#: ../coffee_machine_logical.md:212
msgid "We use the Derive Requirement relation from the Logical Requirement to the Concept Requirements that we previously created. The direction of this relationship is in the derived from direction, which might be opposite to what you are used to where the higher level requirement points to the lower level requirement."
msgstr ""

#: ../coffee_machine_logical.md:218
msgid "Here we derive two requirements:"
msgstr ""

#: ../coffee_machine_logical.md:220
msgid "Controller commands heatup"
msgstr ""

#: ../coffee_machine_logical.md:221
msgid "900kPa of water pressure"
msgstr ""

#: ../coffee_machine_logical.md:223
msgid "Logical requirements for the controller command and the water pressure derived from concept requirements"
msgstr ""

#: ../coffee_machine_logical.md:228
msgid "Update the Logical Requirements diagram with these requirements. If you want, you can also develop additional requirements for all the logical behavior and structure that we specified in the other diagrams."
msgstr ""

#: ../coffee_machine_wrapup.md:1
msgid "Coffee Machine: Summary"
msgstr ""

#: ../coffee_machine_wrapup.md:3
msgid "The Technology Level design uses a very similar approach as the Logical Level. Work on the behavior, structure, and then the requirements. At this level, you will now specify all the design details for how this specific espresso machine will work. We'll leave this exercise up to you to do, and we would be glad to have contributions of this design back in to this tutorial if you are interested in getting involved in Gaphor."
msgstr ""

#: ../coffee_machine_wrapup.md:10
msgid "As they worked, the ants encountered numerous challenges. They had to ensure that the machine was safe, efficient, and easy to use, all while meeting the unique needs of their feline client. But with their deep understanding of systems engineering and their commitment to key principles and concepts, they were able to overcome these challenges and design an exceptional espresso machine."
msgstr ""

#: ../coffee_machine_wrapup.md:17
msgid "In the end, Cappuccino was thrilled with the machine, which worked flawlessly and was a big hit with his customers. He was so impressed with the ants' work that he offered them a long-term contract to design all of his café's systems. The ants were proud of their success, knowing that it was all thanks to their expertise and deep understanding of systems engineering principles. They had proven that, with the right tools and approach, anything is possible."
msgstr ""

#: ../connect.md:1
msgid "Connection Protocol"
msgstr ""

#: ../connect.md:3
msgid "In Gaphor, if a connection is made on a diagram between an element and a relationship, the connection is also made at semantic level (the model). From a GUI point of view, a button release event is what kicks of the decision whether the connection is allowed."
msgstr ""

#: ../connect.md:12
msgid "The check if a connection is allowed should also check if it is valid to create a relation to/from the same element (like associations, but not generalizations)."
msgstr ""

#: ../container.md:1
msgid "Gaphor in a Container"
msgstr ""

#: ../container.md:3
msgid "Instead of setting up a development environment locally, the easiest way to contribute to the project is using GitHub Codespaces."
msgstr ""

#: ../container.md:6
msgid "GitHub Codespaces"
msgstr ""

#: ../container.md:8
msgid "Follow these steps to open Gaphor in a Codespace:"
msgstr ""

#: ../container.md:9
msgid "Navigate to https://github.com/gaphor/gaphor"
msgstr ""

#: ../container.md:10
msgid "Click the Code drop-down menu and select the **Open with Codespaces** option."
msgstr ""

#: ../container.md:11
msgid "Select **+ New codespace** at the bottom on the pane."
msgstr ""

#: ../container.md:13
msgid "For more info, check out the [GitHub documentation](https://docs.github.com/en/free-pro-team@latest/github/developing-online-with-codespaces/creating-a-codespace#creating-a-codespace)."
msgstr ""

#: ../container.md:15
msgid "Remote access to Gaphor graphic window with Codespaces"
msgstr ""

#: ../container.md:17
msgid "When using Codespaces, chances are that you also want to interact with the graphical window of Gaphor."
msgstr ""

#: ../container.md:20
msgid "This is facilitated in Gaphor by use of container feature called [desktop-lite](https://github.com/devcontainers/features/tree/main/src/desktop-lite). This feature is activated by default in the Gaphor's [devcontainer.json](https://github.com/gaphor/gaphor/blob/main/.devcontainer/devcontainer.json) file."
msgstr ""

#: ../container.md:22
msgid "Notice the webPort/vncPort and password values. These are used in subsequent steps."
msgstr ""

#: ../container.md:33
msgid "There are two options:"
msgstr ""

#: ../container.md:34
msgid "Using a local VNC viewer"
msgstr ""

#: ../container.md:35
msgid "Download and install VNC viewer of your choice (e.g. realvnc)"
msgstr ""

#: ../container.md:36
msgid "Specify remote hostname as *localhost* and port as *5901* and connect VNC. The port number should be same as specified in attribute *vncPort*"
msgstr ""

#: ../container.md:37
msgid "Upon [debugging/running](https://github.com/gaphor/gaphor/blob/main/.devcontainer/devcontainer.json) Gaphor the familiar Graphic window should be displayed in VNC view"
msgstr ""

#: ../container.md:39
msgid "Using noVNC viewer on the Browser"
msgstr ""

#: ../container.md:40
msgid "This is based on [noVNC](https://novnc.com/info.html) application"
msgstr ""

#: ../container.md:41
msgid "Open the browser on your local machine and give address as *http://127.0.0.1:6080/*. The port number should be same as specified in attribute *webPort*"
msgstr ""

#: ../container.md:42
msgid "A noVNC window will open, click on Connect and provide password as *vscode*. The password should be same as specified in attribute *password*"
msgstr ""

#: ../container.md:43
msgid "Upon [debugging/running](https://github.com/gaphor/gaphor/blob/main/.devcontainer/devcontainer.json) Gaphor the familiar Graphic window should be displayed in noVNC view on Browser"
msgstr ""

#: ../design_principles.md:1
msgid "Design Principles"
msgstr ""

#: ../design_principles.md:3
msgid "Gaphor has been around for quite a few years. In those years we (the Gaphor developers) learned a few things on how to build it. Gaphor tries to be easily accessible for novice users as well as a useful tool for more experienced users."
msgstr ""

#: ../design_principles.md:7
msgid "Gaphor is not your average editor. It's a modeling environment. This implies there is a language underpinning the models. Languages adhere to rules and Gaphor tries to follow those rules."
msgstr ""

#: ../design_principles.md:11
msgid "Usability is very important. When you're new to Gaphor, it should be easy to find your way around. Minimal knowledge of UML should at least allow you to create a class diagram."
msgstr ""

#: ../design_principles.md:19
msgid "Guidance"
msgstr ""

#: ../design_principles.md:21
msgid "To help users, Gaphor should provide guidance where it can."
msgstr ""

#: ../design_principles.md:23
msgid "Help with relationships"
msgstr ""

#: ../design_principles.md:25
msgid "The diagram has a feature that it grays out all elements a relationship can not connect to. This helps you to decide where a relation can connect to. You can still mix different elements, but we try to make it as simple as possible to make consistent models."
msgstr ""

#: ../design_principles.md:30
msgid "Keep the model in sync"
msgstr ""

#: ../design_principles.md:32
msgid "An important part of modeling is to design a system in abstractions and be able to explain those to others. As systems become more complicated, it's important to have the design (model) layed out in diagrams."
msgstr ""

#: ../design_principles.md:36
msgid "Gaphor goes through great lengths to keep the model in sync with the diagrams. In doing so, unused elements can be automatically removed from the model if they're no longer shown in any diagram."
msgstr ""

#: ../design_principles.md:40
msgid "Out of your way"
msgstr ""

#: ../design_principles.md:42
msgid "When modeling, you should be busy with your problem or solution domain, not with the tool. Gaphor tries to stay out of your way as much as possible. It does not try to nag you with error messages, because the model is not \"correct\"."
msgstr ""

#: ../design_principles.md:46
msgid "Avoid dialogs"
msgstr ""

#: ../design_principles.md:48
msgid "In doing the right thing, and staying out of the way of users, Gaphor avoids the use of dialogs as much as possible."
msgstr ""

#: ../design_principles.md:51
msgid "Gaphor should allow you to do the sensible thing (see above) and not get you out of your flow with all sorts of questions."
msgstr ""

#: ../design_principles.md:54
msgid "Notify on changes"
msgstr ""

#: ../design_principles.md:56
msgid "When Gaphor is doing something that is not directly visible, you'll see a notification, for example, an element that's indirectly removed from the model. It will not interrupt you with dialogs, but only provide a small in-app notification. If the change is undesired, hit `undo`."
msgstr ""

#: ../design_principles.md:61
msgid "Balanced"
msgstr ""

#: ../design_principles.md:63
msgid "Although Gaphor implements quite a bit of the UML 2 model, it's not complete. We try to find the right balance in features to suite both expert and novice modellers."
msgstr ""

#: ../design_principles.md:67
msgid "Continuity"
msgstr ""

#: ../design_principles.md:69
msgid "A model that is created should be usable in the future. Gaphor does acknowledge that. We care about compatibility."
msgstr ""

#: ../design_principles.md:72
msgid "Backwards compatibility"
msgstr ""

#: ../design_principles.md:74
msgid "Gaphor is capable of loading models going back to Gaphor 1.0. It's important for a tool to always allow older models to be loaded."
msgstr ""

#: ../design_principles.md:77
msgid "Multi-platform"
msgstr ""

#: ../design_principles.md:79
msgid "We put a lot of effort in making Gaphor run on all major platforms: Windows, macOS, and Linux. Having Gaphor available on all platforms is essential if the model needs to be shared. It would be awful if you need to run one specific operating system in order to open a model."
msgstr ""

#: ../design_principles.md:84
msgid "So far, we do not support the fourth major platform (web). Native applications provide a better user experience (once installed). But this may change."
msgstr ""

#: ../design_principles.md:87
msgid "User interaction"
msgstr ""

#: ../design_principles.md:89
msgid "Gaphor is originally written on Linux. It uses [GTK](https://gtk.org) as it's user interface toolkit. This sort of implies that Gaphor follows the [GNOME Human Interface Guidelines (HIG)](https://developer.gnome.org/hig/). Gaphor is also a multi-platform application. We try to stay close to the GNOME HIG, but try not to introduce concepts that are not available on Windows and macOS."
msgstr ""

#: ../design_principles.md:95
msgid "User interface components are not generated. We found that UI generation (like many enterprise modeling tools do) provides an awful user experience. We want users to use Gaphor on a regular basis, so we aim for it to be a tool that's pleasant to look at and easy to work with."
msgstr ""

#: ../design_principles.md:101
msgid "What else?"
msgstr ""

#: ../design_principles.md:103
msgid "**Idempotency** Allow the same operation to be applied multiple times. This should not affect the result."
msgstr ""

#: ../design_principles.md:105
msgid "**Event Driven** Gaphor is a user application. It acts to user events. The application uses an internal event dispatches (event bus) to distribute events to interested parties. Everyone should be able to listen to events."
msgstr ""

#: ../event_system.md:1
msgid "Event System"
msgstr ""

#: ../event_system.md:3
msgid "The event system in Gaphor provides an API to *handle* events and to *subscribe* to events."
msgstr ""

#: ../event_system.md:6
msgid "In Gaphor we manage event handler subscriptions through the `EventManager` service. Gaphor is highly event driven:"
msgstr ""

#: ../event_system.md:9
msgid "Changes in the loaded model are emitted as events"
msgstr ""

#: ../event_system.md:10
msgid "Changes on diagrams are emitted as events"
msgstr ""

#: ../event_system.md:11
msgid "Changes in the UI are emitted as events"
msgstr ""

#: ../event_system.md:13
msgid "Although Gaphor depends heavily on GTK for its user interface, Gaphor is using its own event dispatcher. Events can be structured in hierarchies. For example, an `AttributeUpdated` event is a subtype of `ElementUpdated`. If we are interested in all changes to elements, we can also register `ElementUpdated` and receive all `AttributeUpdated` events as well."
msgstr ""

#: ../../gaphor/core/eventmanager.py:docstring of gaphor.core.eventmanager.EventManager:1
msgid "The Event Manager."
msgstr ""

#: ../../gaphor/core/eventmanager.py:docstring of gaphor.core.eventmanager.EventManager.handle:1
msgid "Send event notifications to registered handlers."
msgstr ""

#: ../../gaphor/core/eventmanager.py:docstring of gaphor.core.eventmanager.EventManager.priority_subscribe:1
#: ../../gaphor/core/eventmanager.py:docstring of gaphor.core.eventmanager.EventManager.subscribe:1
msgid "Register a handler."
msgstr ""

#: ../../gaphor/core/eventmanager.py:docstring of gaphor.core.eventmanager.EventManager.priority_subscribe:3
msgid "Priority handlers are executed directly. They should not raise other events, cause that can cause a problem in the exection order."
msgstr ""

#: ../../gaphor/core/eventmanager.py:docstring of gaphor.core.eventmanager.EventManager.priority_subscribe:6
msgid "It's basically to make sure that all events are recorded by the undo manager."
msgstr ""

#: ../../gaphor/abc.py:docstring of gaphor.abc.Service.shutdown:1
#: ../../gaphor/core/eventmanager.py:docstring of gaphor.core.eventmanager.EventManager.shutdown:1
msgid "Shutdown the services, free resources."
msgstr ""

#: ../../gaphor/core/eventmanager.py:docstring of gaphor.core.eventmanager.EventManager.subscribe:3
msgid "Handlers are triggered (executed) when specific events are emitted through the handle() method."
msgstr ""

#: ../../gaphor/core/eventmanager.py:docstring of gaphor.core.eventmanager.EventManager.unsubscribe:1
msgid "Unregister a previously registered handler."
msgstr ""

#: ../event_system.md:24
msgid "Under the hood events are handled by the Generics library. For more information about how the Generic library handles events see the [Generic documentation](https://generic.readthedocs.io)."
msgstr ""

#: ../first_model.md:1
msgid "Your First Model"
msgstr ""

#: ../first_model.md:8
msgid "Although the names should speak for themselves, you can check out the [Getting Started](getting_started) page for more information."
msgstr ""

#: ../first_model.md:12
msgid "Once Gaphor is started, and you can start a new model with the _Generic_ template. The initial diagram is already open in the Diagram section."
msgstr ""

#: ../first_model.md:15
msgid "Select an element you want to place, in this case a Class (![new class](../gaphor/ui/icons/hicolor/scalable/actions/gaphor-class-symbolic.svg)) by clicking on the icon in the Toolbox and click on the diagram. This will place a new Class item instance on the diagram and add a new Class to the model -- it shows up in the Model Browser. The selected tool will reset itself to the Pointer tool after the element is placed on the diagram."
msgstr ""

#: ../first_model.md:15
msgid "newclass"
msgstr ""

#: ../first_model.md:22
msgid "The Property Editor on the right side will show you details about the newly added class, such as its name (_New Class_), attributes and operations (methods). The Note field can contain any text you wish to associate with the element, (this will not show on a diagram)."
msgstr ""

#: ../first_model.md:26
msgid "![image](images/first-model-class.png)"
msgstr ""

#: ../first_model.md:26
#: ../first_model.md:49
#: ../first_model.md:61
msgid "image"
msgstr ""

#: ../first_model.md:28
msgid "It's simple to add elements to a diagram."
msgstr ""

#: ../first_model.md:30
msgid "Gaphor does not make any assumptions about which elements should be placed on a diagram. A diagram is a diagram. UML defines all different kinds of diagrams, such as Class diagrams, Component diagrams, Action diagrams, Sequence diagrams. But Gaphor does not place any restrictions."
msgstr ""

#: ../first_model.md:35
msgid "Adding Relations"
msgstr ""

#: ../first_model.md:37
msgid "Add another Class. Change the names to `Shape` and `Circle`. Let's define that `Circle` is a sub-type of `Shape`. You can do this by selecting one and changing the name in the Property Editor, or by double-clicking the element."
msgstr ""

#: ../first_model.md:41
msgid "Select Generalization (![new generalization](../gaphor/ui/icons/hicolor/scalable/actions/gaphor-generalization-symbolic.svg))."
msgstr ""

#: ../first_model.md:41
msgid "newgeneralization"
msgstr ""

#: ../first_model.md:44
msgid "Move the mouse cursor over `Shape`. Click, hold and drag the line end over `Circle`. Release the mouse button, and you should have your relationship between `Shape` and `Circle`. You can see both ends of the relation are red, indicating they are connected to their class."
msgstr ""

#: ../first_model.md:49
msgid "![image](images/first-model-generalization.png)"
msgstr ""

#: ../first_model.md:51
msgid "Optionally you can run the auto-layout (![open menu](images/open-menu-symbolic.svg) → Tools → Auto Layout) to align the elements on the diagram."
msgstr ""

#: ../first_model.md:51
msgid "openmenu"
msgstr ""

#: ../first_model.md:55
msgid "Creating New Diagrams"
msgstr ""

#: ../first_model.md:57
msgid "To create a new diagram, use the Model Browser. Select the element that should contain the new diagram. For now, select _New Model_. Click the New Diagram menu (![new diagram](images/list-add-symbolic.svg)) in the header bar."
msgstr ""

#: ../first_model.md:57
msgid "new diagram"
msgstr ""

#: ../first_model.md:61
msgid "![image](/images/first-model-new-diagram-popup.png)"
msgstr ""

#: ../first_model.md:63
msgid "Select _New Generic Diagram_ and a new diagram is created."
msgstr ""

#: ../first_model.md:65
msgid "Now drag the elements from the Model Browser onto the new diagram. First the classes `Shape` and `Circle`. Add the generalization last. Drop it somewhere between the two classes. The relation will be created to the diagram."
msgstr ""

#: ../first_model.md:69
msgid "Now change the name of class `Circle` to `Ellipse`. Check the other diagram. The name has been changed there as well."
msgstr ""

#: ../first_model.md:74
msgid "Elements in a diagram are only a _representation_ of the elements in the underlying model. The model is what you see in the Model Browser."
msgstr ""

#: ../first_model.md:77
msgid "Elements in the model are automatically removed when there are no more representations in any of the diagrams."
msgstr ""

#: ../framework.md:1
msgid "Framework"
msgstr ""

#: ../framework.md:3
msgid "Overview"
msgstr ""

#: ../framework.md:5
msgid "Gaphor is built in a light, service oriented fashion. The application is split in a series of services, such as a file, event, and undo managers. Those services are loaded based on entry points defined in the `pyproject.toml` file. To learn more about the architecture, please see the description about the [Service Oriented Architecture](service_oriented.md)."
msgstr ""

#: ../framework.md:11
msgid "Event driven"
msgstr ""

#: ../framework.md:13
msgid "Parts of Gaphor communicate with each other through events. Whenever something important happens, for example, an attribute of a model element changes, an event is sent. When other parts of the application are interested in a change, they register an event handler for that event type. Events are emitted though a central broker so you do not have to register on every individual element that can send an event they are interested in. For example, a diagram item could register an event rule and then check if the element that sent the event is actually the event the item is representing. For more information see the full description of the [event system](event_system.md)."
msgstr ""

#: ../framework.md:23
msgid "Transactional"
msgstr ""

#: ../framework.md:25
msgid "Gaphor is [transactional](transaction.md), which means it keeps track of the functions it performs as a series of transactions. The transactions work by sending an event when a transaction starts and sending another when a transaction ends. This allows, for example, the undo manager to keep a running log of the previous transactions so that a transaction can be reversed if the undo button is pressed."
msgstr ""

#: ../framework.md:32
msgid "Main Components"
msgstr ""

#: ../framework.md:34
msgid "The main portion of Gaphor that executes first is called the `Application`. Gaphor can have multiple models open at any time. Each model is kept in a `Session`. Only one Application instance is active. Each session will load its own services defined as [gaphor.services](service_oriented.md)."
msgstr ""

#: ../framework.md:40
msgid "The most notable services are:"
msgstr ""

#: ../framework.md:42
msgid "event_manager"
msgstr ""

#: ../framework.md:44
msgid "This is the central component used for event dispatching. Every service that does something with events (both sending and receiving) depends on this component."
msgstr ""

#: ../framework.md:48
msgid "file_manager"
msgstr ""

#: ../framework.md:50
msgid "Loading and saving a model is done through this service."
msgstr ""

#: ../framework.md:52
msgid "element_factory"
msgstr ""

#: ../framework.md:54
msgid "The [data model](models/core.md) itself is maintained in the element factory (`gaphor.core.modeling.elementfactory`). This service is used to create model elements, as well as to lookup elements or query for a set of elements."
msgstr ""

#: ../framework.md:58
msgid "undo_manager"
msgstr ""

#: ../framework.md:60
msgid "One of the most appreciated services. It allows users to make a mistake every now and then!"
msgstr ""

#: ../framework.md:63
msgid "The undo manager is transactional. Actions performed by a user are only stored if a transaction is active. If a transaction is completed (committed) a new undo action is stored. Transactions can also be rolled back, in which case all changes are played back directly. For more information see the full description of the [undo manager](undo.md)."
msgstr ""

#: ../gaphor-services.md:5
msgid "Example: Gaphor services"
msgstr ""

#: ../gaphor-services.md:7
msgid "In this example we're doing something a little less trivial. In Gaphor, services are defined as entry points. Each service is a class, and takes parameters with names that match other services. This allows services to depend on other services."
msgstr ""

#: ../gaphor-services.md:12
msgid "It looks something like this:"
msgstr ""

#: ../gaphor-services.md:51
msgid "Let's first load the entry points."
msgstr ""

#: ../gaphor-services.md:61
msgid "Now let's create a component in our model for every service."
msgstr ""

#: ../gaphor-services.md:78
msgid "With all components mapped, we can create dependencies between those components, based on the constructor parameter names."
msgstr ""

#: ../gaphor-services.md:94
msgid "With all elements in the model, we can create a diagram. Let's drop the components and dependencies on the diagram and let auto-layout do its magic."
msgstr ""

#: ../gaphor-services.md:97
msgid "To make the dependency look good, we have to add a style sheet. If you create a new diagram via the GUI, this element is automatically added."
msgstr ""

#: ../gaphor-services.md:111
msgid "Last step is to layout and draw the diagram."
msgstr ""

#: ../gaphor-services.md:121
msgid "That's all. As you can see from the diagram, a lot of services rely on `EventManager`."
msgstr ""

#: ../getting_started.md:1
msgid "Get Started with Gaphor"
msgstr ""

#: ../getting_started.md:3
msgid "Gaphor is more than a diagram editor: it's a modeling environment. Where simple diagram editors such as Microsoft Visio and [draw.io](https://draw.io) allow you to create pictures, Gaphor actually keeps track of the elements you add to the model. In Gaphor you can create diagrams to track and visualize different aspects of the system you're developing."
msgstr ""

#: ../getting_started.md:9
msgid "Enough talk, let's get started."
msgstr ""

#: ../getting_started.md:11
msgid "You can find installers for Gaphor on the [Gaphor Website](https://gaphor.org/download). Gaphor can be installed on Linux (Flatpak), Windows, and macOS."
msgstr ""

#: ../getting_started.md:14
msgid "Once Gaphor is launched, it provides you a welcome screen. It shows you previously opened models and model templates."
msgstr ""

#: ../getting_started.md:17
msgid "![welcome screen](images/getting-started-greeter.png)"
msgstr ""

#: ../getting_started.md:17
msgid "welcome screen"
msgstr ""

#: ../getting_started.md:19
msgid "You can select a template to get started."
msgstr ""

#: ../getting_started.md:21
msgid "**Generic:** a blank model to start with"
msgstr ""

#: ../getting_started.md:22
msgid "**UML:** A template for the *Unified Modeling Language* for modeling a software system"
msgstr ""

#: ../getting_started.md:23
msgid "**SysML:** A template for the *Systems Modeling Language* for modeling a wide range of systems and systems-of-systems"
msgstr ""

#: ../getting_started.md:24
msgid "**RAAML:** A template for the *Risk Analysis and Assessment Modeling language* for safety and reliability analysis"
msgstr ""

#: ../getting_started.md:25
msgid "**C4 Model:** A template for *Context, Containers, Components, and Code* which is for lean modeling of software architecture"
msgstr ""

#: ../getting_started.md:27
msgid "Once the model interface is loaded you'll see the modeling interface."
msgstr ""

#: ../getting_started.md:29
msgid "![new model](images/getting-started-new-model.png)"
msgstr ""

#: ../getting_started.md:29
msgid "new model"
msgstr ""

#: ../getting_started.md:31
msgid "The layout of the Gaphor interface is divided into four sections, namely:"
msgstr ""

#: ../getting_started.md:34
#: ../getting_started.md:41
msgid "Model Browser"
msgstr ""

#: ../getting_started.md:35
msgid "Diagram Element Toolbox"
msgstr ""

#: ../getting_started.md:36
#: ../getting_started.md:80
msgid "Diagrams"
msgstr ""

#: ../getting_started.md:37
#: ../getting_started.md:143
msgid "Property Editor"
msgstr ""

#: ../getting_started.md:39
msgid "Each section has its own specific function."
msgstr ""

#: ../getting_started.md:43
msgid "The Model Browser section of the interface displays a hierarchical view of your model. Every model element you create will be inserted into the Model Browser. This view acts as a tree where you can expand and collapse different elements of your model. This provides an easy way to view the elements of your model from an elided perspective. That is, you can collapse those model elements that are irrelevant to the task at hand."
msgstr ""

#: ../getting_started.md:51
msgid "In the figure above, you will see that there are two elements in the Model Browser. The root element, _New Model_ is a package. Notice the small arrow beside _New Model_ that is pointing downward. This indicates that the element is expanded. You will also notice the two sub-elements are slightly indented in relation to _New Model_. The _main_ element is a diagram."
msgstr ""

#: ../getting_started.md:58
msgid "In the Model Browser view, you can also right-click the model elements to get a context menu. This context menu allows you to find out in which diagram model elements are shown, add new diagrams and packages, and delete an element."
msgstr ""

#: ../getting_started.md:63
msgid "Double-clicking on a diagram element will show it in the Diagram section. Elements such as classes and packages can be dragged from the tree view on the diagrams."
msgstr ""

#: ../getting_started.md:67
msgid "Toolbox"
msgstr ""

#: ../getting_started.md:69
msgid "The toolbox is used to add new items to a diagram. Select the element you want to add by clicking on it. When you click on the diagram, the selected element is created. The arrow is selected again, so the element can be manipulated."
msgstr ""

#: ../getting_started.md:73
msgid "Tools can be selected by simply left-clicking on them. By default, the pointer tool is selected after every item placement. This can be changed by disabling the \"Reset tool\" option in the Preferences window. Tools can also be selected by keyboard shortcuts. The keyboard shortcut can be displayed as a tooltip by hovering over the tool button in the toolbox. Finally, it is also possible to drag elements on the Diagram from the toolbox."
msgstr ""

#: ../getting_started.md:82
msgid "The diagram section contains diagrams of the model and takes up the most space in the UI because it is where most of the modeling is done. Diagrams consist of items placed on the diagram. There are two main types of items:"
msgstr ""

#: ../getting_started.md:86
#: ../getting_started.md:93
msgid "Elements"
msgstr ""

#: ../getting_started.md:87
msgid "Relationships"
msgstr ""

#: ../getting_started.md:89
msgid "Multiple diagrams can be opened at once: they are shown in tabs. Tabs can be closed by pressing <kbd>Ctrl</kbd>+<kbd>w</kbd> or left-clicking on the x in the diagram tab."
msgstr ""

#: ../getting_started.md:95
msgid "Elements are the shapes that you add to a diagram, and together with Relations, allow you to build up a model."
msgstr ""

#: ../getting_started.md:98
msgid "To resize an element on the diagram, left-click on the element to select it and then drag the resize handles that appear at each corner."
msgstr ""

#: ../getting_started.md:101
msgid "To move an element on the diagram, drag the element where you want to place it by pressing and holding the left mouse button, and moving the mouse before releasing the button."
msgstr ""

#: ../getting_started.md:105
msgid "Relations"
msgstr ""

#: ../getting_started.md:107
msgid "Relations are line-like items that form relationships between elements in the diagram. Each end of a relation is in one of two states:"
msgstr ""

#: ../getting_started.md:110
msgid "Connected to an element and the handle turns red"
msgstr ""

#: ../getting_started.md:111
msgid "Disconnected from an element and the handle turns green"
msgstr ""

#: ../getting_started.md:113
msgid "If both ends of a relation are disconnected, the relation can be moved by left-clicking and dragging it."
msgstr ""

#: ../getting_started.md:116
msgid "A new segment in a relation can be added by left-clicking on the relation to select it and then by hovering your mouse over it. A green handle will appear in the middle of the line segments that exist. Drag the handle to add another segment. For example, when you first create a new relation, it will have only one segment. If you drag the segment handle, then it will now have two segments with the knee of the two segments where the handle was."
msgstr ""

#: ../getting_started.md:123
msgid "Copy and Paste"
msgstr ""

#: ../getting_started.md:125
msgid "As stated before, Gaphor is a modeling environent. This means that every _item_ in a diagram is backed by a _model element_ found in the model browser. This means that you can show the same _model element_ in different diagrams."
msgstr ""

#: ../getting_started.md:129
msgid "<kbd>Ctrl</kbd>+<kbd>v</kbd> is used to paste _only_ the presentation element."
msgstr ""

#: ../getting_started.md:130
msgid "<kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>v</kbd> is used to paste a new presentation with a new model element."
msgstr ""

#: ../getting_started.md:133
msgid "<kbd>Ctrl</kbd>+<kbd>v</kbd> does a \"shallow\" paste. <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>v</kbd> does a \"deep\" paste."
msgstr ""

#: ../getting_started.md:136
msgid "Undo and Redo"
msgstr ""

#: ../getting_started.md:138
msgid "Undo a change press <kbd>Ctrl</kbd>+<kbd>z</kbd> or left-click on the back arrow at the top of the Property Editor. To re-do a change, hit <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>z</kbd> or press the forward arrow at the top of the Property Editor."
msgstr ""

#: ../getting_started.md:145
msgid "The Property Editor is present on the right side of the diagrams. When no item is selected in the diagram, it shows you some tips and tricks. When an item is selected on the diagram, it contains the item details like name, attributes and stereotypes. It can be opened with <kbd>F9</kbd> and the ![sidebar-show-right-symbolic](images/sidebar-show-right-symbolic.svg) icon in the header bar."
msgstr ""

#: ../getting_started.md:145
msgid "sidebar-show-right-symbolic"
msgstr ""

#: ../getting_started.md:152
msgid "The properties that are shown depend on the item that is selected."
msgstr ""

#: ../getting_started.md:154
msgid "Model Preferences"
msgstr ""

#: ../getting_started.md:156
msgid "The Property Editor also contains model preferences: Click the ![document-properties-symbolic](images/document-properties-symbolic.svg) button."
msgstr ""

#: ../getting_started.md:156
msgid "document-properties-symbolic"
msgstr ""

#: ../getting_started.md:159
msgid "Reset Tool Automatically"
msgstr ""

#: ../getting_started.md:161
msgid "By default the pointer tool is selected after an element is placed from the toolbox. If this option is turned off, the same type of element will be placed by clicking in the diagram until another element is selected in the toolbox."
msgstr ""

#: ../getting_started.md:163
msgid "Remove Unused Elements"
msgstr ""

#: ../getting_started.md:165
msgid "By default elements that are not part of any diagram in the model will be removed. If this option is turned off, elements remain in the model and may be found in the model browser."
msgstr ""

#: ../getting_started.md:167
msgid "Diagram Language"
msgstr ""

#: ../getting_started.md:169
msgid "The diagram language modifier is only applicable to the loaded model and how it is shown in the diagram. The diagram language setting is saved as part of the model and defaults to English."
msgstr ""

#: ../getting_started.md:171
msgid "The UI language of Gaphor is controlled by the operating system."
msgstr ""

#: ../getting_started.md:174
msgid "Gaphor considers the ``LANG`` environment variable on Linux, Windows and macOS."
msgstr ""

#: ../getting_started.md:176
msgid "On Windows and macOS it can be set independently of the operating system's language settings to a different language."
msgstr ""

#: ../getting_started.md:178
msgid "Style Sheet"
msgstr ""

#: ../getting_started.md:180
msgid "The [style sheet](style_sheets) allows to change the visual appearance of diagrams and model elements."
msgstr ""

#: ../index.rst:29
msgid "Getting Started"
msgstr ""

#: ../index.rst:38
msgid "Features"
msgstr ""

#: ../index.rst:49
msgid "Installation"
msgstr ""

#: ../index.rst:58
msgid "Modeling languages"
msgstr ""

#: ../index.rst:68
msgid "Concepts"
msgstr ""

#: ../index.rst:78
msgid "Internals"
msgstr ""

#: ../index.rst:2
msgid "About Gaphor"
msgstr ""

#: ../index.rst:6
msgid "The documentation is up to date for Gaphor |version|"
msgstr ""

#: ../index.rst:8
msgid "Gaphor is a UML and SysML modeling application written in Python. It is designed to be easy to use, while still being powerful. Gaphor implements a fully-compliant UML 2 data model, so it is much more than a picture drawing tool."
msgstr ""

#: ../index.rst:13
msgid "You can use Gaphor to quickly visualize different aspects of a system as well as create complete, highly complex models."
msgstr ""

#: ../index.rst:18
msgid "Gaphor is 100% Open source, available under a friendly `Apache 2 license <https://github.com/gaphor/gaphor/blob/main/LICENSES/Apache-2.0.txt>`_. The code and issue tracker can be found on `GitHub <https://github.com/gaphor/gaphor>`_."
msgstr ""

#: ../index.rst:21
msgid "What are you waiting for? :doc:`Let's get started <getting_started>`!"
msgstr ""

#: ../index.rst:23
msgid "For download instructions, and the blog, please visit the `Gaphor Website <https://gaphor.org>`_."
msgstr ""

#: ../index.rst:26
msgid "Did you know Gaphor has excellent integration with :doc:`Sphinx <sphinx>` and :doc:`Jupyter notebooks <scripting>`?"
msgstr ""

#: ../linux.md:1
msgid "Gaphor on Linux"
msgstr ""

#: ../linux.md:3
msgid "Gaphor can be installed as Flatpak on Linux, some distributions provide packages. Check out the [Gaphor download page](https://gaphor.org/download/#linux) for details."
msgstr ""

#: ../linux.md:7
#: ../macos.md:5
#: ../windows.md:7
msgid "Older releases are available from [GitHub](https://github.com/gaphor/gaphor/releases)."
msgstr ""

#: ../linux.md:9
#: ../macos.md:7
#: ../windows.md:9
msgid "[CI builds](https://github.com/gaphor/gaphor/actions/workflows/full-build.yml) are also available."
msgstr ""

#: ../linux.md:11
#: ../macos.md:10
#: ../windows.md:11
msgid "Development Environment"
msgstr ""

#: ../linux.md:13
msgid "There are two ways to set up a development environment:"
msgstr ""

#: ../linux.md:15
msgid "[GNOME Builder](#gnome-builder), ideal for “drive by” contributions."
msgstr ""

#: ../linux.md:16
msgid "[A local environment](#a-local-environment)."
msgstr ""

#: ../linux.md:18
msgid "GNOME Builder"
msgstr ""

#: ../linux.md:20
msgid "Open [GNOME Builder](https://flathub.org/apps/details/org.gnome.Builder) 43 or newer, [clone the repository](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository). Check if the _Build Profile_ is set to `org.gaphor.Gaphor.json`. If so, hit the _Run_ button to start the application."
msgstr ""

#: ../linux.md:25
msgid "A Local Environment"
msgstr ""

#: ../linux.md:27
msgid "To set up a development environment with Linux, you first need a fairly new Linux distribution version. For example, the latest Ubuntu LTS or newer, Arch, Debian Testing, SUSE Tumbleweed, or similar. Gaphor depends on newer versions of GTK, and we don't test for backwards compatibility. You will also need the latest stable version of Python. In order to get the latest stable version without interfering with your system-wide Python version, we recommend that you install [pyenv](https://github.com/pyenv/pyenv)."
msgstr ""

#: ../linux.md:35
msgid "Install the pyenv [prerequisites](https://github.com/pyenv/pyenv/wiki/Common-build-problems) first, and then install pyenv:"
msgstr ""

#: ../linux.md:42
msgid "Make sure you follow the instruction at the end of the installation script to install the commands in your shell's rc file. Next install the latest version of Python by executing:"
msgstr ""

#: ../linux.md:50
msgid "Where 3.x.x is replaced by the latest stable version of Python (pyenv should let you tab-complete available versions)."
msgstr ""

#: ../linux.md:52
msgid "Next install the Gaphor prerequisites by installing the gobject introspection and cairo build dependencies, for example, in Ubuntu execute:"
msgstr ""

#: ../linux.md:61
#: ../macos.md:18
msgid "Install [Poetry](https://python-poetry.org) using [pipx](https://pypa.github.io/pipx/):"
msgstr ""

#: ../linux.md:66
#: ../macos.md:23
msgid "[Clone the repository](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository)."
msgstr ""

#: ../linux.md:79
msgid "NOTE: Gaphor requires GTK 4. It works best with GTK >=4.8 and libadwaita >=1.2."
msgstr ""

#: ../linux.md:81
#: ../macos.md:39
#: ../windows.md:173
msgid "Debugging using Visual Studio Code"
msgstr ""

#: ../linux.md:83
msgid "Before you start debugging you'll need to open Gaphor in vscode (the folder containing `pyproject.toml`). You'll need to have the Python extension installed."
msgstr ""

#: ../linux.md:86
#: ../macos.md:44
msgid "Create a file `.vscode/launch.json` with the following content:"
msgstr ""

#: ../linux.md:106
msgid "`GDK_BACKEND` is added since VSCode by default uses XWayland (the X11 emulator)."
msgstr ""

#: ../linux.md:108
msgid "Create a Flatpak Package"
msgstr ""

#: ../linux.md:110
msgid "The main method that Gaphor is packaged for Linux is with a Flatpak package. [Flatpak](https://flatpak.org) is a software utility for software deployment and package management for Linux. It offer a sandbox environment in which users can run application software in isolation from the rest of the system."
msgstr ""

#: ../linux.md:115
msgid "We distribute the official Flatpak using [Flathub](https://flathub.org), and building of the image is done at the [Gaphor Flathub repository](https://github.com/flathub/org.gaphor.Gaphor)."
msgstr ""

#: ../linux.md:119
msgid "[Install Flatpak](https://flatpak.org/setup)"
msgstr ""

#: ../linux.md:121
msgid "Install flatpak-builder"
msgstr ""

#: ../linux.md:125
msgid "Install the GNOME SDK"
msgstr ""

#: ../linux.md:129
msgid "Clone the Flathub repository and install the necessary SDK:"
msgstr ""

#: ../linux.md:135
msgid "Build Gaphor Flatpak"
msgstr ""

#: ../linux.md:139
msgid "Install the Flatpak"
msgstr ""

#: ../linux.md:143
msgid "Linux Distribution Packages"
msgstr ""

#: ../linux.md:145
msgid "Examples of Gaphor and Gaphas RPM spec files can be found in [PLD Linux](https://www.pld-linux.org/) [repository](https://github.com/pld-linux/):"
msgstr ""

#: ../linux.md:149
msgid "https://github.com/pld-linux/python-gaphas"
msgstr ""

#: ../linux.md:150
msgid "https://github.com/pld-linux/gaphor"
msgstr ""

#: ../linux.md:152
msgid "There is also an [Arch User Repository (AUR) for Gaphor](https://aur.archlinux.org/packages/python-gaphor) available for Arch users."
msgstr ""

#: ../linux.md:156
msgid "Please, do not hesitate to contact us if you need help to create a Linux package for Gaphor or Gaphas."
msgstr ""

#: ../macos.md:1
msgid "Gaphor on macOS"
msgstr ""

#: ../macos.md:3
msgid "The latest release of Gaphor can be downloaded from the [Gaphor download page](https://gaphor.org/download#macos). Gaphor can also be installed as a [Homebrew cask](https://formulae.brew.sh/cask/gaphor)."
msgstr ""

#: ../macos.md:12
msgid "To setup a development environment with macOS:"
msgstr ""

#: ../macos.md:13
msgid "Install [Homebrew](https://brew.sh)"
msgstr ""

#: ../macos.md:14
msgid "Open a terminal and execute:"
msgstr ""

#: ../macos.md:32
msgid "If PyGObject does not compile and complains about a missing `ffi.h` file, set the following environment variable and run `poetry install` again:"
msgstr ""

#: ../macos.md:41
msgid "Before you start debugging you'll need to open Gaphor in VSCode (the folder containing `pyproject.toml`). You'll need to have the Python extension installed."
msgstr ""

#: ../macos.md:61
msgid "Packaging for macOS"
msgstr ""

#: ../macos.md:63
msgid "In order to create an exe installation package for macOS, we utilize [PyInstaller](https://pyinstaller.org) which analyzes Gaphor to find all the dependencies and bundle them in to a single folder."
msgstr ""

#: ../macos.md:67
msgid "Follow the instructions for settings up a development environment above"
msgstr ""

#: ../macos.md:68
msgid "Open a terminal and execute the following from the repository directory:"
msgstr ""

#: ../merge_conflicts.md:1
msgid "Resolve Merge Conflicts"
msgstr ""

#: ../merge_conflicts.md:3
msgid "Suppose you’re working on a model. If you create a change, while someone else has also made changes, there’s a fair chance you'll end up with a merge conflict."
msgstr ""

#: ../merge_conflicts.md:6
msgid "Gaphor tries to make the changes to a model as small as possible: all elements are stored in the same order. However, since a Gaphor model is a persisted graph of objects, merging changes is not as simple as opening a text editor."
msgstr ""

#: ../merge_conflicts.md:10
msgid "From Gaphor 2.18 onwards Gaphor is also capable of merging models. Once a merge conflict has been detected (i.e., when the model file contains git conflict-resolution markers `<<<<<<<`, `=======`, and `>>>>>>>`), Gaphor will offer the option to open the current model, the incoming model or merge changes manually via the Merge Editor."
msgstr ""

#: ../merge_conflicts.md:15
msgid "![merge dialog](images/merge-dialog.png)"
msgstr ""

#: ../merge_conflicts.md:15
msgid "merge dialog"
msgstr ""

#: ../merge_conflicts.md:17
msgid "If you choose *Open Merge Editor*, both models will be loaded. The current model remains as is. In addition, the changes made to the incoming model are calculated. Those changes are stored as _pending change_ objects in the model."
msgstr ""

#: ../merge_conflicts.md:21
msgid "Pending changes are part of the model, you can save the model with changes and resolve those at a later point."
msgstr ""

#: ../merge_conflicts.md:24
msgid "The Merge Editor is shown on the right side, replacing the (normal) Property Editor."
msgstr ""

#: ../merge_conflicts.md:26
msgid "![merge conflict window](images/merge-conflict-window.png)"
msgstr ""

#: ../merge_conflicts.md:26
msgid "merge conflict window"
msgstr ""

#: ../merge_conflicts.md:28
msgid "Merge actions are grouped by diagram, where possible. When you apply a change, all changes listed as children are also applied. Once changes are applied, they can only be reverted by undoing the change (hit _Undo_)."
msgstr ""

#: ../merge_conflicts.md:33
msgid "The Merge Editor replaces the Property Editor, as long as there are pending changes in the model."
msgstr ""

#: ../merge_conflicts.md:35
msgid "It is concidered good practice to resolve the merge conflict before you continue modeling."
msgstr ""

#: ../merge_conflicts.md:38
msgid "When all conflicts have been resolved, press *Resolve* to finish merge conflict resolution."
msgstr ""

#: ../modeling_language.md:1
msgid "Modeling Languages"
msgstr ""

#: ../modeling_language.md:3
msgid "Since version 2.0, Gaphor supports the concept of Modeling languages. This allows for development of separate modeling languages separate from the Gaphor core application."
msgstr ""

#: ../modeling_language.md:7
msgid "The main language was, and will be UML. Gaphor now also supports a subset of SysML, RAAML and the C4 model."
msgstr ""

#: ../modeling_language.md:10
msgid "A modeling language in Gaphor is defined by a class implementing the `gaphor.abc.ModelingLanguage` abstract base class. The modeling language should be registered as a `gaphor.modelinglanguage` entry point."
msgstr ""

#: ../modeling_language.md:14
msgid "The `ModelingLanguage` interface is fairly minimal. It allows other services to look up elements and diagram items, as well as a toolbox, and diagram types. However, the responsibilities of a modeling language do not stop there. Parts of functionality will be implemented by registering handlers to a set of generic functions."
msgstr ""

#: ../modeling_language.md:20
msgid "But let's not get ahead of ourselves. What is the functionality a modeling language implementation can offer?"
msgstr ""

#: ../modeling_language.md:23
msgid "A data model (elements) and diagram items"
msgstr ""

#: ../modeling_language.md:24
msgid "Diagram types"
msgstr ""

#: ../modeling_language.md:25
msgid "A toolbox definition"
msgstr ""

#: ../modeling_language.md:26
msgid "[Connectors](#connectors), allow diagram items to connect"
msgstr ""

#: ../modeling_language.md:27
msgid "[Format/parse](#format-and-parse) model elements to and from a textual representation"
msgstr ""

#: ../modeling_language.md:28
msgid "[Copy/paste](#copy-and-paste) behavior when element copying is not trivial, for example with more than one element is involved"
msgstr ""

#: ../modeling_language.md:30
msgid "[Grouping](#grouping), allow elements to be nested in one another"
msgstr ""

#: ../modeling_language.md:31
msgid "[Dropping](#dropping), allow elements to be dragged from the tree view onto a diagram"
msgstr ""

#: ../modeling_language.md:32
msgid "[Automatic cleanup rules](#automated-model-cleanup) to keep the model consistent"
msgstr ""

#: ../modeling_language.md:34
msgid "The first three by functionalities are exposed by the `ModelingLanguage` class. The other functionalities can be extended by adding handlers to the respective generic functions."
msgstr ""

#: ../modeling_language.md:38
msgid "Modeling languages can also provide new UI components. Those components are not loaded directly when you import a modeling language package. Instead, they should be imported via the `gaphor.modules` entrypoint."
msgstr ""

#: ../modeling_language.md:42
msgid "[Editor pages](#editor-property-pages), shown in the collapsible pane on the right side"
msgstr ""

#: ../modeling_language.md:43
msgid "[Instant (diagram) editor popups](#instant-diagram-editor-popups)"
msgstr ""

#: ../modeling_language.md:44
msgid "Special diagram interactions"
msgstr ""

#: ../../gaphor/abc.py:docstring of gaphor.abc.ModelingLanguage:1
msgid "A model provider is a special service that provides an entrypoint to a model implementation, such as UML, SysML, RAAML."
msgstr ""

#: ../../gaphor/abc.py:docstring of gaphor.abc.ModelingLanguage.diagram_types:1
msgid "Iterate diagram types."
msgstr ""

#: ../../gaphor/abc.py:docstring of gaphor.abc.ModelingLanguage.element_types:1
msgid "Iterate element types."
msgstr ""

#: ../../gaphor/abc.py:docstring of gaphor.abc.ModelingLanguage.lookup_element:1
msgid "Look up a model element type by (class) name."
msgstr ""

#: ../../gaphor/abc.py:docstring of gaphor.abc.ModelingLanguage.name:1
msgid "Human-readable name of the modeling language."
msgstr ""

#: ../../gaphor/abc.py:docstring of gaphor.abc.ModelingLanguage.toolbox_definition:1
msgid "Get structure for the toolbox."
msgstr ""

#: ../modeling_language.md:52
msgid "Connectors"
msgstr ""

#: ../modeling_language.md:54
msgid "Connectors are used to connect one element to another."
msgstr ""

#: ../modeling_language.md:56
msgid "Connectors should adhere to the `ConnectorProtocol`. Normally you would inherit from `BaseConnector`."
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector:1
msgid "Connection adapter for Gaphor diagram items."
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector:3
msgid "Line item ``line`` connects with a handle to a connectable item ``element``."
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector:0
msgid "Parameters"
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector:5
msgid "connecting item"
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector:7
msgid "connectable item"
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector:10
msgid "The following methods are required to make this work:"
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector:12
msgid "``allow()``: is the connection allowed at all (during mouse movement for example)."
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector:13
msgid "``connect()``: Establish a connection between element and line. Also takes care of disconnects, if required (e.g. 1:1 relationships)"
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector:15
msgid "``disconnect()``: Break connection, called when dropping a handle on a point where it can not connect."
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector:18
msgid "By convention the adapters are registered by (element, line) -- in that order."
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector.allow:1
msgid "Determine if items can be connected."
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector.allow:3
msgid "Returns `True` if connection is allowed."
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector.connect:1
msgid "Connect to an element. Note that at this point the line may be connected to some other, or the same element. The connection at model level also still exists."
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector.connect:5
msgid "Returns `True` if a connection is established."
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector.disconnect:1
msgid "Disconnect model level connections."
msgstr ""

#: ../../gaphor/diagram/connectors.py:docstring of gaphor.diagram.connectors.BaseConnector.get_connected:1
msgid "Get item connected to a handle."
msgstr ""

#: ../modeling_language.md:64
msgid "Format and parse"
msgstr ""

#: ../modeling_language.md:66
msgid "Model elements can be formatted to a simple text representation. For example, This is used in the Model Browser. It isn't a full serialization of the model element."
msgstr ""

#: ../modeling_language.md:69
msgid "In some cases it's useful to parse a text back into an object. This is done when you edit attributes and operations on a class."
msgstr ""

#: ../modeling_language.md:72
msgid "Not every ``format()`` needs to have an equivalent ``parse()`` function."
msgstr ""

#: ../modeling_language.md:77
msgid "Returns a human readable representation of the model element. In most cases this is just the name, however, properties (attributes) and operations are formatted more extensively:"
msgstr ""

#: ../modeling_language.md:87
msgid "Parse ``text`` and populate ``element``. The element is populated with elements from the text. This may mean that new model elements are created as part of the parse process."
msgstr ""

#: ../modeling_language.md:91
msgid "Copy and paste"
msgstr ""

#: ../modeling_language.md:93
msgid "Copy and paste works out of the box for simple items: one diagram item with one model element (the `subject`). It leverages the `load()` and `save()` methods of the elements to ensure all relevant data is copied."
msgstr ""

#: ../modeling_language.md:96
msgid "Sometimes items need more than one model element to work. For example an Association: it has two association ends."
msgstr ""

#: ../modeling_language.md:98
msgid "In those specific cases you need to implement your own copy and paste functions. To create such a thing you'll need to create two functions: one for copying and one for pasting."
msgstr ""

#: ../modeling_language.md:103
msgid "Create a copy of an element (or list of elements). The returned type should be distinct, so the `paste()` function can properly dispatch. A copy function normally copies only the element and mandatory related elements. E.g. an Association needs two association ends."
msgstr ""

#: ../modeling_language.md:111
msgid "Paste previously copied data. Based on the data type created in the ``copy()`` function, try to duplicate the copied elements. Returns the newly created item or element."
msgstr ""

#: ../modeling_language.md:116
msgid "Gaphor provides some convenience functions:"
msgstr ""

#: ../modeling_language.md:120
msgid "Copy ``items``. The ``lookup`` function is used to look up owned elements (shown as child nodes in the Model Browser)."
msgstr ""

#: ../modeling_language.md:125
msgid "Paste a copy of the Presentation element to the diagram, but try to link the underlying model element. A shallow copy."
msgstr ""

#: ../modeling_language.md:131
msgid "Paste a copy of both Presentation and model element. A deep copy."
msgstr ""

#: ../modeling_language.md:134
msgid "Grouping"
msgstr ""

#: ../modeling_language.md:136
msgid "Grouping is done by dragging one item on top of another, in a diagram or in the tree view."
msgstr ""

#: ../modeling_language.md:140
msgid "Group an element in a parent element. The grouping can be based on ownership, but other types of grouping are also possible."
msgstr ""

#: ../modeling_language.md:146
msgid "Remove the grouping from an element. The function needs to check if the provided `parent` node is the right one."
msgstr ""

#: ../modeling_language.md:152
msgid "This function tries to determine if grouping is possible, without actually performing a group operation. This is not 100% accurate."
msgstr ""

#: ../modeling_language.md:157
msgid "Dropping"
msgstr ""

#: ../modeling_language.md:159
msgid "Dropping is performed by dragging an element from the tree view and drop it on a diagram. This is an easy way to extend a diagram with already existing model elements."
msgstr ""

#: ../modeling_language.md:164
msgid "The drop function creates a new presentation for an element on the diagram. For relationships, a drop only works if both connected elements are present in the same diagram."
msgstr ""

#: ../modeling_language.md:168
msgid "The big difference with dragging an element from the toolbox, is that dragging from the toolbox will actually place a new ``Presentation`` element on the diagram. ``drop`` works the other way around: it starts with a model element and creates an accompanying ``Presentation``."
msgstr ""

#: ../modeling_language.md:173
msgid "Automated model cleanup"
msgstr ""

#: ../modeling_language.md:175
msgid "Gaphor wants to keep the model in sync with the diagrams."
msgstr ""

#: ../modeling_language.md:177
msgid "A little dispatch function is used to determine if a model element can be removed."
msgstr ""

#: ../modeling_language.md:181
msgid "Determine if a model element can safely be removed."
msgstr ""

#: ../modeling_language.md:184
msgid "Editor property pages"
msgstr ""

#: ../modeling_language.md:186
msgid "The editor page is constructed from snippets. For example: almost each element has a name, so there is a UI snippet that allows you to edit a name."
msgstr ""

#: ../modeling_language.md:189
msgid "Each property page (snippet) should inherit from `PropertyPageBase`."
msgstr ""

#: ../../gaphor/diagram/propertypages.py:docstring of gaphor.diagram.propertypages.PropertyPageBase:1
msgid "A property page which can display itself in a notebook."
msgstr ""

#: ../../gaphor/diagram/propertypages.py:docstring of gaphor.diagram.propertypages.PropertyPageBase.construct:1
msgid "Create the page (Gtk.Widget) that belongs to the Property page."
msgstr ""

#: ../../gaphor/diagram/propertypages.py:docstring of gaphor.diagram.propertypages.PropertyPageBase.construct:3
msgid "Returns the page's toplevel widget (Gtk.Widget)."
msgstr ""

#: ../modeling_language.md:196
msgid "Instant (diagram) editor popups"
msgstr ""

#: ../modeling_language.md:198
msgid "When you double-click on an item in a diagram, a popup can show up, so you can easily change the name."
msgstr ""

#: ../modeling_language.md:200
msgid "By default, this works for any named element. You can register your own inline editor function if you need to."
msgstr ""

#: ../modeling_language.md:204
msgid "Show a small editor popup in the diagram. Makes for easy editing without resorting to the Element editor."
msgstr ""

#: ../modeling_language.md:207
msgid "In case of a mouse press event, the mouse position (relative to the element) are also provided."
msgstr ""

#: ../models/c4model.md:1
msgid "The C4 Model"
msgstr ""

#: ../models/c4model.md:3
msgid "The [C4 model](https://c4model.com/) is a simple visual language to describe the static structure of a software system."
msgstr ""

#: ../models/c4model.md:5
msgid "It’s based on the [UML](uml.md) language."
msgstr ""

#: ../models/core.md:1
msgid "Modeling Language Core"
msgstr ""

#: ../models/core.md:3
msgid "The Core modeling language is the the basis for any other language."
msgstr ""

#: ../models/core.md:5
msgid "The `Element` class acts as the root for all gaphor domain classes. `Diagram` and `Presentation` form the basis for everything you see in a diagram."
msgstr ""

#: ../models/core.md:9
msgid "All data models in Gaphor are generated from actual Gaphor model files. This allows us to provide you nice diagrams of Gaphor’s internal model."
msgstr ""

#: ../models/core.md:16
msgid "The `Element` base class provides event notification and integrates with the model repository (internally known as `ElementFactory`). Bi-directional relationships are also possible, as well as derived relations."
msgstr ""

#: ../models/core.md:21
msgid "Change Sets"
msgstr ""

#: ../models/core.md:23
msgid "The core model has support for change sets, sets of pending changes. Normally you end up with a change set when you [resolve a merge conflict](../merge_conflicts) in your model."
msgstr ""

#: ../models/core.md:27
msgid "This diagram is provided for completion sake."
msgstr ""

#: ../models/core_element.rst:2
msgid "The ``Element`` Class"
msgstr ""

#: ../models/core_element.rst:4
msgid "The class ``Element`` is the core of Gaphor's data model."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element:1
msgid "Base class for all model data classes."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.Element.id:1
msgid "An id (read-only), unique within the model."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.Element.model:1
msgid "The owning model, raises :class:`TypeError` when model is not set."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.unlink:1
msgid "Unlink the element."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.unlink:3
msgid "All the elements references are destroyed. For composite associations, the associated elements are also unlinked."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.unlink:6
msgid "The unlink lock is acquired while unlinking this element's properties to avoid recursion problems."
msgstr ""

#: ../models/core_element.rst:16
msgid "Event handling"
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.handle:1
msgid "Propagate incoming events."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.handle:3
msgid "This only works if the element has been created by an :class:`~gaphor.core.modeling.ElementFactory`"
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.watcher:1
msgid "Create a new watcher for this element."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.watcher:3
msgid "Watchers provide a convenient way to get signalled when a property relative to ``self`` has been changed."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.watcher:6
msgid "To use a watcher, the element should be created by a properly wired up :class:`~gaphor.core.modeling.ElementFactory``."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.watcher:8
msgid "This example is purely illustrative:"
msgstr ""

#: ../models/core_element.rst:24
msgid "Loading and saving"
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.load:1
msgid "Loads value in name."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.load:3
msgid "Make sure that after all elements are loaded, postload() should be called."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.postload:1
msgid "Fix up the odds and ends."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.postload:3
msgid "This is run after all elements are loaded."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.save:1
msgid "Save the state by calling ``save_func(name, value)``."
msgstr ""

#: ../models/core_element.rst:34
msgid "OCL-style methods"
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.isKindOf:1
msgid "Returns :const:`True` if the object is an instance of ``class_``."
msgstr ""

#: ../../gaphor/core/modeling/element.py:docstring of gaphor.core.modeling.element.Element.isTypeOf:1
msgid "Returns :const:`True` if the object is of the same type as the ``other``."
msgstr ""

#: ../models/core_element.rst:42
msgid "Protocols"
msgstr ""

#: ../models/core_element.rst:48
msgid "Create a new element in the repository."
msgstr ""

#: ../models/core_element.rst:52
msgid "Select elements from the repository that fulfill ``expression``."
msgstr ""

#: ../models/core_element.rst:57
msgid "Select all elements from the repository of type ``type_``."
msgstr ""

#: ../models/core_element.rst:62
msgid "Select all elements from the repository."
msgstr ""

#: ../models/core_element.rst:66
msgid "Get an element by id from the repository."
msgstr ""

#: ../models/core_element.rst:68
msgid "Returns :const:`None` if no such element exists."
msgstr ""

#: ../models/core_element.rst:74
msgid "Add a watch for a specific path. The path is relative to the element that created the watcher object."
msgstr ""

#: ../models/core_element.rst:77
msgid "Returns ``self``, so watch operations can be chained."
msgstr ""

#: ../models/core_element.rst:81
msgid "Should be called before the watcher is disposed, to release all watched paths."
msgstr ""

#: ../models/raaml.md:10
#: ../models/sysml.md:9
#: ../models/uml.md:15
msgid "Packages"
msgstr ""

#: ../models/raaml.md:1
msgid "Risk Analysis and Assessment Modeling Language"
msgstr ""

#: ../models/raaml.md:3
msgid "Gaphor implements parts of the [RAAML 1.0 specification](https://www.omg.org/spec/RAAML)."
msgstr ""

#: ../models/raaml/Core.rst:2
msgid "Core"
msgstr ""

#: ../models/raaml/Core.rst:5
msgid "Core Library/Any Situation"
msgstr ""

#: ../models/raaml/Core.rst:11
msgid "Core Profile/Controlling Measure"
msgstr ""

#: ../models/raaml/Core.rst:17
msgid "Core Profile/Relevant To"
msgstr ""

#: ../models/raaml/Core.rst:23
msgid "Core Profile/Situation"
msgstr ""

#: ../models/raaml/Core.rst:29
msgid "Core Profile/Violates"
msgstr ""

#: ../models/raaml/General.rst:2
msgid "General"
msgstr ""

#: ../models/raaml/General.rst:5
msgid "Basic Event"
msgstr ""

#: ../models/raaml/General.rst:11
msgid "General Concepts Library/Abstract Cause"
msgstr ""

#: ../models/raaml/General.rst:17
msgid "General Concepts Library/Abstract Effect"
msgstr ""

#: ../models/raaml/General.rst:23
msgid "General Concepts Library/Abstract Event"
msgstr ""

#: ../models/raaml/General.rst:29
msgid "General Concepts Library/Abstract Failure Mode"
msgstr ""

#: ../models/raaml/General.rst:35
msgid "General Concepts Library/Abstract Risk"
msgstr ""

#: ../models/raaml/General.rst:41
msgid "General Concepts Library/Activation"
msgstr ""

#: ../models/raaml/General.rst:47
msgid "General Concepts Library/Cause"
msgstr ""

#: ../models/raaml/General.rst:53
msgid "General Concepts Library/Dysfunctional Event"
msgstr ""

#: ../models/raaml/General.rst:59
msgid "General Concepts Library/Effect"
msgstr ""

#: ../models/raaml/General.rst:65
msgid "General Concepts Library/Error Propagation"
msgstr ""

#: ../models/raaml/General.rst:71
msgid "General Concepts Library/Error Realization"
msgstr ""

#: ../models/raaml/General.rst:77
msgid "General Concepts Library/Harm Potential"
msgstr ""

#: ../models/raaml/General.rst:83
msgid "General Concepts Library/Hazard"
msgstr ""

#: ../models/raaml/General.rst:89
msgid "General Concepts Library/Scenario"
msgstr ""

#: ../models/raaml/General.rst:95
msgid "General Concepts Library/Undesired State"
msgstr ""

#: ../models/raaml/General.rst:101
msgid "General Concepts Profile/Detection"
msgstr ""

#: ../models/raaml/General.rst:107
msgid "General Concepts Profile/Failure State"
msgstr ""

#: ../models/raaml/General.rst:113
msgid "General Concepts Profile/Mitigation"
msgstr ""

#: ../models/raaml/General.rst:119
msgid "General Concepts Profile/Prevention"
msgstr ""

#: ../models/raaml/General.rst:125
msgid "General Concepts Profile/Recommendation"
msgstr ""

#: ../models/raaml/General.rst:131
msgid "General Concepts Profile/Undeveloped"
msgstr ""

#: ../models/raaml/Methods.rst:2
msgid "Methods"
msgstr ""

#: ../models/raaml/Methods.rst:5
msgid "FTA/FTA Library/Events/Basic Event"
msgstr ""

#: ../models/raaml/Methods.rst:11
msgid "FTA/FTA Library/Events/Conditional Event"
msgstr ""

#: ../models/raaml/Methods.rst:17
msgid "FTA/FTA Library/Events/Dormant Event"
msgstr ""

#: ../models/raaml/Methods.rst:23
msgid "FTA/FTA Library/Events/Events"
msgstr ""

#: ../models/raaml/Methods.rst:29
msgid "FTA/FTA Library/Events/Event"
msgstr ""

#: ../models/raaml/Methods.rst:35
msgid "FTA/FTA Library/Events/House Event"
msgstr ""

#: ../models/raaml/Methods.rst:41
msgid "FTA/FTA Library/Events/Intermediate Event"
msgstr ""

#: ../models/raaml/Methods.rst:47
msgid "FTA/FTA Library/Events/Top Event"
msgstr ""

#: ../models/raaml/Methods.rst:53
msgid "FTA/FTA Library/Events/Undeveloped Event"
msgstr ""

#: ../models/raaml/Methods.rst:59
msgid "FTA/FTA Library/Events/Zero Event"
msgstr ""

#: ../models/raaml/Methods.rst:65
msgid "FTA/FTA Library/FTA Element"
msgstr ""

#: ../models/raaml/Methods.rst:71
msgid "FTA/FTA Library/FTA Library"
msgstr ""

#: ../models/raaml/Methods.rst:77
msgid "FTA/FTA Library/FTA Tree"
msgstr ""

#: ../models/raaml/Methods.rst:83
msgid "FTA/FTA Library/Gates/AND"
msgstr ""

#: ../models/raaml/Methods.rst:89
msgid "FTA/FTA Library/Gates/Gate"
msgstr ""

#: ../models/raaml/Methods.rst:95
msgid "FTA/FTA Library/Gates/INHIBIT"
msgstr ""

#: ../models/raaml/Methods.rst:101
msgid "FTA/FTA Library/Gates/MAJORITY_VOTE"
msgstr ""

#: ../models/raaml/Methods.rst:107
msgid "FTA/FTA Library/Gates/NOT"
msgstr ""

#: ../models/raaml/Methods.rst:113
msgid "FTA/FTA Library/Gates/OR"
msgstr ""

#: ../models/raaml/Methods.rst:119
msgid "FTA/FTA Library/Gates/SEQ"
msgstr ""

#: ../models/raaml/Methods.rst:125
msgid "FTA/FTA Library/Gates/XOR"
msgstr ""

#: ../models/raaml/Methods.rst:131
msgid "FTA/FTA Profile/AND"
msgstr ""

#: ../models/raaml/Methods.rst:137
msgid "FTA/FTA Profile/Conditional Event"
msgstr ""

#: ../models/raaml/Methods.rst:143
msgid "FTA/FTA Profile/Dormant Event"
msgstr ""

#: ../models/raaml/Methods.rst:149
msgid "FTA/FTA Profile/Event"
msgstr ""

#: ../models/raaml/Methods.rst:155
msgid "FTA/FTA Profile/Gate"
msgstr ""

#: ../models/raaml/Methods.rst:161
msgid "FTA/FTA Profile/House Event"
msgstr ""

#: ../models/raaml/Methods.rst:167
msgid "FTA/FTA Profile/INHIBIT"
msgstr ""

#: ../models/raaml/Methods.rst:173
msgid "FTA/FTA Profile/Intermediate Event"
msgstr ""

#: ../models/raaml/Methods.rst:179
msgid "FTA/FTA Profile/MAJORITY_VOTE"
msgstr ""

#: ../models/raaml/Methods.rst:185
msgid "FTA/FTA Profile/NOT"
msgstr ""

#: ../models/raaml/Methods.rst:191
msgid "FTA/FTA Profile/OR"
msgstr ""

#: ../models/raaml/Methods.rst:197
msgid "FTA/FTA Profile/SEQ"
msgstr ""

#: ../models/raaml/Methods.rst:203
msgid "FTA/FTA Profile/Top Event"
msgstr ""

#: ../models/raaml/Methods.rst:209
msgid "FTA/FTA Profile/Transfer In"
msgstr ""

#: ../models/raaml/Methods.rst:215
msgid "FTA/FTA Profile/Transfer Out"
msgstr ""

#: ../models/raaml/Methods.rst:221
msgid "FTA/FTA Profile/Tree"
msgstr ""

#: ../models/raaml/Methods.rst:227
msgid "FTA/FTA Profile/XOR"
msgstr ""

#: ../models/raaml/Methods.rst:233
msgid "FTA/FTA Profile/Zero Event"
msgstr ""

#: ../models/raaml/Methods.rst:239
msgid "FTA/FTA"
msgstr ""

#: ../models/sysml.md:1
msgid "Systems Modeling Language"
msgstr ""

#: ../models/sysml.md:3
msgid "Gaphor implements part of the [SysML 1.6](https://www.omg.org/spec/SysML) specification."
msgstr ""

#: ../models/sysml/Activities.rst:2
msgid "Activities"
msgstr ""

#: ../models/sysml/Allocations.rst:2
msgid "Allocations"
msgstr ""

#: ../models/sysml/Allocations.rst:5
msgid "AllocatedActivityPartition"
msgstr ""

#: ../models/sysml/Allocations.rst:11
msgid "Allocation"
msgstr ""

#: ../models/sysml/Blocks.rst:2
#: ../style_sheets.md:326
#: ../style_sheets.md:327
msgid "Blocks"
msgstr ""

#: ../models/sysml/Blocks.rst:8
msgid "Adjunt and Classifier Behavior Properties"
msgstr ""

#: ../models/sysml/Blocks.rst:14
msgid "Bound References"
msgstr ""

#: ../models/sysml/Blocks.rst:20
msgid "Connector Ends"
msgstr ""

#: ../models/sysml/Blocks.rst:26
msgid "Properties"
msgstr ""

#: ../models/sysml/Blocks.rst:32
msgid "Property Paths"
msgstr ""

#: ../models/sysml/Blocks.rst:38
msgid "Property-Specific Types"
msgstr ""

#: ../models/sysml/Blocks.rst:44
msgid "Property Strings"
msgstr ""

#: ../models/sysml/Blocks.rst:50
msgid "Value Types"
msgstr ""

#: ../models/sysml/ConstraintBlocks.rst:2
msgid "ConstraintBlocks"
msgstr ""

#: ../models/sysml/Libraries.rst:2
msgid "Libraries"
msgstr ""

#: ../models/sysml/ModelElements.rst:2
msgid "ModelElements"
msgstr ""

#: ../models/sysml/PortsAndFlows.rst:2
msgid "PortsAndFlows"
msgstr ""

#: ../models/sysml/PortsAndFlows.rst:5
msgid "Actions on Nested Ports"
msgstr ""

#: ../models/sysml/PortsAndFlows.rst:11
msgid "Port Stereotypes"
msgstr ""

#: ../models/sysml/PortsAndFlows.rst:17
msgid "Property Value Change Events"
msgstr ""

#: ../models/sysml/PortsAndFlows.rst:23
msgid "Provided and Required Features"
msgstr ""

#: ../models/sysml/PortsAndFlows.rst:29
msgid "Item Flow"
msgstr ""

#: ../models/sysml/Requirements.rst:2
#: ../style_sheets.md:328
msgid "Requirements"
msgstr ""

#: ../models/uml.md:1
msgid "Unified Modeling Language"
msgstr ""

#: ../models/uml.md:3
msgid "The UML model is the most extensive model in Gaphor. It is used as a base language for [SysML](sysml.md), [RAAML](raaml.md), and [C4](c4model.md)."
msgstr ""

#: ../models/uml.md:7
msgid "Gaphor follows the [official UML 2.5.1 data model](https://www.omg.org/spec/UML/). Where changes have been made a comment has been added to the model. In particular where _m:n_ relationships subset _1:n_ relationships."
msgstr ""

#: ../models/uml/01._Common_Structure.rst:2
msgid "01. Common Structure"
msgstr ""

#: ../models/uml/01._Common_Structure.rst:5
msgid "1. Root"
msgstr ""

#: ../models/uml/01._Common_Structure.rst:11
msgid "2. Templates"
msgstr ""

#: ../models/uml/01._Common_Structure.rst:13
msgid "Not implemented."
msgstr ""

#: ../models/uml/01._Common_Structure.rst:16
msgid "3. Namespaces"
msgstr ""

#: ../models/uml/01._Common_Structure.rst:22
msgid "4. Types and Multiplicity"
msgstr ""

#: ../models/uml/01._Common_Structure.rst:28
msgid "5. Constraints"
msgstr ""

#: ../models/uml/01._Common_Structure.rst:34
msgid "6. Dependencies"
msgstr ""

#: ../models/uml/02._Values.rst:2
msgid "02. Values"
msgstr ""

#: ../models/uml/02._Values.rst:5
msgid "1. Literals"
msgstr ""

#: ../models/uml/02._Values.rst:11
msgid "2. Expressions"
msgstr ""

#: ../models/uml/03._Classification.rst:2
msgid "03. Classification"
msgstr ""

#: ../models/uml/03._Classification.rst:5
msgid "1. Classifiers"
msgstr ""

#: ../models/uml/03._Classification.rst:11
msgid "3. Features"
msgstr ""

#: ../models/uml/03._Classification.rst:17
msgid "4. Properties"
msgstr ""

#: ../models/uml/03._Classification.rst:23
msgid "5. Operations"
msgstr ""

#: ../models/uml/03._Classification.rst:29
msgid "7. Instances"
msgstr ""

#: ../models/uml/04._Simple_Classifiers.rst:2
msgid "04. Simple Classifiers"
msgstr ""

#: ../models/uml/04._Simple_Classifiers.rst:5
msgid "1. Data Types"
msgstr ""

#: ../models/uml/04._Simple_Classifiers.rst:11
msgid "3. Interfaces"
msgstr ""

#: ../models/uml/05._Structured_Classifiers.rst:2
msgid "05. Structured Classifiers"
msgstr ""

#: ../models/uml/05._Structured_Classifiers.rst:5
msgid "1. Structured Classifiers"
msgstr ""

#: ../models/uml/05._Structured_Classifiers.rst:11
msgid "2. Encapsulated Classifiers"
msgstr ""

#: ../models/uml/05._Structured_Classifiers.rst:17
msgid "3. Classes"
msgstr ""

#: ../models/uml/05._Structured_Classifiers.rst:23
msgid "4. Associations"
msgstr ""

#: ../models/uml/05._Structured_Classifiers.rst:29
msgid "5. Components"
msgstr ""

#: ../models/uml/05._Structured_Classifiers.rst:35
msgid "6. Collaborations"
msgstr ""

#: ../models/uml/06._Packaging.rst:2
msgid "06. Packaging"
msgstr ""

#: ../models/uml/06._Packaging.rst:5
msgid "1. Packages"
msgstr ""

#: ../models/uml/06._Packaging.rst:11
msgid "2. Profiles"
msgstr ""

#: ../models/uml/07._Common_Behaviors.rst:2
msgid "07. Common Behaviors"
msgstr ""

#: ../models/uml/07._Common_Behaviors.rst:5
msgid "1. Behaviors"
msgstr ""

#: ../models/uml/07._Common_Behaviors.rst:11
msgid "2. Events"
msgstr ""

#: ../models/uml/08._State_Machines.rst:2
msgid "08. State Machines"
msgstr ""

#: ../models/uml/08._State_Machines.rst:5
msgid "1. Behavior State Machines"
msgstr ""

#: ../models/uml/09._Activities.rst:2
msgid "09. Activities"
msgstr ""

#: ../models/uml/09._Activities.rst:5
msgid "1. Activities"
msgstr ""

#: ../models/uml/09._Activities.rst:11
msgid "2. Control Nodes"
msgstr ""

#: ../models/uml/09._Activities.rst:17
msgid "3. Object Nodes"
msgstr ""

#: ../models/uml/09._Activities.rst:23
msgid "4. Executable Nodes"
msgstr ""

#: ../models/uml/09._Activities.rst:29
msgid "5. Activity Groups"
msgstr ""

#: ../models/uml/10._Actions.rst:2
msgid "10. Actions"
msgstr ""

#: ../models/uml/10._Actions.rst:5
msgid "1. Actions"
msgstr ""

#: ../models/uml/10._Actions.rst:11
msgid "2. Invocation Actions"
msgstr ""

#: ../models/uml/10._Actions.rst:17
msgid "7. Structural Feature Actions"
msgstr ""

#: ../models/uml/10._Actions.rst:23
msgid "9. Accept Event Actions"
msgstr ""

#: ../models/uml/11._Interactions.rst:2
msgid "11. Interactions"
msgstr ""

#: ../models/uml/11._Interactions.rst:5
msgid "1. Interactions"
msgstr ""

#: ../models/uml/11._Interactions.rst:11
msgid "2. Lifelines"
msgstr ""

#: ../models/uml/11._Interactions.rst:17
msgid "3. Messages"
msgstr ""

#: ../models/uml/11._Interactions.rst:23
msgid "4. Occurrences"
msgstr ""

#: ../models/uml/12._Use_Cases.rst:2
msgid "12. Use Cases"
msgstr ""

#: ../models/uml/12._Use_Cases.rst:5
msgid "UseCases"
msgstr ""

#: ../models/uml/13._Deployments.rst:2
msgid "13. Deployments"
msgstr ""

#: ../models/uml/13._Deployments.rst:5
msgid "1. Deployments"
msgstr ""

#: ../models/uml/13._Deployments.rst:11
msgid "2. Artifacts"
msgstr ""

#: ../models/uml/13._Deployments.rst:17
msgid "3. Nodes"
msgstr ""

#: ../models/uml/14._Information_Flows.rst:2
msgid "14. Information Flows"
msgstr ""

#: ../models/uml/A._Gaphor_Specific_Constructs.rst:2
msgid "A. Gaphor Specific Constructs"
msgstr ""

#: ../models/uml/A._Gaphor_Specific_Constructs.rst:5
msgid "1. Stereotype Applications"
msgstr ""

#: ../models/uml/B._Gaphor_Profile.rst:2
msgid "B. Gaphor Profile"
msgstr ""

#: ../models/uml/B._Gaphor_Profile.rst:4
msgid "In order to provide extra information to the diagram elements (mainly association ends), the Gaphor model has been extended with stereotypes."
msgstr ""

#: ../plugins.md:1
msgid "Plugins"
msgstr ""

#: ../plugins.md:4
msgid "Plugins is an experimental feature! The API may change."
msgstr ""

#: ../plugins.md:6
msgid "We welcome you to try and provide your feedback."
msgstr ""

#: ../plugins.md:9
msgid "Plugins allow you to extend the functionality of Gaphor beyond the features provided in the standard distributions. In particular, plugins can be helpful if you install the binary distributions available on the [download page](https://gaphor.org/download/)."
msgstr ""

#: ../plugins.md:12
msgid "Gaphor can be extended via entry points in several ways:"
msgstr ""

#: ../plugins.md:14
msgid "Application (global) services (`gaphor.appservices`)"
msgstr ""

#: ../plugins.md:15
msgid "Session specific services (`gaphor.services`)"
msgstr ""

#: ../plugins.md:16
msgid "[Modeling languages](modeling_language) (`gaphor.modelinglanguages`)"
msgstr ""

#: ../plugins.md:17
msgid "(Sub)command line parsers (`gaphor.argparsers`)"
msgstr ""

#: ../plugins.md:18
msgid "Indirectly loaded modules (`gaphor.modules`), mainly for UI components"
msgstr ""

#: ../plugins.md:21
msgid "The default location for plugins is `$HOME/.local/gaphor/plugins-2` (`$USER/.local/gaphor/plugins-2` on Windows). This location can be changed by setting the environment variable `GAPHOR_PLUGIN_PATH` and point to a directory."
msgstr ""

#: ../plugins.md:25
msgid "Install a plugin"
msgstr ""

#: ../plugins.md:27
msgid "At this moment Gaphor does not have functionality bundled to install and maintain plugins. To install a plugin, use `pip` from a Python installation on your computer. On macOS and Linux, that should be easy, on Windows you may need to install Python separately from [python.org](https://python.org) or the Windows Store."
msgstr ""

#: ../plugins.md:32
msgid "Since plugins are installed with your system Python version, it's important that plugins are pure python - e.i. do not contain compiled C code."
msgstr ""

#: ../plugins.md:36
msgid "For example: to install the [Hello World plugin](https://github.com/gaphor/gaphor_plugin_helloworld) on Linux and macOS, enter:"
msgstr ""

#: ../plugins.md:42
msgid "Then start Gaphor as you normally would. A new Hello World entry has been added to the tools menu (![open menu](images/open-menu-symbolic.svg) → Tools → Hello World)."
msgstr ""

#: ../plugins.md:42
#: ../style_sheets.md:340
msgid "open menu"
msgstr ""

#: ../plugins.md:45
msgid "Create your own plugin"
msgstr ""

#: ../plugins.md:47
msgid "If you want to write a plugin yourself, you can familiarize yourself with Gaphor's [design principles](design_principles), [service oriented architecture](service_oriented) (includes a plugin example), and [event driven framework](framework). Next you can have a look at the [Hello World plugin](https://github.com/gaphor/gaphor_plugin_helloworld) available on GitHub."
msgstr ""

#: ../scripting.md:5
msgid "Jupyter and Scripting"
msgstr ""

#: ../scripting.md:7
msgid "One way to work with models is through the GUI. However, you may also be interested in getting more out of your models by interacting with them through Python scripts and [Jupyter notebooks](https://jupyter.org/)."
msgstr ""

#: ../scripting.md:11
msgid "You can use scripts to:"
msgstr ""

#: ../scripting.md:13
msgid "Explore the model, check for (in)valid conditions."
msgstr ""

#: ../scripting.md:14
msgid "Generate code, as is done for Gaphor’s data model."
msgstr ""

#: ../scripting.md:15
msgid "Update a model from another source, like a CSV file."
msgstr ""

#: ../scripting.md:17
msgid "Since Gaphor is written in Python, it also functions as a library."
msgstr ""

#: ../scripting.md:19
msgid "Getting started"
msgstr ""

#: ../scripting.md:21
msgid "To get started, you’ll need a Python console. You can use the interactive console in Gaphor, use a Jupyter notebook, although that will require setting up a Python development environment."
msgstr ""

#: ../scripting.md:25
msgid "Query a model"
msgstr ""

#: ../scripting.md:27
msgid "The first step is to load a model. For this you’ll need an `ElementFactory`. The `ElementFactory` is responsible to creating and maintaining the model. It acts as a repository for the model while you’re working on it."
msgstr ""

#: ../scripting.md:37
msgid "The module `gaphor.storage` contains everything to load and save models. Gaphor supports multiple [modeling languages](modeling_language). The `ModelingLanguageService` consolidates those languages and makes it easy for the loader logic to find the appropriate classes."
msgstr ""

#: ../scripting.md:43
msgid "In versions before 2.13, an `EventManager` is required. In later versions, the `ModelingLanguageService` can be initialized without event manager."
msgstr ""

#: ../scripting.md:65
msgid "At this point the model is loaded in the `element_factory` and can be queried."
msgstr ""

#: ../scripting.md:68
msgid "A modeling language consists of the model elements, and diagram items. Graphical components are loaded separately. For the most basic manupilations, GTK (the GUI toolkit we use) is not required, but you may run into situations where Gaphor tries to load the GTK library."
msgstr ""

#: ../scripting.md:73
msgid "One trick to avoid this (when generating Sphinx docs at least) is to use autodoc’s mock function to mock out the GTK and GDK libraries. However, Pango needs to be installed for text rendering."
msgstr ""

#: ../scripting.md:78
msgid "A simple query only tells you what elements are in the model. The method `ElementFactory.select()` returns an iterator. Sometimes it’s easier to obtain a list directly. For those cases you can use `ElementFatory.lselect()`. Here we select the last five elements:"
msgstr ""

#: ../scripting.md:88
msgid "Elements can also be queried by type and with a predicate function:"
msgstr ""

#: ../scripting.md:103
msgid "Now, let’s say we want to do some simple (pseudo-)code generation. We can iterate class attributes and write some output."
msgstr ""

#: ../scripting.md:124
msgid "To find out which relations can be queried, have a look at the [modeling language](modeling_language) documentation. Gaphor’s data models have been built using the [UML](models/uml) language."
msgstr ""

#: ../scripting.md:128
msgid "You can find out more about a model property by printing it."
msgstr ""

#: ../scripting.md:134
msgid "In this case it tells us that the type of `UML.Class.ownedAttribute` is `UML.Property`. `UML.Property.class_` is set to the owner class when `ownedAttribute` is set. It is a bidirectional relation."
msgstr ""

#: ../scripting.md:138
msgid "Draw a diagram"
msgstr ""

#: ../scripting.md:140
msgid "Another nice feature is drawing the diagrams. At this moment this requires a function. This behavior is similar to the [`diagram` directive](sphinx)."
msgstr ""

#: ../scripting.md:151
msgid "Create a diagram"
msgstr ""

#: ../scripting.md:153
msgid "(Requires Gaphor 2.13)"
msgstr ""

#: ../scripting.md:155
msgid "Now let's make something a little more fancy. We still have the core model loaded in the element factory. From this model we can create a custom diagram. With a little help of the auto-layout service, we can make it a readable diagram."
msgstr ""

#: ../scripting.md:160
msgid "To create the diagram, we [`drop` elements](modeling_language:dropping) on the diagram. Items on a diagram represent an element in the model. We'll also drop all associations on the model. Only if both ends can connect, the association will be added."
msgstr ""

#: ../scripting.md:186
msgid "The diagram is not perfect, but you get the picture."
msgstr ""

#: ../scripting.md:188
msgid "Update a model"
msgstr ""

#: ../scripting.md:190
msgid "Updating a model always starts with the element factory: that’s where elements are created."
msgstr ""

#: ../scripting.md:193
msgid "To create a UML Class instance, you can:"
msgstr ""

#: ../scripting.md:200
msgid "To give it an attribute, create an attribute type (`UML.Property`) and then assign the attribute values."
msgstr ""

#: ../scripting.md:210
msgid "Adding it to the diagram looks like this:"
msgstr ""

#: ../scripting.md:218
msgid "If you save the model, your changes are persisted:"
msgstr ""

#: ../scripting.md:225
msgid "What else"
msgstr ""

#: ../scripting.md:227
msgid "What else is there to know…"
msgstr ""

#: ../scripting.md:229
msgid "Gaphor supports derived associations. For example, `element.owner` points to the owner element. For an attribute that would be its containing class."
msgstr ""

#: ../scripting.md:230
msgid "All data models are described in the `Modeling Languages` section of the docs."
msgstr ""

#: ../scripting.md:231
msgid "If you use Gaphor’s Console, you’ll need to apply all changes in a transaction, or they will result in an error."
msgstr ""

#: ../scripting.md:232
msgid "If you want a comprehensive example of a code generator, have a look at [Gaphor’s `coder` module](https://github.com/gaphor/gaphor/blob/main/gaphor/codegen/coder.py). This module is used to generate the code for the data models used by Gaphor."
msgstr ""

#: ../scripting.md:233
msgid "This page is rendered with [MyST-NB](https://myst-nb.readthedocs.io/). It’s actually a Jupyter Notebook!"
msgstr ""

#: ../scripting.md:235
msgid "Examples"
msgstr ""

#: ../scripting.md:237
msgid "Expanding on the information above the following snippetts show how to create requirements and interfaces."
msgstr ""

#: ../scripting.md:239
msgid "Requirements from text fields"
msgstr ""

#: ../scripting.md:261
msgid "Interfaces from dictionaries"
msgstr ""

#: ../scripting.md:295
msgid "Here is another example:"
msgstr ""

#: ../service_oriented.md:1
msgid "Service Oriented Architecture"
msgstr ""

#: ../service_oriented.md:3
msgid "Gaphor has a service oriented architecture. What does this mean? Well, Gaphor is built as a set of small islands (services). Each island provides a specific piece of functionality. For example, we use separate services to load/save models, provide the menu structure, and to handle the undo system."
msgstr ""

#: ../service_oriented.md:8
msgid "We define services as entry points in the `pyproject.toml`. With entry points, applications can register functionality for specific purposes. We also group entry points in to *entry point groups*. For example, we use the console_scripts entry point group to start an application from the command line."
msgstr ""

#: ../service_oriented.md:15
msgid "Services"
msgstr ""

#: ../service_oriented.md:17
msgid "Gaphor is modeled around the concept of services. Each service can be registered with the application and then it can be used by other services or other objects living within the application."
msgstr ""

#: ../service_oriented.md:21
msgid "Each service should implement the Service interface. This interface defines one method:"
msgstr ""

#: ../service_oriented.md:26
msgid "Which is called when a service needs to be cleaned up."
msgstr ""

#: ../service_oriented.md:28
msgid "We allow each service to define its own methods, as long as the service is implemented too."
msgstr ""

#: ../service_oriented.md:31
msgid "Services should be defined as entry points in the `pyproject.toml` file."
msgstr ""

#: ../service_oriented.md:33
msgid "Typically, a service does some work in the background. Services can also expose actions that can be invoked by users. For example, the _Ctrl-z_ key combo (undo) is implemented by the UndoManager service."
msgstr ""

#: ../service_oriented.md:37
msgid "A service can also depend on another services. Service initialization resolves these dependencies. To define a service dependency, just add it to the constructor by its name defined in the entry point:"
msgstr ""

#: ../service_oriented.md:54
msgid "Services that expose actions should also inherit from the ActionProvider interface. This interface does not require any additional methods to be implemented. Action methods should be annotated with an `@action` annotation."
msgstr ""

#: ../service_oriented.md:58
msgid "Example: ElementFactory"
msgstr ""

#: ../service_oriented.md:60
msgid "A nice example of a service in use is the ElementFactory. It is one of the core services."
msgstr ""

#: ../service_oriented.md:62
msgid "The UndoManager depends on the events emitted by the ElementFactory. When an important events occurs, like an element is created or destroyed, that event is emitted. We then use an event handler for ElementFactory that stores the add/remove signals in the undo system. Another example of events that are emitted are with `UML.Element`s. Those classes, or more specifically, the properties, send notifications every time their state changes."
msgstr ""

#: ../service_oriented.md:69
msgid "Entry Points"
msgstr ""

#: ../service_oriented.md:71
msgid "Gaphor uses a main entry point group called `gaphor.services`."
msgstr ""

#: ../service_oriented.md:73
msgid "Services are used to perform the core functionality of the application while breaking the functions in to individual components. For example, the element factory and undo manager are both services."
msgstr ""

#: ../service_oriented.md:77
msgid "Plugins can also be created to extend Gaphor beyond the core functionality as an add-on. For example, a plugin could be created to connect model data to other applications. Plugins are also defined as services. For example a new XMI export plugin would be defined as follows in the `pyproject.toml`:"
msgstr ""

#: ../service_oriented.md:87
msgid "Interfaces"
msgstr ""

#: ../service_oriented.md:89
msgid "Each service (and plugin) should implement the `gaphor.abc.Service` interface:"
msgstr ""

#: ../../gaphor/abc.py:docstring of gaphor.abc.Service:1
msgid "Base interface for all services in Gaphor."
msgstr ""

#: ../service_oriented.md:96
msgid "Another more specialized service that also inherits from `gaphor.abc.Service`, is the UI Component service. Services that use this interface are used to define windows and user interface functionality. A UI component should implement the `gaphor.ui.abc.UIComponent` interface:"
msgstr ""

#: ../../gaphor/ui/abc.py:docstring of gaphor.ui.abc.UIComponent:1
msgid "A user interface component."
msgstr ""

#: ../../gaphor/ui/abc.py:docstring of gaphor.ui.abc.UIComponent.close:1
msgid "Close the UI component."
msgstr ""

#: ../../gaphor/ui/abc.py:docstring of gaphor.ui.abc.UIComponent.close:3
msgid "The component can decide to hide or destroy the UI components."
msgstr ""

#: ../../gaphor/ui/abc.py:docstring of gaphor.ui.abc.UIComponent.open:1
msgid "Create and display the UI components (windows)."
msgstr ""

#: ../../gaphor/ui/abc.py:docstring of gaphor.ui.abc.UIComponent.shutdown:1
msgid "Shut down this component."
msgstr ""

#: ../../gaphor/ui/abc.py:docstring of gaphor.ui.abc.UIComponent.shutdown:3
msgid "It's not supposed to be opened again."
msgstr ""

#: ../service_oriented.md:106
msgid "Typically, a service and UI component would like to present some actions to the user, by means of menu entries. Every service and UI component can advertise actions by implementing the `gaphor.abc.ActionProvider` interface:"
msgstr ""

#: ../../gaphor/abc.py:docstring of gaphor.abc.ActionProvider:1
msgid "An action provider is a special service that provides actions via ``@action`` decorators on its methods (see gaphor/action.py)."
msgstr ""

#: ../service_oriented.md:116
msgid "Example plugin"
msgstr ""

#: ../service_oriented.md:118
msgid "A small example is provided by means of the Hello world plugin. Take a look at the files at [GitHub](https://github.com/gaphor/gaphor_plugin_helloworld). The example plugin needs to be updated to support versions 1.0.0 and later of Gaphor."
msgstr ""

#: ../service_oriented.md:122
msgid "The [pyproject.toml](https://github.com/gaphor/gaphor_plugin_helloworld/blob/main/pyproject.toml) file contains a plugin:"
msgstr ""

#: ../service_oriented.md:129
msgid "This refers to the class `HelloWorldPlugin` in package/module [gaphor_plugins_helloworld](https://github.com/gaphor/gaphor_plugin_helloworld/blob/main/gaphor_helloworld_plugin/__init__.py)."
msgstr ""

#: ../service_oriented.md:132
msgid "Here is a stripped version of the hello world plugin:"
msgstr ""

#: ../service_oriented.md:157
msgid "As stated before, a plugin should implement the `Service` interface. It also implements `ActionProvider`, saying it has some actions to be performed by the user."
msgstr ""

#: ../service_oriented.md:160
msgid "The menu entry will be part of the \"Tools\" extension menu. This extension point is created as a service. Other services can also be passed as dependencies. Services can get references to other services by defining them as arguments of the constructor."
msgstr ""

#: ../service_oriented.md:164
msgid "All action defined in this service are registered."
msgstr ""

#: ../service_oriented.md:165
msgid "Each service has a `shutdown()` method. This allows the service to perform some cleanup when it's shut down."
msgstr ""

#: ../service_oriented.md:167
msgid "The action that can be invoked. The action is defined and will be picked up by `add_actions()` method (see 3.)"
msgstr ""

#: ../sphinx.rst:2
msgid "Sphinx Extension"
msgstr ""

#: ../sphinx.rst:4
msgid "What's more awesome than to use Gaphor diagrams directly in your `Sphinx`_ documentation. Whether you write your docs in `reStructured Text`_ or `Markdown`_, we've got you covered."
msgstr ""

#: ../sphinx.rst:9
msgid "Here we cover the reStructured Text syntax. If you prefer markdown, we suggest you have a look at the `MyST-parser <https://myst-parser.readthedocs.io/>`_, as it `supports Sphinx directives <https://myst-parser.readthedocs.io/en/latest/syntax/roles-and-directives.html>`_."
msgstr ""

#: ../sphinx.rst:13
msgid "It requires `minimal effort to set up <#configuration>`_. Adding a diagram is as simple as:"
msgstr ""

#: ../sphinx.rst:22
msgid "In case you use multiple Gaphor source files, you need to define a ``:model:`` attribute and add the model names to the Sphinx configuration file (``conf.py``)."
msgstr ""

#: ../sphinx.rst:30
msgid "Diagrams can be referenced by their name, or by their fully qualified name."
msgstr ""

#: ../sphinx.rst:36
msgid "`Image properties`_ can also be applied:"
msgstr ""

#: ../sphinx.rst:-1
msgid "A description suitable for an example"
msgstr ""

#: ../sphinx.rst:53
msgid "Configuration"
msgstr ""

#: ../sphinx.rst:55
msgid "To add Gaphor diagram support to Sphinx, make sure Gaphor is listed as a dependency."
msgstr ""

#: ../sphinx.rst:59
msgid "Gaphor requires at least Python 3.9."
msgstr ""

#: ../sphinx.rst:61
msgid "Secondly, add the following to your ``conf.py`` file:"
msgstr ""

#: ../sphinx.rst:63
msgid "Step 1: Add gaphor as extension."
msgstr ""

#: ../sphinx.rst:71
msgid "Step 2: Add references to models"
msgstr ""

#: ../sphinx.rst:84
msgid "Now include ``diagram`` directives in your documents."
msgstr ""

#: ../sphinx.rst:88
msgid "Read the Docs"
msgstr ""

#: ../sphinx.rst:90
msgid "The diagram directive plays nice with `Read the docs`_. To make diagrams render, it's best to use a `.readthedocs.yaml`_ file in your project. Make sure to include the extra ``apt_packages`` as shown below."
msgstr ""

#: ../sphinx.rst:94
msgid "This is the ``.readthedocs.yaml`` file we use for Gaphor:"
msgstr ""

#: ../sphinx.rst:99
msgid "``libgirepository1.0-dev`` is required to build PyGObject."
msgstr ""

#: ../sphinx.rst:100
msgid "``gir1.2-pango-1.0`` is required for text rendering."
msgstr ""

#: ../sphinx.rst:104
msgid "For Gaphor 2.7.0, ``gir1.2-gtk-3.0`` and ``gir1.2-gtksource-4`` are required ``apt_packages``, although we do not use the GUI. From Gaphor 2.7.1 onwards all you need is GI-repository and Pango."
msgstr ""

#: ../sphinx.rst:109
msgid "Errors"
msgstr ""

#: ../sphinx.rst:111
msgid "Errors are shown on the console when the documentation is built and in the document."
msgstr ""

#: ../sphinx.rst:113
msgid "An error will appear in the documentation. Something like this:"
msgstr ""

#: ../sphinx.rst:117
msgid "No diagram ‘Wrong name’ in model ‘example’ (../examples/sequence-diagram.gaphor)."
msgstr ""

#: ../stereotypes.md:1
msgid "Stereotypes"
msgstr ""

#: ../stereotypes.md:3
msgid "In UML, stereotypes are way to extend the application of the UML language to new domains. For example: SysML started as a profile for UML."
msgstr ""

#: ../stereotypes.md:6
msgid "Gaphor supports stereotypes too. They're *the* way for you to adapt your models to your specific needs."
msgstr ""

#: ../stereotypes.md:9
msgid "The UML, SysML, RAAML and other models used in Gaphor – the code is generated from Gaphor model files – make use of stereotypes to provide specific information used when generating the data model code."
msgstr ""

#: ../stereotypes.md:13
msgid "To create a stereotype, ensure the UML Profile is active and open the *Profile* section of the toolbox. First add a *Metaclass* to your diagram. Next add a *Stereotype*, and connect both with a *Extension*. The `«metaclass»` stereotype will only show once the *Extension* is connected both class and stereotype."
msgstr ""

#: ../stereotypes.md:20
msgid "The class names in the metaclass should be a class name from the UML model, such as `Class`, `Interface`, `Property`, `Association`. Or even `Element` if you want to use the stereotype on all elements."
msgstr ""

#: ../stereotypes.md:25
msgid "Your stereotype declaration may look something like this:"
msgstr ""

#: ../stereotypes.md:31
msgid "The `Asynchronous` stereotype has a property `priority`. This property can be proved a value once the stereotype is applied to a *Property*, such as an association end."
msgstr ""

#: ../stereotypes.md:35
msgid "When a stereotype can be applied to a model element, a *Stereotype* section will appear in the editor."
msgstr ""

#: ../stereotypes.md:38
msgid "![Stereotype usage example](images/stereotype-usage.png)"
msgstr ""

#: ../stereotypes.md:38
msgid "Stereotype usage example"
msgstr ""

#: ../stereotypes.md:40
msgid "Creating a profile"
msgstr ""

#: ../stereotypes.md:42
msgid "In SysML extending the profile using stereotypes is often required to tailor the model to your needs. For example, creating Customer vs System requirements."
msgstr ""

#: ../stereotypes.md:45
msgid "To add a profile to your model:"
msgstr ""

#: ../stereotypes.md:47
msgid "Create a package called `profile` this can be done by right clicking in the left hand column."
msgstr ""

#: ../stereotypes.md:48
msgid "Switch modelling language to the UML profile (top of left hand menu drop down)"
msgstr ""

#: ../stereotypes.md:49
msgid "Within the package create a profile diagram (prf)"
msgstr ""

#: ../stereotypes.md:50
msgid "Add a profile element to the diagram"
msgstr ""

#: ../stereotypes.md:51
msgid "Add a meta-class element to the diagram, within the profile."
msgstr ""

#: ../stereotypes.md:52
msgid "Add a stereotype element to the diagram, within the profile."
msgstr ""

#: ../stereotypes.md:53
msgid "Connect meta-class and stereotype with an Extension relation. The head should be attached to the class. As soon as the Extension is connected, the class will get a stereotype _metaclass_ assigned."
msgstr ""

#: ../stereotypes.md:55
msgid "With the meta-class and stereotype placed on the diagram, either:"
msgstr ""

#: ../stereotypes.md:57
msgid "Double-click the meta-class and name it after the base element you want to create your stereotype from."
msgstr ""

#: ../stereotypes.md:58
msgid "Select the base element from the drop down menu in the Property Editor on the right hand side. In this case only UML elements can be used as base elements."
msgstr ""

#: ../stereotypes.md:60
msgid "Styling Stereotypes"
msgstr ""

#: ../stereotypes.md:62
msgid "You can apply styling to stereotypes. For example here the base element `requirement` has a stereotype `system requirement`"
msgstr ""

#: ../stereotypes.md:77
msgid "[Style Sheets](style_sheets) has more detail on how CSS works in Gaphor"
msgstr ""

#: ../storage.md:1
msgid "File Format"
msgstr ""

#: ../storage.md:3
msgid "The root element of Gaphor models is the `Gaphor` tag, all other elements are contained in this. The Gaphor element delimits the beginning and the end of an Gaphor model."
msgstr ""

#: ../storage.md:7
msgid "The idea is to keep the file format as simple and extensible as possible: UML elements (including Diagram) are at the top level with no nesting. A UML element can have two tags: references (`ref`) and values (`val`). References are used to point to other UML elements. Values have a value inside (an integer or a string)."
msgstr ""

#: ../storage.md:11
msgid "Since many references are bi-directional, you'll find both ends defined in the file (e.g. `Package.ownedType` - `Actor.package`, and `Diagram.ownedPresentation` and `UseCaseItem.diagram`)."
msgstr ""

#: ../style_sheets.md:1
msgid "Style Sheets"
msgstr ""

#: ../style_sheets.md:3
msgid "Since Gaphor 2.0, diagrams can have a different look by means of style sheets. Style sheets use the Cascading Style Sheets (CSS) syntax. CSS is used to describe the presentation of a document written in a markup language, and is most commonly used with HTML for web pages."
msgstr ""

#: ../style_sheets.md:8
msgid "On the [W3C CSS home page](https://www.w3.org/Style/CSS/Overview.en.html), CSS is described as:"
msgstr ""

#: ../style_sheets.md:11
msgid "Cascading Style Sheets (CSS) is a simple mechanism for adding style (e.g., fonts, colors, spacing) to Web documents."
msgstr ""

#: ../style_sheets.md:14
msgid "Its application goes well beyond web documents, though. Gaphor uses CSS to provide style elements to items in diagrams. CSS allows us, users of Gaphor, to change the visual appearance of our diagrams. Color and line styles can be changed to make it easier to read the diagrams."
msgstr ""

#: ../style_sheets.md:19
msgid "Since we're dealing with a diagram, and not a HTML document, some CSS features have been left out."
msgstr ""

#: ../style_sheets.md:22
msgid "The style is part of the model, so everyone working on a model will have the same style. To edit the style press the tools page button at the top right corner in gaphor:"
msgstr ""

#: ../style_sheets.md:26
msgid "![Button to access style code](images/css-button.png)"
msgstr ""

#: ../style_sheets.md:26
msgid "Button to access style code"
msgstr ""

#: ../style_sheets.md:28
msgid "Here is a simple example of how to change the background color of a class:"
msgstr ""

#: ../style_sheets.md:36
msgid "background beige"
msgstr ""

#: ../style_sheets.md:41
msgid "Or change the color of a component, only when it's nested in a node:"
msgstr ""

#: ../style_sheets.md:49
msgid "nested component"
msgstr ""

#: ../style_sheets.md:54
msgid "The diagram itself is also expressed as a CSS node. It's pretty easy to define a \"dark\" style:"
msgstr ""

#: ../style_sheets.md:68
msgid "dark-style"
msgstr ""

#: ../style_sheets.md:75
msgid "Here you already see the first custom attribute: `text-color`. This property allows you to control the color of the text drawn in an item. `color` is used for the lines (strokes) that make the layout of a diagram item."
msgstr ""

#: ../style_sheets.md:79
msgid "Supported selectors"
msgstr ""

#: ../style_sheets.md:81
msgid "Since we are dealing with diagrams and models, we do not need all the features of CSS. Below you'll find a summary of all CSS features supported by Gaphor."
msgstr ""

#: ../style_sheets.md:86
msgid "``*``"
msgstr ""

#: ../style_sheets.md:86
msgid "All items on the diagram, including the diagram itself."
msgstr ""

#: ../style_sheets.md:87
msgid "``node component``"
msgstr ""

#: ../style_sheets.md:87
msgid "Any component item which is a descendant of a node."
msgstr ""

#: ../style_sheets.md:88
msgid "``node > component``"
msgstr ""

#: ../style_sheets.md:88
msgid "A component item which is a child of a node."
msgstr ""

#: ../style_sheets.md:89
msgid "``generalization[subject]``"
msgstr ""

#: ../style_sheets.md:89
msgid "A generalization item with a subject present."
msgstr ""

#: ../style_sheets.md:90
msgid "``class[name=Foo]``"
msgstr ""

#: ../style_sheets.md:90
msgid "A class with name \"Foo\"."
msgstr ""

#: ../style_sheets.md:91
msgid "``diagram[name^=draft]``"
msgstr ""

#: ../style_sheets.md:91
msgid "A diagram with a name starting with \"draft\"."
msgstr ""

#: ../style_sheets.md:92
msgid "``diagram[name$=draft]``"
msgstr ""

#: ../style_sheets.md:92
msgid "A diagram with a name ends with \"draft\"."
msgstr ""

#: ../style_sheets.md:93
msgid "``diagram[name*=draft]``"
msgstr ""

#: ../style_sheets.md:93
msgid "A diagram with a name containing the text \"draft\"."
msgstr ""

#: ../style_sheets.md:94
msgid "``diagram[name~=draft item]``"
msgstr ""

#: ../style_sheets.md:94
msgid "A diagram with a name of \"draft\" or \"item\"."
msgstr ""

#: ../style_sheets.md:95
msgid "``diagram[name|=draft]``"
msgstr ""

#: ../style_sheets.md:95
msgid "A diagram with a name is \"draft\" or starts with \"draft-\"."
msgstr ""

#: ../style_sheets.md:96
msgid "``:focus``"
msgstr ""

#: ../style_sheets.md:96
msgid "The focused item. Other pseudo classes are:"
msgstr ""

#: ../style_sheets.md:98
msgid "``:active`` selected items"
msgstr ""

#: ../style_sheets.md:99
msgid "``:hover`` for the item under the mouse"
msgstr ""

#: ../style_sheets.md:100
msgid "``:drop`` if an item is dragged and can be dropped on this item"
msgstr ""

#: ../style_sheets.md:101
msgid "``:disabled`` if an element is grayed out during handle movement"
msgstr ""

#: ../style_sheets.md:102
msgid "``:empty``"
msgstr ""

#: ../style_sheets.md:102
msgid "A node containing no child nodes in the diagram."
msgstr ""

#: ../style_sheets.md:103
msgid "``:root``"
msgstr ""

#: ../style_sheets.md:103
msgid "Refers to the diagram itself."
msgstr ""

#: ../style_sheets.md:105
msgid "This is only applicable for the diagram"
msgstr ""

#: ../style_sheets.md:106
msgid "``:first-child``"
msgstr ""

#: ../style_sheets.md:106
msgid "A node is the first element among a group of sibling."
msgstr ""

#: ../style_sheets.md:107
msgid "``:has()``"
msgstr ""

#: ../style_sheets.md:107
msgid "The item contains any of the provided selectors."
msgstr ""

#: ../style_sheets.md:109
msgid "E.g. ``node:has(component)``: a node containing a component item."
msgstr ""

#: ../style_sheets.md:110
msgid "``:is()``"
msgstr ""

#: ../style_sheets.md:110
msgid "Match any of the provided selectors."
msgstr ""

#: ../style_sheets.md:112
msgid "E.g. ``:is(node, subsystem) > component``: a node or subsystem."
msgstr ""

#: ../style_sheets.md:113
msgid "``:not()``"
msgstr ""

#: ../style_sheets.md:113
msgid "Negate the selector."
msgstr ""

#: ../style_sheets.md:115
msgid "E.g. ``:not([subject])``: Any item that has no \"subject\"."
msgstr ""

#: ../style_sheets.md:116
msgid "``::after``"
msgstr ""

#: ../style_sheets.md:116
msgid "Provide extra content after a text. Only the ``content`` property is supported."
msgstr ""

#: ../style_sheets.md:121
msgid "The official specification of [CSS3 attribute selectors](https://www.w3.org/TR/2018/REC-selectors-3-20181106/#attribute-selectors)."
msgstr ""

#: ../style_sheets.md:122
msgid "Gaphor provides the `|=` attribute selector for the sake of completeness. It's probably not very useful in this context, though."
msgstr ""

#: ../style_sheets.md:124
msgid "Please note that Gaphor CSS does not support IDs for diagram items, so the CSS syntax for IDs (`#some-id`) is not used. Also, class syntax (`.some-class`) is not supported currently."
msgstr ""

#: ../style_sheets.md:128
msgid "Style properties"
msgstr ""

#: ../style_sheets.md:130
msgid "Gaphor supports a subset of CSS properties and some Gaphor specific properties. The style sheet interpreter is relatively straight forward. All widths, heights, and sizes are measured in pixels. You can’t use complex style declarations, like the `font` property in HTML/CSS which can contain font family, size, weight."
msgstr ""

#: ../style_sheets.md:136
msgid "Some properties are inherited from the parent style. The parent often is a diagram. When you set a `color`` or a `font-family` on `diagram`, it will propagate down to the items contained in the diagram."
msgstr ""

#: ../style_sheets.md:140
msgid "Colors"
msgstr ""

#: ../style_sheets.md:144
msgid "``background-color``"
msgstr ""

#: ../style_sheets.md:144
msgid "Examples:"
msgstr ""

#: ../style_sheets.md:146
msgid "``background-color: azure;``"
msgstr ""

#: ../style_sheets.md:148
msgid "``background-color: rgb(255, 255, 255);``"
msgstr ""

#: ../style_sheets.md:150
msgid "``background-color: hsl(130, 95%, 10%);``"
msgstr ""

#: ../style_sheets.md:151
msgid "``color``"
msgstr ""

#: ../style_sheets.md:151
msgid "Color used for lines. *(inherited)*"
msgstr ""

#: ../style_sheets.md:152
msgid "``text-color``"
msgstr ""

#: ../style_sheets.md:152
msgid "Color for text. *(inherited)*"
msgstr ""

#: ../style_sheets.md:154
msgid "Use color if possible."
msgstr ""

#: ../style_sheets.md:155
msgid "``opacity``"
msgstr ""

#: ../style_sheets.md:155
msgid "Color opacity factor (``0.0`` - ``1.0``), applied to all colors."
msgstr ""

#: ../style_sheets.md:160
msgid "A color can be any [CSS3 color code](https://www.w3.org/TR/2018/REC-css-color-3-20180619/), as described in the CSS documentation. Gaphor supports all color notations: `rgb()`, `rgba()`, `hsl()`, `hsla()`, Hex code (`#ffffff`) and color names."
msgstr ""

#: ../style_sheets.md:164
msgid "Text and fonts"
msgstr ""

#: ../style_sheets.md:168
msgid "``font-family``"
msgstr ""

#: ../style_sheets.md:168
msgid "A single font name (e.g. ``sans``, ``serif``, ``courier``). *(inherited)*"
msgstr ""

#: ../style_sheets.md:169
msgid "``font-size``"
msgstr ""

#: ../style_sheets.md:169
msgid "An absolute size (e.g. ``14``) or a size value (e.g. ``small``). *(inherited)*"
msgstr ""

#: ../style_sheets.md:170
msgid "``font-style``"
msgstr ""

#: ../style_sheets.md:170
msgid "Either ``normal`` or ``italic``. *(inherited)*"
msgstr ""

#: ../style_sheets.md:171
msgid "``font-weight``"
msgstr ""

#: ../style_sheets.md:171
msgid "Either ``normal`` or ``bold``. *(inherited)*"
msgstr ""

#: ../style_sheets.md:172
msgid "``text-align``"
msgstr ""

#: ../style_sheets.md:172
msgid "Either ``left``, ``center``, ``right``. *(inherited)*"
msgstr ""

#: ../style_sheets.md:173
msgid "``text-decoration``"
msgstr ""

#: ../style_sheets.md:173
msgid "Either ``none`` or ``underline``."
msgstr ""

#: ../style_sheets.md:174
msgid "``vertical-align``"
msgstr ""

#: ../style_sheets.md:174
msgid "Vertical alignment for text."
msgstr ""

#: ../style_sheets.md:176
msgid "Either ``top``, ``middle`` or ``bottom``."
msgstr ""

#: ../style_sheets.md:177
msgid "``vertical-spacing``"
msgstr ""

#: ../style_sheets.md:177
msgid "Set vertical spacing for icon-like items (actors, start state)."
msgstr ""

#: ../style_sheets.md:179
msgid "Example: ``vertical-spacing: 4``."
msgstr ""

#: ../style_sheets.md:180
msgid "``white-space``"
msgstr ""

#: ../style_sheets.md:180
msgid "Change the line wrapping behavior for text. *(inherited)*"
msgstr ""

#: ../style_sheets.md:184
msgid "`font-family` can be only one font name, not a list of (fallback) names, as is used for HTML."
msgstr ""

#: ../style_sheets.md:186
msgid "`font-size` can be a number or [CSS absolute-size values](https://drafts.csswg.org/css-fonts-3/#font-size-prop). Only the values `x-small`, `small`, `medium`, `large` and `x-large` are supported."
msgstr ""

#: ../style_sheets.md:189
msgid "Drawing and spacing"
msgstr ""

#: ../style_sheets.md:193
msgid "``border-radius``"
msgstr ""

#: ../style_sheets.md:193
msgid "Radius for rectangles: ``border-radius: 4``."
msgstr ""

#: ../style_sheets.md:194
msgid "``dash-style``"
msgstr ""

#: ../style_sheets.md:194
msgid "Style for dashed lines: ``dash-style: 7 5``."
msgstr ""

#: ../style_sheets.md:195
msgid "``justify-content``"
msgstr ""

#: ../style_sheets.md:195
msgid "Content alignment for boxes."
msgstr ""

#: ../style_sheets.md:197
msgid "Either ``start``, ``end``, ``center`` or ``stretch``."
msgstr ""

#: ../style_sheets.md:198
msgid "``line-style``"
msgstr ""

#: ../style_sheets.md:198
msgid "Either ``normal`` or ``sloppy [factor]``."
msgstr ""

#: ../style_sheets.md:199
msgid "``line-width``"
msgstr ""

#: ../style_sheets.md:199
msgid "Set the width for lines: ``line-width: 2``. *(inherited)*"
msgstr ""

#: ../style_sheets.md:200
msgid "``min-height``"
msgstr ""

#: ../style_sheets.md:200
msgid "Set minimal height for an item: ``min-height: 50``."
msgstr ""

#: ../style_sheets.md:201
msgid "``min-width``"
msgstr ""

#: ../style_sheets.md:201
msgid "Set minimal width for an item: ``min-width: 100``."
msgstr ""

#: ../style_sheets.md:202
msgid "``padding``"
msgstr ""

#: ../style_sheets.md:202
msgid "CSS style padding (top, right, bottom, left)."
msgstr ""

#: ../style_sheets.md:204
msgid "Example: ``padding: 3 4``."
msgstr ""

#: ../style_sheets.md:208
msgid "`padding` is defined by integers in the range of 1 to 4. No unit (px, pt, em) needs to be used. All values are in pixel distance."
msgstr ""

#: ../style_sheets.md:210
msgid "`dash-style` is a list of numbers (line, gap, line, gap, …)"
msgstr ""

#: ../style_sheets.md:211
msgid "`line-style` only has an effect when defined on a `diagram`. A sloppiness factor can be provided in the range of -2 to 2."
msgstr ""

#: ../style_sheets.md:214
msgid "Pseudo elements"
msgstr ""

#: ../style_sheets.md:216
msgid "Currently, only the `::after` pseudo element is supported."
msgstr ""

#: ../style_sheets.md:220
msgid "``content``"
msgstr ""

#: ../style_sheets.md:220
msgid "Extra content to be shown after a text."
msgstr ""

#: ../style_sheets.md:224
msgid "Diagram styles"
msgstr ""

#: ../style_sheets.md:226
msgid "Only a few properties can be defined on a diagram, namely `background-color` and `line-style`. You define the diagram style separately from the diagram item styles. That way it's possible to set the background color for diagrams specifically. The line style can be the normal straight lines, or a more playful \"sloppy\" style. For the sloppy style an optional wobliness factor can be provided to set the level of line wobbliness. 0.5 is default, 0.0 is a straight line. The value should be between -2.0 and 2.0. Values between 0.0 and 0.5 make for a subtle effect."
msgstr ""

#: ../style_sheets.md:235
msgid "Gaphor supports dark and light mode since 2.16.0. Dark and light color schemes are exclusively used for on-screen editing. When exporting images, only the default color scheme is applied. Color schemes can be defined with `@media` queries. The official `prefers-color-scheme = dark` query is supported, as well as a more convenient `dark-mode`."
msgstr ""

#: ../style_sheets.md:261
msgid "Variables"
msgstr ""

#: ../style_sheets.md:263
msgid "Since Gaphor 2.16.0 you can use [CSS variables](https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties) in your style sheets."
msgstr ""

#: ../style_sheets.md:265
msgid "This allows you to define often used values in a more generic way. Think of things like line dash style and colors."
msgstr ""

#: ../style_sheets.md:268
msgid "The `var()` function has some limitations:"
msgstr ""

#: ../style_sheets.md:270
msgid "Values can’t have a default value."
msgstr ""

#: ../style_sheets.md:271
msgid "Variables can’t have a variable as their value."
msgstr ""

#: ../style_sheets.md:273
msgid "Example:"
msgstr ""

#: ../style_sheets.md:286
msgid "All diagrams have a white background. Sequence diagrams get a blue-ish background."
msgstr ""

#: ../style_sheets.md:288
msgid "Working with model elements"
msgstr ""

#: ../style_sheets.md:290
msgid "Gaphor has many model elements. How can you find out which item should be styled?"
msgstr ""

#: ../style_sheets.md:292
msgid "Gaphor only styles the elements that are in the model, so you should be explicit on their names. For example: `Component` inherits from `Class` in the UML model, but changing a color for `Class` does not change it for `Component`."
msgstr ""

#: ../style_sheets.md:296
msgid "If you hover over a button the toolbox (bottom-left section), a popup will appear with the item's name and a shortcut. As a general rule, you can use the component name, glued together as the name in the stylesheet. A *Component* can be addressed as `component`, *Use Case* as `usecase`. The name matching is case insensitive. CSS names are written in lower case by default."
msgstr ""

#: ../style_sheets.md:303
msgid "However, since the CSS element names are derived from names used within Gaphor, there are a few exceptions."
msgstr ""

#: ../style_sheets.md:307
msgid "Profile"
msgstr ""

#: ../style_sheets.md:307
msgid "Group"
msgstr ""

#: ../style_sheets.md:307
msgid "Element"
msgstr ""

#: ../style_sheets.md:307
msgid "CSS element"
msgstr ""

#: ../style_sheets.md:309
msgid "\\*"
msgstr ""

#: ../style_sheets.md:309
msgid "*element name*"
msgstr ""

#: ../style_sheets.md:309
msgid "element name without spaces"
msgstr ""

#: ../style_sheets.md:311
msgid "E.g. ``class``, ``usecase``."
msgstr ""

#: ../style_sheets.md:312
#: ../style_sheets.md:313
#: ../style_sheets.md:314
#: ../style_sheets.md:315
#: ../style_sheets.md:316
#: ../style_sheets.md:317
#: ../style_sheets.md:318
#: ../style_sheets.md:319
#: ../style_sheets.md:320
msgid "UML"
msgstr ""

#: ../style_sheets.md:312
msgid "Classes"
msgstr ""

#: ../style_sheets.md:312
msgid "all Association's"
msgstr ""

#: ../style_sheets.md:312
msgid "``association``"
msgstr ""

#: ../style_sheets.md:313
msgid "Components"
msgstr ""

#: ../style_sheets.md:313
msgid "Device/Node"
msgstr ""

#: ../style_sheets.md:313
msgid "``node``"
msgstr ""

#: ../style_sheets.md:314
#: ../style_sheets.md:315
#: ../style_sheets.md:316
msgid "Actions"
msgstr ""

#: ../style_sheets.md:314
msgid "Decision/Merge Node"
msgstr ""

#: ../style_sheets.md:314
msgid "``decisionnode``"
msgstr ""

#: ../style_sheets.md:315
msgid "Fork/Join Node"
msgstr ""

#: ../style_sheets.md:315
msgid "``forknode``"
msgstr ""

#: ../style_sheets.md:316
msgid "Swimlane"
msgstr ""

#: ../style_sheets.md:316
msgid "``partition``"
msgstr ""

#: ../style_sheets.md:317
msgid "Interactions"
msgstr ""

#: ../style_sheets.md:317
msgid "Reflexive message"
msgstr ""

#: ../style_sheets.md:317
msgid "``message``"
msgstr ""

#: ../style_sheets.md:318
#: ../style_sheets.md:319
msgid "States"
msgstr ""

#: ../style_sheets.md:318
msgid "Initial Pseudostate"
msgstr ""

#: ../style_sheets.md:318
#: ../style_sheets.md:319
msgid "``pseudostate``"
msgstr ""

#: ../style_sheets.md:319
msgid "History Pseudostate"
msgstr ""

#: ../style_sheets.md:320
msgid "Profiles"
msgstr ""

#: ../style_sheets.md:320
msgid "Metaclass"
msgstr ""

#: ../style_sheets.md:320
msgid "``class``"
msgstr ""

#: ../style_sheets.md:321
#: ../style_sheets.md:322
#: ../style_sheets.md:323
#: ../style_sheets.md:324
#: ../style_sheets.md:325
msgid "C4 Model"
msgstr ""

#: ../style_sheets.md:321
msgid "Person"
msgstr ""

#: ../style_sheets.md:321
msgid "``c4person``"
msgstr ""

#: ../style_sheets.md:322
msgid "Software System"
msgstr ""

#: ../style_sheets.md:322
msgid "``c4container[type=\"Software System\"]``"
msgstr ""

#: ../style_sheets.md:323
msgid "Component"
msgstr ""

#: ../style_sheets.md:323
msgid "``c4container[type=\"Component\"]``"
msgstr ""

#: ../style_sheets.md:324
msgid "Container"
msgstr ""

#: ../style_sheets.md:324
msgid "``c4container[type=\"Container\"]``"
msgstr ""

#: ../style_sheets.md:325
msgid "Container: Database"
msgstr ""

#: ../style_sheets.md:325
msgid "``c4database``"
msgstr ""

#: ../style_sheets.md:326
#: ../style_sheets.md:327
#: ../style_sheets.md:328
msgid "SysML"
msgstr ""

#: ../style_sheets.md:326
msgid "ValueType"
msgstr ""

#: ../style_sheets.md:326
#: ../style_sheets.md:327
msgid "``datatype``"
msgstr ""

#: ../style_sheets.md:327
msgid "Primitive"
msgstr ""

#: ../style_sheets.md:328
msgid "Derive Requirement"
msgstr ""

#: ../style_sheets.md:328
msgid "``derivedreq``"
msgstr ""

#: ../style_sheets.md:329
msgid "RAAML"
msgstr ""

#: ../style_sheets.md:329
msgid "FTA"
msgstr ""

#: ../style_sheets.md:329
msgid "any AND/OR/… Gate"
msgstr ""

#: ../style_sheets.md:329
msgid "``and``, ``or``, etc."
msgstr ""

#: ../style_sheets.md:334
msgid "Ideas"
msgstr ""

#: ../style_sheets.md:336
msgid "Here are some ideas that go just beyond changing a color or a font. With the following examples we dig in to Gaphor's model structure to reveal more information to the users."
msgstr ""

#: ../style_sheets.md:340
msgid "To create your own expression you may want to use the Console (![open menu](images/open-menu-symbolic.svg) → Tools → Console). Drop us a line on [Gitter](https://gitter.im/gaphor/Lobby) and we would be happy to help you."
msgstr ""

#: ../style_sheets.md:343
msgid "The drafts package"
msgstr ""

#: ../style_sheets.md:345
msgid "All diagrams in the package \"Drafts\" should be drawn using sloppy lines:"
msgstr ""

#: ../style_sheets.md:357
msgid "draft style"
msgstr ""

#: ../style_sheets.md:362
msgid "Unconnected relationships"
msgstr ""

#: ../style_sheets.md:364
msgid "All items on a diagram that are not backed by a model element, should be drawn in a dark red color. This can be used to spot not-so-well connected relationships, such as Generalization, Implementation, and Dependency. These items will only be backed by a model element once you connect both line ends. This rule will exclude simple elements, like lines and boxes, which will never have a backing model element."
msgstr ""

#: ../style_sheets.md:377
msgid "unconnected relationship"
msgstr ""

#: ../style_sheets.md:382
msgid "Navigable associations"
msgstr ""

#: ../style_sheets.md:384
msgid "An example of how to apply a style to a navigable association is to color an association blue if neither of the ends are navigable. This color could act as a validation rule for a model where at least one end of each association should be navigable. This is actually the case for the model file used to create Gaphor's data model."
msgstr ""

#: ../style_sheets.md:396
msgid "navigable association"
msgstr ""

#: ../style_sheets.md:401
msgid "Solid Control Flow lines"
msgstr ""

#: ../style_sheets.md:403
msgid "In Gaphor, Control Flow lines follow the SysML styling: dashed. If you want, or need to strictly follow the official UML specifications, you can simply make those solid lines."
msgstr ""

#: ../style_sheets.md:413
msgid "control flow"
msgstr ""

#: ../style_sheets.md:418
msgid "Todo note highlight"
msgstr ""

#: ../style_sheets.md:420
msgid "All comments beginning with the phrase \"todo\" can be highlighted in a different user-specific colour. This can be used to make yourself aware that you have to do some additional work to finalize the diagram."
msgstr ""

#: ../style_sheets.md:430
msgid "highlighted todo note"
msgstr ""

#: ../style_sheets.md:435
msgid "Emphesize abstract classes and operations"
msgstr ""

#: ../style_sheets.md:437
msgid "It may be that the italic font used is not distinguishable enough to differentiate between concrete and abstract classes or operations. To make this work we check if the `isAbstract` attribute is set on the element:"
msgstr ""

#: ../style_sheets.md:447
msgid "emphasize abstract elements"
msgstr ""

#: ../style_sheets.md:452
msgid "System Style Sheet"
msgstr ""

#: ../transaction.md:1
msgid "Transaction support"
msgstr ""

#: ../transaction.md:3
msgid "Transaction support is located in module `gaphor.transaction`:"
msgstr ""

#: ../transaction.md:10
msgid "Do some basic initialization, so event emission will work. Since the transaction decorator does not know about the active user session (window), it emits it's events via a global list of subscribers:"
msgstr ""

#: ../transaction.md:18
msgid "The Transaction class is used mainly to signal the begin and end of a transaction. This is done by the TransactionBegin, TransactionCommit and TransactionRollback events:"
msgstr ""

#: ../transaction.md:26
msgid "Same goes for commit and rollback events:"
msgstr ""

#: ../transaction.md:37
msgid "A Transaction is started by initiating a Transaction instance:"
msgstr ""

#: ../transaction.md:42
msgid "On success, a transaction can be committed:"
msgstr ""

#: ../transaction.md:47
msgid "After a commit, a rollback is no longer allowed (the transaction is closed):"
msgstr ""

#: ../transaction.md:55
msgid "Transactions may be nested:"
msgstr ""

#: ../transaction.md:64
msgid "Transactions should be closed in the right order (subtransactions first):"
msgstr ""

#: ../transaction.md:79
msgid "The transactional decorator can be used to mark functions as transactional:"
msgstr ""

#: ../transaction.md:89
msgid "If an exception is raised from within the decorated function a rollback is performed:"
msgstr ""

#: ../transaction.md:103
msgid "Cleanup:"
msgstr ""

#: ../undo.md:1
msgid "Undo Manager"
msgstr ""

#: ../undo.md:3
msgid "Undo is a required feature in modern applications. Gaphor is no exception. Having an undo function in place means you can change the model and easily revert to an older state."
msgstr ""

#: ../undo.md:7
msgid "Overview of Transactions"
msgstr ""

#: ../undo.md:9
msgid "The recording and playback of changes in Gaphor is handled by the the Undo Manager. The Undo Manager works transactionally. A transaction must succeed or fail as a complete unit. If the transaction fails in the middle, it is rolled back. In Gaphor this is achieved by the `transaction` module, which provides a context manager `Transaction` and a decorator called `@transactional`."
msgstr ""

#: ../undo.md:16
msgid "When transactions take place, they emit event notifications on the key transaction milestones so that other services can make use of the events. The event notifications are for the begin of the transaction, and the commit of the transaction if it is successful or the rollback of the transaction if it fails."
msgstr ""

#: ../undo.md:21
msgid "Start of a Transaction"
msgstr ""

#: ../undo.md:23
msgid "A `Transaction` object is created."
msgstr ""

#: ../undo.md:24
msgid "`TransactionBegin` event is emitted."
msgstr ""

#: ../undo.md:25
msgid "The `UndoManager` instantiates a new `ActionStack` which is the transaction object, and adds the undo action to the stack."
msgstr ""

#: ../undo.md:28
msgid "Nested transactions are supported to allow a transaction to be added inside of another transaction that is already in progress."
msgstr ""

#: ../undo.md:31
msgid "Successful Transaction"
msgstr ""

#: ../undo.md:33
msgid "A `TransactionCommit` event is emitted"
msgstr ""

#: ../undo.md:34
msgid "The `UndoManager` closes and stores the transaction."
msgstr ""

#: ../undo.md:36
msgid "Failed Transaction"
msgstr ""

#: ../undo.md:38
msgid "A `TransactionRollback` event is emitted."
msgstr ""

#: ../undo.md:39
msgid "The `UndoManager` plays back all the recorded actions, but does not store it."
msgstr ""

#: ../undo.md:42
msgid "References"
msgstr ""

#: ../undo.md:44
msgid "[A Framework for Undoing Actions in Collaborative Systems](http://web.eecs.umich.edu/~aprakash/papers/undo-tochi94.pdf)"
msgstr ""

#: ../undo.md:46
msgid "[Undoing Actions in Collaborative Work: Framework and Experience](https://www.eecs.umich.edu/techreports/cse/94/CSE-TR-196-94.pdf)"
msgstr ""

#: ../undo.md:48
msgid "[Implementing a Selective Undo Framework in Python](https://legacy.python.org/workshops/1997-10/proceedings/zukowski.html)"
msgstr ""

#: ../windows.md:1
msgid "Gaphor on Windows"
msgstr ""

#: ../windows.md:3
msgid "Gaphor can be installed as with our installer. Check out the [Gaphor download page](https://gaphor.org/download#windows) for details."
msgstr ""

#: ../windows.md:13
msgid "Choco"
msgstr ""

#: ../windows.md:15
msgid "We recommend using [Chocolately](https://chocolatey.org/) as a package manager in Windows."
msgstr ""

#: ../windows.md:18
msgid "To install it, open PowerShell as an administrator, then execute:"
msgstr ""

#: ../windows.md:24
msgid "To run local scripts in follow-on steps, also execute"
msgstr ""

#: ../windows.md:30
msgid "This allows for local PowerShell scripts to run without signing, but still requires signing for remote scripts."
msgstr ""

#: ../windows.md:33
msgid "Git"
msgstr ""

#: ../windows.md:35
msgid "To setup a development environment in Windows first install [Git](https://gitforwindows.org) by executing as an administrator:"
msgstr ""

#: ../windows.md:42
msgid "MSYS2"
msgstr ""

#: ../windows.md:44
msgid "The development environment in the next step needs MSYS2 installed to provide some Linux command line tools in Windows."
msgstr ""

#: ../windows.md:47
msgid "Keep PowerShell open as administrator and install [MSYS2](http://www.msys2.org/):"
msgstr ""

#: ../windows.md:53
msgid "GTK and Python with gvsbuild"
msgstr ""

#: ../windows.md:55
msgid "gvsbuild provides a Python script helps you build the GTK library stack for Windows using Visual Studio. By compiling GTK with Visual Studio, we can then use a standard Python development environment in Windows."
msgstr ""

#: ../windows.md:59
msgid "First we will install the gvsbuild dependencies:"
msgstr ""

#: ../windows.md:60
msgid "Visual C++ build tools workload for Visual Studio 2022 Build Tools"
msgstr ""

#: ../windows.md:61
msgid "Python"
msgstr ""

#: ../windows.md:63
msgid "Install Visual Studio 2022"
msgstr ""

#: ../windows.md:65
msgid "With your admin PowerShell terminal:"
msgstr ""

#: ../windows.md:71
msgid "Install the Latest Python"
msgstr ""

#: ../windows.md:73
msgid "In Windows, The full installer contains all the Python components and is the best option for developers using Python for any kind of project."
msgstr ""

#: ../windows.md:76
msgid "For more information on how to use the official installer, please see the [full installer instructions](https://docs.python.org/3/using/windows.html#windows-full). The default installation options should be fine for use with Gaphor."
msgstr ""

#: ../windows.md:80
msgid "Install the latest Python version using the [official installer](https://www.python.org/downloads/windows/)."
msgstr ""

#: ../windows.md:83
msgid "Open a PowerShell terminal as a normal user and check the python version:"
msgstr ""

#: ../windows.md:89
msgid "Install Graphviz"
msgstr ""

#: ../windows.md:91
msgid "Graphviz is used by Gaphor for automatic diagram formatting."
msgstr ""

#: ../windows.md:93
msgid "Install from Chocolately with administrator PowerShell:"
msgstr ""

#: ../windows.md:99
msgid "Restart your PowerShell terminal as a normal user and check that the dot command is available:"
msgstr ""

#: ../windows.md:106
msgid "Install pipx"
msgstr ""

#: ../windows.md:108
#: ../windows.md:116
msgid "From the regular user PowerShell terminal execute:"
msgstr ""

#: ../windows.md:114
msgid "Install gvsbuild"
msgstr ""

#: ../windows.md:122
msgid "Build GTK"
msgstr ""

#: ../windows.md:124
msgid "In the same PowerShell terminal, execute:"
msgstr ""

#: ../windows.md:129
msgid "Grab a coffee, the build will take a few minutes to complete."
msgstr ""

#: ../windows.md:131
msgid "Setup Gaphor"
msgstr ""

#: ../windows.md:133
msgid "In the same PowerShell terminal, clone the repository:"
msgstr ""

#: ../windows.md:140
msgid "Install Poetry"
msgstr ""

#: ../windows.md:146
msgid "Add GTK to your environmental variables:"
msgstr ""

#: ../windows.md:154
msgid "You can also edit your account's Environmental Variables to persist across PowerShell sessions."
msgstr ""

#: ../windows.md:157
msgid "Install Gaphor's dependencies"
msgstr ""

#: ../windows.md:162
msgid "Reinstall PyGObject and pycairo using gvsbuild wheels"
msgstr ""

#: ../windows.md:168
msgid "Launch Gaphor!"
msgstr ""

#: ../windows.md:175
msgid "Start a new PowerShell terminal, and set current directory to the project folder:"
msgstr ""

#: ../windows.md:180
msgid "Ensure that path environment variable is set:"
msgstr ""

#: ../windows.md:185
msgid "Start Visual Studio Code:"
msgstr ""

#: ../windows.md:190
msgid "To start the debugger, execute the following steps:"
msgstr ""

#: ../windows.md:191
msgid "Open `__main__.py` file from `gaphor` folder"
msgstr ""

#: ../windows.md:192
msgid "Add a breakpoint on line `main(sys.argv)`"
msgstr ""

#: ../windows.md:193
msgid "In the menu, select Run → Start debugging"
msgstr ""

#: ../windows.md:194
msgid "Choose Select module from the list"
msgstr ""

#: ../windows.md:195
msgid "Enter `gaphor` as module name"
msgstr ""

#: ../windows.md:197
msgid "Visual Studio Code will start the application in debug mode, and will stop at main."
msgstr ""

#: ../windows.md:199
msgid "Packaging for Windows"
msgstr ""

#: ../windows.md:201
msgid "In order to create an exe installation package for Windows, we utilize [PyInstaller](https://pyinstaller.org) which analyzes Gaphor to find all the dependencies and bundle them in to a single folder. We then use a custom bash script that creates a Windows installer using [NSIS](https://nsis.sourceforge.io/Main_Page) and a portable installer using [7-Zip](https://www.7-zip.org). To install them, open PowerShell as an administrator, then execute:"
msgstr ""

#: ../windows.md:213
msgid "Then build your installer using:"
msgstr ""
