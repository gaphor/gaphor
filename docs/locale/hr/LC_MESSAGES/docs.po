# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2023, Arjan Molenaar
# This file is distributed under the same license as the Gaphor package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: Gaphor 2.18.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-30 14:25-0500\n"
"PO-Revision-Date: 2025-01-14 12:17+0000\n"
"Last-Translator: Milo Ivir <mail@milotype.de>\n"
"Language-Team: Croatian <https://hosted.weblate.org/projects/gaphor/"
"docs-gaphor-org/hr/>\n"
"Language: hr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Weblate 5.10-dev\n"
"Generated-By: Babel 2.16.0\n"

#: ../changelog.rst:2
msgid "Change Log"
msgstr "Dnevnik promjena"

#: ../changelog.rst:4
msgid ""
"Our change log is with the project's source code on `GitHub "
"<https://github.com/gaphor/gaphor/blob/main/CHANGELOG.md>`_."
msgstr ""
"Naš dnevnik promjena s izvornim kodom projekta se nalazi na `GitHubu "
"<https://github.com/gaphor/gaphor/blob/main/CHANGELOG.md>`_."

#: ../changelog.rst:8
msgid "The latest version may not have been released yet."
msgstr "Najnovija verzija možda još nije objavljena."

#: ../coffee_machine.md:1
msgid "Tutorial: Coffee Machine"
msgstr "Vježba: aparat za kavu"

#: ../coffee_machine.md:4 ../first_model.md:4
msgid ""
"In this tutorial we refer to the different parts of the gaphor interface:"
" {ref}`Model Browser <getting_started:model browser>`, "
"[Toolbox](getting_started:toolbox), {ref}`Property Editor "
"<getting_started:property editor>`."
msgstr ""

#: ../coffee_machine.md:8
msgid ""
"Although the names should speak for themselves, you can check out the "
"[Getting Started](getting_started) page for more information about those "
"sections."
msgstr ""

#: ../coffee_machine.md:12 ../coffee_machine_concept.md:7
#: ../coffee_machine_logical.md:7
msgid "Introduction"
msgstr "Uvod"

#: ../coffee_machine.md:14
msgid ""
"In the bustling town of Antville, a colony of ants had formed a Systems "
"Engineering consulting company called AntSource. They value "
"collaboration, transparency, and community-driven engineering, and seeks "
"to empower their employees and customers through open communication and "
"participation in the systems engineering process."
msgstr ""

#: ../coffee_machine.md:20
msgid ""
"The engineers at AntSource all have nicknames that reflect the key "
"principles and concepts of their craft: Qual-ant, Reli-ant, Safe-ant, "
"Usa-ant, and Sust-ant. They were experts in designing and optimizing "
"complex systems, and they took pride in their work."
msgstr ""

#: ../coffee_machine.md:25
msgid ""
"One day, a new client approached AntSource with an unusual request. "
"Cappuccino, a cat who owned a popular coffee shop called Milk & Whiskers "
"Café, needed a custom espresso machine designed specifically for felines."
" Cats just love their coffee strong, with a creamy and smooth body and "
"topped with the perfect foamy layer of crema. The ants were intrigued by "
"the challenge and immediately set to work."
msgstr ""

#: ../coffee_machine.md:32
msgid ""
"Qual-ant was responsible for ensuring that the machine met all quality "
"standards and specifications, while Reli-ant was tasked with making sure "
"that the machine was dependable and would work correctly every time it "
"was used. Safe-ant designed the machine with safety in mind, ensuring "
"that it wouldn't cause harm to anyone who used it. Usa-ant designed the "
"machine to be easy and intuitive to use, while Sust-ant ensured that the "
"machine was environmentally friendly and sustainable. In this tutorial we"
" follow the adventures of AntSource to create the perfect kittie espresso"
" machine."
msgstr ""

#: ../coffee_machine.md:41
msgid ""
"![Two shots of espresso being pulled from an espresso machine.](images"
"/coffee-machine-double-shot.jpg)"
msgstr ""

#: ../coffee_machine.md:41
msgid "Two shots of espresso being pulled from an espressomachine."
msgstr ""

#: ../coffee_machine.md:44
msgid ""
"The first thing the ants did was to open Gaphor to the Greeter window and"
" start a new model with the _SysML_ template. You can now decide to "
"either:"
msgstr ""

#: ../coffee_machine.md:46
msgid ""
"recreate their work as part of this tutorial. For this, open the SysML "
"Example model shown at the bottom of the Greeter window"
msgstr ""

#: ../coffee_machine.md:48
msgid ""
"inspect the result of their work by opening the `coffee-machine` model "
"located in the `examples` folder."
msgstr ""

#: ../coffee_machine.md:51
msgid "Abstraction Levels"
msgstr "Razine apstrakcije"

#: ../coffee_machine.md:52
msgid ""
"Abstraction is a way of simplifying complex systems by focusing on only "
"the most important details, while ignoring the rest. It's a process of "
"reducing complexity by removing unnecessary details and highlighting the "
"key aspects of a system in order to focus on the problem to be solved. It"
" is the key to rigorous analysis of a system."
msgstr ""

#: ../coffee_machine.md:58
msgid ""
"To understand abstraction, think about a painting. When you look at a "
"painting, you see a representation of something - perhaps a person, a "
"landscape, or an object. The artist has simplified the real world into a "
"set of lines, shapes, and colors that represent the most important "
"details of the subject. In the same way, systems engineers, like our "
"friends the ants, use abstraction to represent complex systems by "
"breaking them down into their essential components and highlighting the "
"most important aspects."
msgstr ""

#: ../coffee_machine.md:66
msgid ""
"Abstraction levels refer to the different levels of detail at which a "
"system can be represented. These levels are used to break down complex "
"systems into smaller, more manageable parts that can be analyzed and "
"optimized. Said another way, abstraction levels group portions of a "
"design where similar types of questions are answered."
msgstr ""

#: ../coffee_machine.md:72
msgid ""
"There are typically three levels of abstraction in systems engineering "
"and these are the three levels used in the SysML template:"
msgstr ""

#: ../coffee_machine.md:75
msgid ""
"Concept Level: Sometimes also called Conceptual Level. Defines the "
"problem being solved. This is the highest level of abstraction, where the"
" system is described in terms of its overall purpose, goals, and "
"functions. At this level, the focus is on understanding the system's "
"requirements and how it will interact with other systems."
msgstr ""

#: ../coffee_machine.md:80
msgid ""
"Logical Level: Defines a technology-agnostic solution. This is the middle"
" level of abstraction, where the system is described in terms of its "
"structure and behavior. At this level, the focus is on how the system "
"components are organized and how they interact with each other."
msgstr ""

#: ../coffee_machine.md:84
msgid ""
"Technology Level: Sometimes also called Physical level. Defines the "
"detailed technical solution. This is the lowest level of abstraction, "
"where the system is described in terms of its components and their "
"properties. At this level, the focus is on the details of the system's "
"implementation."
msgstr ""

#: ../coffee_machine.md:89
msgid ""
"Each level of abstraction provides a different perspective on the system,"
" and each level is important for different aspects of system design and "
"analysis. For example, the conceptual level is important for "
"understanding the overall goals and requirements of the system, while the"
" physical level is important for understanding how the system will be "
"built and how it will interact with the environment."
msgstr ""

#: ../coffee_machine.md:96
msgid ""
"There is a fourth abstraction level called the Implementation Level that "
"isn't modeled, which is the concrete built system."
msgstr ""

#: ../coffee_machine.md:99
msgid ""
"In the upper left hand corner of Gaphor, the Model Browser shows the "
"three top level packages, dividing up the model in to these three "
"abstraction levels."
msgstr ""

#: ../coffee_machine.md:102
msgid ""
"![Top level packages of the SysML template.](images/coffee-machine-top-"
"level-packages.png)"
msgstr ""

#: ../coffee_machine.md:102
msgid "Top level packages of the SysMLtemplate."
msgstr ""

#: ../coffee_machine.md:105
msgid "Pillars"
msgstr ""

#: ../coffee_machine.md:107
msgid ""
"There are four pillars of SysML which help classify the types of diagrams"
" based on what they represent:"
msgstr ""

#: ../coffee_machine.md:110
msgid "Behavior: The functionality of a system"
msgstr ""

#: ../coffee_machine.md:111
msgid "Structure: How a system is formed using parts and connections"
msgstr ""

#: ../coffee_machine.md:112
msgid "Requirements: Written statements that constrain the system"
msgstr ""

#: ../coffee_machine.md:113
msgid "Parametric: Enforces mathematical rules across values in the system"
msgstr ""

#: ../coffee_machine.md:115
msgid ""
"If you want to learn more about these four pillars, there is a 30-minute "
"video by Rick Steiner called [The Four Pillars of "
"SysML](https://youtu.be/998UznK9ogY)."
msgstr ""

#: ../coffee_machine.md:118
msgid ""
"Since Parametric Diagrams are one of the least used diagram types in "
"SysML, we are going to only focus on the first three. The power of SysML "
"comes in being able to make relationships between these three pillars. "
"For example, by allocating behavior like an activity to an element of the"
" structure like a block."
msgstr ""

#: ../coffee_machine.md:123
msgid ""
"If you expand the top-level Abstraction Level packages in the Model "
"Browser, each one contains three more packages, one for each pillar. It "
"is in these packages that we will start to build up the design for the "
"espresso machine."
msgstr ""

#: ../coffee_machine.md:127
msgid ""
"![Three pillar packages nested under each abstraction level "
"package.](images/coffee-machine-pillars.png)"
msgstr ""

#: ../coffee_machine.md:127
msgid "Three pillar packages nested under each abstraction levelpackage."
msgstr ""

#: ../coffee_machine.md:130
msgid "Table of Contents"
msgstr "Sadržaj"

#: ../coffee_machine_concept.md:5
msgid "Coffee Machine: Concept Level"
msgstr ""

#: ../coffee_machine_concept.md:9
msgid ""
"The concept level defines the problem we are trying to solve. For the "
"espresso machine, we are going to use diagrams at this abstraction level "
"to answer questions like:"
msgstr ""

#: ../coffee_machine_concept.md:12
msgid "Who will use the machine and what are their goals while using it?"
msgstr ""

#: ../coffee_machine_concept.md:13
msgid "What sequence of events will a person take while operating the machine?"
msgstr ""

#: ../coffee_machine_concept.md:14
msgid ""
"What are the key features and capabilities required for the machine to "
"perform its intended function?"
msgstr ""

#: ../coffee_machine_concept.md:15
msgid ""
"What are the design constraints and requirements that must be considered "
"when designing the machine?"
msgstr ""

#: ../coffee_machine_concept.md:16
msgid ""
"What are the key performance metrics that the machine must meet in order "
"to be considered successful?"
msgstr ""

#: ../coffee_machine_concept.md:17
msgid ""
"How will the machine fit into the larger context of the café, and how "
"will it interact with other systems and components within the café?"
msgstr ""

#: ../coffee_machine_concept.md:19
msgid ""
"What are the needs of others like those marketing, selling, "
"manufacturing, or buying the machine?"
msgstr ""

#: ../coffee_machine_concept.md:21
msgid ""
"At this level, the focus is on understanding the big picture of the "
"espresso machine and its role within the café system. The answers to "
"these questions will help guide the design and development of the machine"
" at the logical and technology levels of abstraction."
msgstr ""

#: ../coffee_machine_concept.md:26
msgid "Use Case Diagram"
msgstr "Dijagram slučaja primjene"

#: ../coffee_machine_concept.md:28
msgid ""
"First the ants work on the behavior of the system. Expand the Behavior "
"package in the Model Browser and double-click on the diagram named Use "
"Cases."
msgstr ""

#: ../coffee_machine_concept.md:31
msgid ""
"A use case diagram is a type of visual representation used in systems "
"engineering to describe the functional requirements of a system, such as "
"an espresso machine. In the context of the espresso machine, a use case "
"diagram would be used to identify and define the different ways in which "
"the machine will be used by its users, such as the café staff and "
"customers."
msgstr ""

#: ../coffee_machine_concept.md:37
msgid ""
"The diagram would typically include different actors or users, such as "
"the barista, the customer, and possibly a manager or maintenance "
"technician. It would also include different \"use cases\" or scenarios, "
"which describe the different actions that the users can take with the "
"machine, such as placing an order, making an espresso, or cleaning the "
"machine."
msgstr ""

#: ../coffee_machine_concept.md:43
msgid ""
"The use case diagram helps to ensure that all the necessary functional "
"requirements of the espresso machine are identified and accounted for, "
"and that the system is designed to meet the needs of its users. It can "
"also be used as a communication tool between the different stakeholders "
"involved in the development of the machine, such as the ants and "
"Cappuccino the cat."
msgstr ""

#: ../coffee_machine_concept.md:49
msgid "The ants need your help updating the diagrams, so let's get started:"
msgstr ""

#: ../coffee_machine_concept.md:51
msgid ""
"Double-click on the actor to pop up the rename dialog, and replace User "
"with Barista."
msgstr ""

#: ../coffee_machine_concept.md:53
msgid "Update the name of the oval Use Case from Use Case #1 to Brew espresso."
msgstr ""

#: ../coffee_machine_concept.md:54
msgid "Update the name of the rectangle Block from Feature to Espresso Machine"
msgstr ""

#: ../coffee_machine_concept.md:56
msgid ""
"A barista interacts with the espresso machine. The barista is provided a "
"simple interface with a few push buttons."
msgstr ""

#: ../coffee_machine_concept.md:59
msgid ""
"In this particular use case diagram, we have one actor named Barista and "
"one use case called Brew espresso, which is allocated to a block called "
"Espresso Machine. The actor, in this case, is a cat barista who interacts"
" with the system (an espresso machine) to accomplish a particular task, "
"which is brewing espresso."
msgstr ""

#: ../coffee_machine_concept.md:65
msgid ""
"Use case diagram showing an actor named Barista and a use case called "
"Brew espresso"
msgstr ""

#: ../coffee_machine_concept.md:70
msgid ""
"The use case Brew espresso represents a specific functionality or action "
"that the system (the Espresso Machine block) can perform. It describes "
"the steps or interactions necessary to complete the task of brewing "
"espresso, such as selecting the appropriate settings, starting the "
"brewing process, and stopping the process once it's complete."
msgstr ""

#: ../coffee_machine_concept.md:76
msgid ""
"The use case diagram shows the relationship between the actor and the use"
" case. It is represented by an oval shape with the use case name inside "
"and an association with the actor. The association represents the "
"interaction from the actor to the use case."
msgstr ""

#: ../coffee_machine_concept.md:81
msgid "Domain Diagram"
msgstr "Dijagram domena"

#: ../coffee_machine_concept.md:83
msgid ""
"A domain diagram is a graphical representation of the concepts, terms, "
"and relationships within a specific domain. In the case of a coffee shop,"
" a domain diagram could represent the key elements and relationships "
"within the coffee shop domain."
msgstr ""
"Dijagram domena je grafičko predstavljanje koncepata, pojmova i odnosa "
"unutar određene domene. U slučaju prodavaonica kave, dijagram domena "
"mogao bi predstavljati ključne elemente i odnose unutar domena "
"prodavaonica kave."

#: ../coffee_machine_concept.md:88
msgid ""
"The following is a domain diagram that builds upon the context diagram "
"with additional blocks:"
msgstr ""
"Sljedeće je dijagram domena koji se nadovezuje na kontekstni dijagram s "
"dodatnim blokovima:"

#: ../coffee_machine_concept.md:90
msgid "Barista"
msgstr "Barista"

#: ../coffee_machine_concept.md:91
msgid "Coffee Machine"
msgstr "Aparat za kavu"

#: ../coffee_machine_concept.md:92
msgid "Roasted Coffee"
msgstr "Kava u zrnu"

#: ../coffee_machine_concept.md:93
msgid "Coffee Grinder"
msgstr "Mlinac za kavu"

#: ../coffee_machine_concept.md:94
msgid "Water Supply"
msgstr "Opskrba vodom"

#: ../coffee_machine_concept.md:95
msgid "Customer"
msgstr "Mušterija"

#: ../coffee_machine_concept.md:97
msgid ""
"Each block in the Block Definition Diagram (bdd) represents a key concept"
" within the coffee shop domain, and the containment relationship is used "
"between the domain and the blocks to show that they are part of the "
"domain."
msgstr ""
"Svaki blok u dijagramu definicija blokova predstavlja ključni koncept "
"unutar domene prodavaonice kave, a odnos se koristi između domene i "
"blokova kako bi se pokazalo da su dio domene."

#: ../coffee_machine_concept.md:101
msgid ""
"Block Definition Diagram showing hierarchy of blocks in the Coffee Shop "
"domain"
msgstr ""
"Dijagram definicije blokova koji prikazuje hijerarhiju blokova u domeni "
"prodavaonice kave"

#: ../coffee_machine_concept.md:106
msgid ""
"The Barista block is responsible for preparing and serving the coffee to "
"the customers. The Roasted Coffee block contains the types of coffee "
"available for the barista to use. The Coffee Grinder block grinds the "
"roasted coffee beans to the desired consistency before brewing. The Water"
" Supply block contains the water source for the coffee machine, and "
"finally the Customer block represents the person who orders and receives "
"the coffee."
msgstr ""

#: ../coffee_machine_concept.md:113
msgid ""
"The ants need more of your help to rename the Feature Domain diagram and "
"update it so that it matches the one above. Make sure that \"Profile: "
"SysML\" is selected in the top-left corner of the Gaphor user interface. "
"The names of the blocks can be changed directly in the diagram, but the "
"name of the bdd can only be changed in the Model Browser. In the "
"Structure package, right-click on the Blocks with the B symbol and rename"
" them from the context menu. Also remember that you can use [auto-"
"layout](first_model.md#adding-relations) to align and distribute all "
"elements."
msgstr ""

#: ../coffee_machine_concept.md:121
msgid ""
"The domain diagram provides a high-level view of the coffee shop domain "
"and the key concepts and relationships involved in it. It can be a useful"
" tool for understanding the relationships between different elements of "
"the domain and for communicating these relationships to others."
msgstr ""

#: ../coffee_machine_concept.md:126
msgid "Context Diagram"
msgstr "Dijagram konteksta"

#: ../coffee_machine_concept.md:128
msgid ""
"The context diagram is a high-level view of the system, and it shows its "
"interaction with external entities. In the case of a coffee machine, a "
"context diagram provides a clear and concise representation of the system"
" and its interactions with the external environment."
msgstr ""

#: ../coffee_machine_concept.md:133
msgid ""
"The context diagram for a coffee machine shows the coffee machine as the "
"system at the center, with all its external entities surrounding it. The "
"external entities include the barista, the power source, the coffee "
"grinder, and the water source."
msgstr ""

#: ../coffee_machine_concept.md:138
msgid ""
"Block definition diagram showing context of the coffee shop with external"
" entities"
msgstr ""

#: ../coffee_machine_concept.md:143
msgid ""
"The ants need more of your help to rename the Feature Context diagram and"
" update it so that it matches the one above. To create the specific "
"arrows shown, use an Association entity, then toggle Enable Item Flow to "
"on for that association and fill in the Item Property field."
msgstr ""

#: ../coffee_machine_concept.md:148
msgid ""
"Overall, the context diagram for a coffee machine provides a high-level "
"view of the system and its interactions with external entities. It is a "
"useful tool for understanding the system and its role in the broader "
"environment."
msgstr ""

#: ../coffee_machine_concept.md:152
msgid "Concept Requirements"
msgstr "Koncepcijski uvjeti"

#: ../coffee_machine_concept.md:153
msgid ""
"Concept requirements are typically collected by analyzing the needs of "
"the stakeholders involved in the development of the coffee machine. This "
"involves identifying and gathering input from various stakeholders, such "
"as the barista, the other engineers working on the product, "
"manufacturing, and service."
msgstr ""

#: ../coffee_machine_concept.md:158
msgid ""
"To collect concept requirements, stakeholders may be asked questions "
"about what they want the coffee machine to do, what features it should "
"have, and what problems it should solve. They may also be asked to "
"provide feedback on existing coffee machines to identify areas where "
"improvements could be made."
msgstr ""

#: ../coffee_machine_concept.md:163
msgid ""
"Once the needs of the stakeholders have been gathered, they can be "
"analyzed to identify common themes and requirements. This information can"
" then be used to develop the concept requirements for the coffee machine,"
" which serve as a starting point for the design process."
msgstr ""

#: ../coffee_machine_concept.md:168
msgid ""
"The following are some concept requirements for a coffee machine that "
"addresses a water tank, heat-up time, and HMI button:"
msgstr ""

#: ../coffee_machine_concept.md:171
msgid ""
"Water Tank: The coffee machine shall have a water tank of sufficient size"
" to make multiple cups of coffee before needing a refill. The water tank "
"should be easy to access and fill."
msgstr ""

#: ../coffee_machine_concept.md:175
msgid ""
"Heat-up Time: The coffee machine shall have a heat-up time of no more "
"than 10 minutes from the time the user turns on the machine until it's "
"ready to brew coffee."
msgstr ""

#: ../coffee_machine_concept.md:179
msgid ""
"1 Cup Button: The coffee machine shall have an HMI with a 1 cup brew "
"button to make it easy for the user to select the amount of coffee they "
"want to brew."
msgstr ""

#: ../coffee_machine_concept.md:182
msgid "Concept requirements for water tank, heat-up time, and HMI button"
msgstr ""

#: ../coffee_machine_concept.md:187
msgid ""
"Help the ants update the Concept Requirements diagram with these "
"requirements."
msgstr ""

#: ../coffee_machine_concept.md:190
msgid ""
"Throughout the design process, the concept requirements will be refined "
"and expanded upon as more information becomes available and the needs of "
"the stakeholders become clearer. This iterative process ensures that the "
"final design of the coffee machine meets the needs of all stakeholders "
"and delivers a high-quality product."
msgstr ""

#: ../coffee_machine_logical.md:5
msgid "Coffee Machine: Logical Level"
msgstr ""

#: ../coffee_machine_logical.md:9
msgid ""
"At the logical Level, we'll define a technology-agnostic solution. This "
"is the middle level of abstraction, where the system is described in "
"terms of its structure and behavior. At this level, the focus is on how "
"the system components are organized and how they interact with each "
"other."
msgstr ""

#: ../coffee_machine_logical.md:14
msgid "Functional Boundary Behavior"
msgstr "Funkcionalno ponašanje granica"

#: ../coffee_machine_logical.md:16
msgid ""
"A Functional Boundary Behavior diagram is a type of SysML Activity "
"diagram used to show the interactions between different logical blocks. "
"The swim lanes divide the diagram into different areas, each representing"
" a different functional block or component."
msgstr ""

#: ../coffee_machine_logical.md:21
msgid ""
"In this case, the diagram includes swimlanes for the HMI, Controller, "
"Water Pump, Water Heater, Group Head, and Portafilter. The HMI receives "
"the button press from the barista and then sends a command to the "
"Controller. The Controller then commands the Water Heater to start, and "
"once the water has reached the correct temperature, the Controller "
"commands the Pump to start. The water would then be pumped through the "
"Group Head and into the Portafilter, brewing the coffee. The diagram "
"shows the flow of information and actions between the different logical "
"blocks, and help to ensure that the behavior that each block provides is "
"properly connected and integrated into the system."
msgstr ""

#: ../coffee_machine_logical.md:36
msgid ""
"From the Logical package, expand the Behavior package in the Model "
"Browser and double-click on the diagram named Functional Boundary "
"Behavior. Additional swimlanes can be added by clicking on the swimlanes "
"and add additional partitions in the Property Editor. The name of the "
"partition before the colon can also be changed in the Property Editor. "
"The names of the Blocks can be changed in the Structure package, as was "
"explained in the [Domain Diagram section](coffee_machine_concept.md"
"#domain-diagram)."
msgstr ""

#: ../coffee_machine_logical.md:43
msgid ""
"Additional Object Flows, pins (pay attention to inputs vs outputs), and "
"actions can be created using the Toolbox. The Parameter Nodes which are "
"attached to the Activity on the very left and right of the diagram are "
"created and renamed created by clicking on the Activity and modifying "
"them in the Property Editor."
msgstr ""

#: ../coffee_machine_logical.md:48
msgid "Logical State Machine"
msgstr "Logički automat konačnih stanja"

#: ../coffee_machine_logical.md:50
msgid ""
"The logical state machine for the coffee machine is a diagram that shows "
"the different states and transitions that the machine goes through to "
"make coffee. In this case, there are two main states: On and Off."
msgstr ""

#: ../coffee_machine_logical.md:54
msgid ""
"When the coffee machine is turned on, it enters the On state. Inside the "
"On state, there are some substates, starting with the heat water state. "
"The machine will transition from the heat water state to the ready state "
"when the temperature reaches the set point."
msgstr ""

#: ../coffee_machine_logical.md:59
msgid ""
"Once the machine is in the ready state, the user can select one or two "
"cup mode. Depending on the mode selected, the machine will transition to "
"either the one cup mode or two cup mode."
msgstr ""

#: ../coffee_machine_logical.md:63
msgid "State machine diagram showing logical states including on and off"
msgstr ""

#: ../coffee_machine_logical.md:68
msgid ""
"Open the Logical States diagram and add a region to the On state via the "
"Property Editor. Next use the Toolbox to add the additional substates and"
" transition. Guards for the transitions, shown surrounded by brackets, "
"are added by selecting the transition and adding the guard in the "
"Property Editor."
msgstr ""

#: ../coffee_machine_logical.md:73
msgid ""
"The logical state machine diagram for the coffee machine shows these "
"states, and the different conditions that trigger the transitions. This "
"helps the ants designing the machine to understand how the coffee machine"
" works and ensure that it functions properly."
msgstr ""

#: ../coffee_machine_logical.md:78
msgid "Logical Structure"
msgstr "Logička struktura"

#: ../coffee_machine_logical.md:80
msgid ""
"The logical structure shows which logical blocks the espresso machine is "
"made up of. Since we are at the logical level, these blocks should be "
"agnostic to technical choices."
msgstr ""

#: ../coffee_machine_logical.md:84
msgid "The following logical blocks are part of the espresso machine:"
msgstr ""

#: ../coffee_machine_logical.md:85
msgid "Water tank"
msgstr "Rezervoar za vodu"

#: ../coffee_machine_logical.md:86
msgid "Water pump"
msgstr "Pumpa za vodu"

#: ../coffee_machine_logical.md:87
msgid "Water heater"
msgstr "Grijač za vodu"

#: ../coffee_machine_logical.md:88
msgid "Portafilter"
msgstr "Portafilter"

#: ../coffee_machine_logical.md:89
msgid "Controller"
msgstr "Kontroler"

#: ../coffee_machine_logical.md:90
msgid "Group head"
msgstr "Priključak za portafilter"

#: ../coffee_machine_logical.md:91
msgid "HMI"
msgstr "HMI sučelje"

#: ../coffee_machine_logical.md:93
msgid ""
"Each block represents a key portion of the espresso machine, and the "
"containment relationship is used between the espresso machine and its "
"logical parts."
msgstr ""

#: ../coffee_machine_logical.md:97
msgid "Block definition diagram showing the coffee machine and its logical parts"
msgstr ""

#: ../coffee_machine_logical.md:102
msgid ""
"Water tank: The water tank is a container that stores the water used in "
"the espresso machine. It typically has a specific capacity and is "
"designed for easy filling and cleaning. The water tank supplies water to "
"the water pump when needed."
msgstr ""

#: ../coffee_machine_logical.md:107
msgid ""
"Water pump: The water pump is responsible for drawing water from the "
"water tank and creating the necessary pressure to force the water through"
" the coffee grounds in the portafilter. It plays a crucial role in the "
"espresso extraction process by ensuring a consistent flow of water."
msgstr ""

#: ../coffee_machine_logical.md:112
msgid ""
"Water heater: The water heater, also known as the boiler or heating "
"element, is responsible for heating the water to the optimal temperature "
"for brewing espresso. It maintains the water at the desired temperature "
"to ensure proper extraction and flavor."
msgstr ""

#: ../coffee_machine_logical.md:117
msgid ""
"Portafilter: The portafilter is a detachable handle-like device that "
"holds the coffee grounds. It is attached to the espresso machine and acts"
" as a filter holder. The water from the pump is forced through the coffee"
" grounds in the portafilter to extract the flavors and create the "
"espresso."
msgstr ""

#: ../coffee_machine_logical.md:122
msgid ""
"Controller: The controller, often a microcontroller or a dedicated "
"circuit board, is the brain of the espresso machine. It manages and "
"coordinates the operation of various components, such as the water pump, "
"water heater, and HMI, to ensure the correct brewing process. It monitors"
" and controls temperature, pressure, and other parameters to maintain "
"consistency and deliver the desired results."
msgstr ""

#: ../coffee_machine_logical.md:129
msgid ""
"Group head: The group head is a part of the espresso machine where the "
"portafilter attaches. It provides a secure connection between the "
"portafilter and the machine, allowing the brewed espresso to flow out of "
"the portafilter and into the cup. The group head also helps to maintain "
"proper temperature and pressure during the brewing process."
msgstr ""

#: ../coffee_machine_logical.md:135
msgid ""
"HMI (Human-Machine Interface): The HMI is the user interface of the "
"espresso machine. It provides a means for the user to interact with the "
"machine, usually through buttons, switches, or a touchscreen. The HMI "
"allows the user to select different brewing options, adjust settings, and"
" monitor the status of the machine. It provides feedback and displays "
"information related to the brewing process, such as brewing time, "
"temperature, and cup size selection."
msgstr ""

#: ../coffee_machine_logical.md:142
msgid ""
"We didn't make any technical choices at this time, for example we didn't "
"specify which type of controller, the pump capacity, or the model of the "
"group head. These details will be defined once we get to the Technology "
"level."
msgstr ""

#: ../coffee_machine_logical.md:146
msgid ""
"The ants need more of your help to update the Logical Structure diagram "
"so that it matches the one above."
msgstr ""

#: ../coffee_machine_logical.md:149
msgid "Logical Boundary"
msgstr "Logička granica"

#: ../coffee_machine_logical.md:151
msgid ""
"The Logical Boundary is a type of Internal Block Diagram that represents "
"the internal structure of a system, illustrating the relationships "
"between its internal components or blocks. It helps to visualize how "
"these blocks interact and exchange information within the system. The "
"term boundary used here means a clear box view inside the espresso "
"machine at the logical boundary. It uses part properties of the blocks "
"that were in the Logical Structure diagram above."
msgstr ""

#: ../coffee_machine_logical.md:158
msgid "Internal block diagram showing the clear box view of the espresso machine"
msgstr ""

#: ../coffee_machine_logical.md:163
msgid ""
"The interactions between the part properties inside the espresso machine "
"are shown as ItemFlows on the Connectors."
msgstr ""

#: ../coffee_machine_logical.md:166
msgid "Water: Represents the flow of water from the water tank to the water pump."
msgstr ""

#: ../coffee_machine_logical.md:167
msgid ""
"On/Off: Represents the command or signal to turn the espresso machine on "
"or off."
msgstr ""

#: ../coffee_machine_logical.md:168
msgid ""
"Volume Adjustment: Represents the user-selected volume adjustment for the"
" coffee output."
msgstr ""

#: ../coffee_machine_logical.md:169
msgid ""
"Pressurized Water: Represents the water flow under pressure for "
"extracting coffee."
msgstr ""

#: ../coffee_machine_logical.md:170
msgid ""
"Heat Command: Represents the command or signal to activate the water "
"heater and initiate the heating process."
msgstr ""

#: ../coffee_machine_logical.md:171
msgid ""
"Temperature: Represents the feedback signal indicating the current "
"temperature of the water."
msgstr ""

#: ../coffee_machine_logical.md:172
msgid ""
"Hot Pressurized Water: Represents the pressurized hot water for brewing "
"coffee."
msgstr ""

#: ../coffee_machine_logical.md:173
msgid ""
"Coffee Water Mixture: Represents the mixture of hot water and coffee "
"grounds during the brewing process."
msgstr ""

#: ../coffee_machine_logical.md:177
msgid ""
"Notice that we aren't actually showing anything entering or leaving the "
"boundary of the espresso machine, like the input from the barista or the "
"resulting coffee. Gaphor doesn't current support adding ports to the "
"boundary of an internal block diagram, but hopefully we'll be able to add"
" support soon!"
msgstr ""

#: ../coffee_machine_logical.md:183
msgid ""
"These item flows capture the essential interactions and exchanges within "
"the espresso machine. They represent the flow of water, control signals, "
"temperature feedback, and the resulting coffee water mixture. The item "
"flows illustrate the sequence and connections between the various "
"components, allowing for a better understanding of how the machine "
"functions as a whole."
msgstr ""

#: ../coffee_machine_logical.md:189
msgid ""
"Once again, help the ants by updating the Logical Boundary diagram so "
"that it matches the one above."
msgstr ""

#: ../coffee_machine_logical.md:192
msgid "Logical Requirements"
msgstr "Logički uvjeti"

#: ../coffee_machine_logical.md:193
msgid ""
"Logical requirements refer to the high-level specifications and "
"functionalities that describe what a system or product should accomplish "
"without specifying how it will be implemented. These requirements focus "
"on the desired outcomes and behavior of the system rather than the "
"specific technical details."
msgstr ""

#: ../coffee_machine_logical.md:198
msgid ""
"We have also already defined the behavior and the structure of the "
"espresso machine at the logical level, so the main task now is to "
"translate that information in to words as requirement statements."
msgstr ""

#: ../coffee_machine_logical.md:203
msgid ""
"If you need help writing good requirements, the [INCOSE Guide to Needs "
"and Requirements](https://portal.incose.org/commerce/store?productId"
"=INCOSE-GUIDENEEDSREQ) and the [Easy Approach to Requirements "
"Syntax](https://alistairmavin.com/ears/) are recommended resources."
msgstr ""

#: ../coffee_machine_logical.md:209
msgid ""
"We use the Derive Requirement relation from the Logical Requirement to "
"the Concept Requirements that we previously created. The direction of "
"this relationship is in the derived from direction, which might be "
"opposite to what you are used to where the higher level requirement "
"points to the lower level requirement."
msgstr ""

#: ../coffee_machine_logical.md:215
msgid "Here we derive two requirements:"
msgstr "Ovdje izvodimo dva uvjeta:"

#: ../coffee_machine_logical.md:217
msgid "Controller commands heat up"
msgstr ""

#: ../coffee_machine_logical.md:218
msgid "900kPa of water pressure"
msgstr ""

#: ../coffee_machine_logical.md:220
msgid ""
"Logical requirements for the controller command and the water pressure "
"derived from concept requirements"
msgstr ""

#: ../coffee_machine_logical.md:225
msgid ""
"Update the Logical Requirements diagram with these requirements. If you "
"want, you can also develop additional requirements for all the logical "
"behavior and structure that we specified in the other diagrams."
msgstr ""

#: ../coffee_machine_wrapup.md:1
msgid "Coffee Machine: Summary"
msgstr ""

#: ../coffee_machine_wrapup.md:3
msgid ""
"The Technology Level design uses a very similar approach as the Logical "
"Level. Work on the behavior, structure, and then the requirements. At "
"this level, you will now specify all the design details for how this "
"specific espresso machine will work. We'll leave this exercise up to you "
"to do, and we would be glad to have contributions of this design back in "
"to this tutorial if you are interested in getting involved in Gaphor."
msgstr ""

#: ../coffee_machine_wrapup.md:10
msgid ""
"As they worked, the ants encountered numerous challenges. They had to "
"ensure that the machine was safe, efficient, and easy to use, all while "
"meeting the unique needs of their feline client. But with their deep "
"understanding of systems engineering and their commitment to key "
"principles and concepts, they were able to overcome these challenges and "
"design an exceptional espresso machine."
msgstr ""

#: ../coffee_machine_wrapup.md:17
msgid ""
"In the end, Cappuccino was thrilled with the machine, which worked "
"flawlessly and was a big hit with his customers. He was so impressed with"
" the ants' work that he offered them a long-term contract to design all "
"of his café's systems. The ants were proud of their success, knowing that"
" it was all thanks to their expertise and deep understanding of systems "
"engineering principles. They had proven that, with the right tools and "
"approach, anything is possible."
msgstr ""

#: ../connect.md:1
msgid "Connection Protocol"
msgstr "Protokol povezivanja"

#: ../connect.md:3
msgid ""
"In Gaphor, if a connection is made on a diagram between an element and a "
"relationship, the connection is also made at semantic level (the model). "
"From a GUI point of view, a button release event is what kicks of the "
"decision whether the connection is allowed."
msgstr ""
"U Gaphoru, ako se u dijagramu uspostavi veza između elementa i odnosa, "
"veza se također uspostavlja na semantičkoj razini (model). Iz GUI točke "
"gledišta, događaj otpuštanja gumba je ono što pokreće odluku o dopuštenju"
" veze."

#: ../connect.md:12
msgid ""
"The check if a connection is allowed should also check if it is valid to "
"create a relation to/from the same element (like associations, but not "
"generalizations)."
msgstr ""
"Provjera dopuštenja veze također treba provjeriti je li valjano stvoriti "
"odnos prema/od istog elementa (poput asocijacija, ali ne generalizacija)."

#: ../container.md:1
msgid "Gaphor in a Container"
msgstr "Gaphor u kontejneru"

#: ../container.md:3
msgid ""
"Instead of setting up a development environment locally, the easiest way "
"to contribute to the project is using GitHub Codespaces."
msgstr ""
"Umjesto postavljanja lokalnog razvojnog okruženja, najlakši način "
"doprinositi projektu je putem GitHub Codespaces."

#: ../container.md:6
msgid "GitHub Codespaces"
msgstr "GitHub Codespaces"

#: ../container.md:8
msgid "Follow these steps to open Gaphor in a Codespace:"
msgstr "Za otvaranje Gaphora u Codespace, slijedi ove korake:"

#: ../container.md:9
msgid "Navigate to https://github.com/gaphor/gaphor"
msgstr "Idi na https://github.com/gaphor/gaphor"

#: ../container.md:10
msgid ""
"Click the Code drop-down menu and select the **Open with Codespaces** "
"option."
msgstr ""
"Pritisni padajući izbornik za kod i odaberi opciju **Otvori pomoću "
"Codespaces**."

#: ../container.md:11
msgid "Select **+ New codespace** at the bottom on the pane."
msgstr "Odaberi **+ Novi codespace** na dnu ploče."

#: ../container.md:13
msgid ""
"For more info, check out the [GitHub "
"documentation](https://docs.github.com/en/free-pro-team@latest/github"
"/developing-online-with-"
"codespaces/creating-a-codespace#creating-a-codespace)."
msgstr ""
"Za daljnje informacije pogledaj [GitHub "
"documentation](https://docs.github.com/en/free-pro-team@latest/github"
"/developing-online-with-"
"codespaces/creating-a-codespace#creating-a-codespace)."

#: ../container.md:15
msgid "Remote access to Gaphor graphic window with Codespaces"
msgstr ""

#: ../container.md:17
msgid ""
"When using Codespaces, chances are that you also want to interact with "
"the graphical window of Gaphor."
msgstr ""

#: ../container.md:20
msgid ""
"This is facilitated in Gaphor by use of container feature called "
"[desktop-lite](https://github.com/devcontainers/features/tree/main/src"
"/desktop-lite). This feature is activated by default in the Gaphor's "
"[devcontainer.json](https://github.com/gaphor/gaphor/blob/main/.devcontainer/devcontainer.json)"
" file."
msgstr ""

#: ../container.md:22
msgid ""
"Notice the webPort/vncPort and password values. These are used in "
"subsequent steps."
msgstr ""

#: ../container.md:33
msgid "There are two options:"
msgstr ""

#: ../container.md:34
msgid "Using a local VNC viewer"
msgstr ""

#: ../container.md:35
msgid "Download and install VNC viewer of your choice (e.g. realvnc)"
msgstr ""

#: ../container.md:36
msgid ""
"Specify remote hostname as *localhost* and port as *5901* and connect "
"VNC. The port number should be same as specified in attribute *vncPort*"
msgstr ""

#: ../container.md:37
msgid ""
"Upon "
"[debugging/running](https://github.com/gaphor/gaphor/blob/main/.devcontainer/devcontainer.json)"
" Gaphor the familiar Graphic window should be displayed in VNC view"
msgstr ""

#: ../container.md:39
msgid "Using noVNC viewer on the Browser"
msgstr ""

#: ../container.md:40
msgid "This is based on [noVNC](https://novnc.com/info.html) application"
msgstr ""

#: ../container.md:41
msgid ""
"Open the browser on your local machine and give address as "
"*http://127.0.0.1:6080/*. The port number should be same as specified in "
"attribute *webPort*"
msgstr ""

#: ../container.md:42
msgid ""
"A noVNC window will open, click on Connect and provide password as "
"*vscode*. The password should be same as specified in attribute "
"*password*"
msgstr ""

#: ../container.md:43
msgid ""
"Upon "
"[debugging/running](https://github.com/gaphor/gaphor/blob/main/.devcontainer/devcontainer.json)"
" Gaphor the familiar Graphic window should be displayed in noVNC view on "
"Browser"
msgstr ""

#: ../contribute.md:1
msgid "Contribute to Gaphor"
msgstr "Doprinesi Gaphoru"

#: ../contribute.md:3
msgid ""
"Would you like to contribute to the development of Gaphor? If you think "
"this is only something for experienced developers, please reconsider, "
"there are plenty of ways to contribute to Gaphor, no matter your level of"
" experience or skill set."
msgstr ""

#: ../contribute.md:7
msgid ""
"You can help to support Gaphor in your language. You can do that on "
"[Weblate](https://hosted.weblate.org/engage/gaphor/), directly from your "
"browser. This service will periodically create [Pull "
"Requests](https://docs.github.com/en/pull-requests/collaborating-with-"
"pull-requests/proposing-changes-to-your-work-with-pull-requests/about-"
"pull-requests) for Gaphor with updated translations."
msgstr ""

#: ../contribute.md:13
msgid ""
"It is also very nice if you create your own content around Gaphor. Think "
"about blog posts, videos, and conference talks. When you created "
"something, please drop us a line, so we can add it to the "
"[Tutorials](https://gaphor.org/tutorials) page on the website."
msgstr ""

#: ../contribute.md:17
msgid ""
"If you want to contribute code, a good starting point is this site. It "
"contains a lot of information on how Gaphor is build, especially in the "
"*Concepts* section."
msgstr ""

#: ../contribute.md:20
msgid ""
"Some issues are labeled with *first-timers-only*. Those issues are a good"
" starting point to make yourself familiar with the code and code style."
msgstr ""

#: ../contribute.md:23
msgid ""
"It's always a good idea to create an "
"[issue](https://github.com/gaphor/gaphor/issues) or start a "
"[discussion](https://github.com/gaphor/gaphor/discussions) if you want to"
" build something for which there is no issue yet. That way you can assure"
" that your idea is implemented in a way consistent with the application, "
"and it increases the chance your work will be accepted."
msgstr ""

#: ../contribute.md:28
msgid ""
"You'll need to [fork](https://docs.github.com/en/pull-requests"
"/collaborating-with-pull-requests/working-with-forks/fork-a-repo) Gaphor "
"and set up a [development environment](linux.md) ([macOS](macos.md), "
"[Windows](windows.md))."
msgstr ""

#: ../contribute.md:33
msgid ""
"In our pipeline we do a couple of quality checks. We strongly recommend "
"that you [install pre-commit](https://pre-commit.com/) and its git hook "
"scripts, so your PR does build on our build environment."
msgstr ""

#: ../design_principles.md:1
msgid "Design Principles"
msgstr "Načela konstruiranja"

#: ../design_principles.md:3
msgid ""
"Gaphor has been around for quite a few years. In those years we (the "
"Gaphor developers) learned a few things on how to build it. Gaphor tries "
"to be easily accessible for novice users as well as a useful tool for "
"more experienced users."
msgstr ""
"Gaphor postoji već nekoliko godina. Tijekom tih godina su programeri "
"Gaphora naučili neke stvari o tome kako ga izgraditi. Gaphor je "
"namijenjen za početnike i za iskusnije korisnike."

#: ../design_principles.md:7
msgid ""
"Gaphor is not your average editor. It's a modeling environment. This "
"implies there is a language underpinning the models. Languages adhere to "
"rules and Gaphor tries to follow those rules."
msgstr ""
"Gaphor nije običan uređivač. Gaphor je okruženje za modeliranje. To znači"
" da postoji jezik na kojem se modeli temelje. Jezici se pridržavaju "
"pravila i Gaphor se pokušava pridržavati tih pravila."

#: ../design_principles.md:11
msgid ""
"Usability is very important. When you're new to Gaphor, it should be easy"
" to find your way around. Minimal knowledge of UML should at least allow "
"you to create a class diagram."
msgstr ""
"Upotrebljivost je vrlo važna. Kao početnik ćeš se lako snaći. Osnovno "
"poznavanje UML-a je dovoljno barem za stvaranje dijagrama klasa."

#: ../design_principles.md:19
msgid "Guidance"
msgstr "Upute"

#: ../design_principles.md:21
msgid "To help users, Gaphor should provide guidance where it can."
msgstr "Kako bi pomogao korisnicima, Gaphor bi trebao pružiti upute gdje god može."

#: ../design_principles.md:23
msgid "Help with relationships"
msgstr "Pomoć s odnosima"

#: ../design_principles.md:25
msgid ""
"The diagram has a feature that it grays out all elements a relationship "
"can not connect to. This helps you to decide where a relation can connect"
" to. You can still mix different elements, but we try to make it as "
"simple as possible to make consistent models."
msgstr ""
"Dijagram ima značajku da zasivi sve elemente s kojima se odnos ne može "
"povezati. To pomaže pri odlučivanju gdje se odnos može povezati. "
"Različiti elementi se mogu i nadalje miješati, ali mi se trudimo to "
"pojednostavniti kako bi se izradili konzistentni modeli."

#: ../design_principles.md:30
msgid "Keep the model in sync"
msgstr "Održavanje sinkronizacije modela"

#: ../design_principles.md:32
msgid ""
"An important part of modeling is to design a system in abstractions and "
"be able to explain those to others. As systems become more complicated, "
"it's important to have the design (model) layed out in diagrams."
msgstr ""
"Važan dio modeliranja je stvaranje sustava abstraktno i biti u stanju "
"objasniti to drugima. Kako sustavi postaju kompliciraniji, važno je imati"
" dizajn (model) koji se prikazuje u dijagramima."

#: ../design_principles.md:36
msgid ""
"Gaphor goes through great lengths to keep the model in sync with the "
"diagrams. In doing so, unused elements can be automatically removed from "
"the model if they're no longer shown in any diagram."
msgstr ""
"Gaphor održava sinkronizaciju modela s dijagramima. Pritom se nekorišteni"
" elementi mogu automatski ukloniti iz modela ako se više ne prikazuju u "
"nijednom dijagramu."

#: ../design_principles.md:40
msgid "Out of your way"
msgstr "Bez smetnji"

#: ../design_principles.md:42
msgid ""
"When modeling, you should be busy with your problem or solution domain, "
"not with the tool. Gaphor tries to stay out of your way as much as "
"possible. It does not try to nag you with error messages, because the "
"model is not \"correct\"."
msgstr ""
"Tijekom modeliranja koncentriraj se na problem ili rješenje, a ne na "
"alat. Gaphor će se uplesti što manje moguće. Neće te gnjaviti porukama o "
"greškama zbog modela koji nije „ispravan”."

#: ../design_principles.md:46
msgid "Avoid dialogs"
msgstr "Izbjegavanje dijaloga"

#: ../design_principles.md:48
msgid ""
"In doing the right thing, and staying out of the way of users, Gaphor "
"avoids the use of dialogs as much as possible."
msgstr ""
"Čineći ispravnu stvar i ne zaokupljati korisnika, Gaphor izbjegava "
"korištenje dijaloga koliko god je to moguće."

#: ../design_principles.md:51
msgid ""
"Gaphor should allow you to do the sensible thing (see above) and not get "
"you out of your flow with all sorts of questions."
msgstr ""
"Gaphor bi trebao omogućiti da učiniš razumnu stvar (vidi gore) i da te ne"
" smeta raznim pitanjima tijekom tvog rada."

#: ../design_principles.md:54
msgid "Notify on changes"
msgstr "Obavijesti o promjenama"

#: ../design_principles.md:56
msgid ""
"When Gaphor is doing something that is not directly visible, you'll see a"
" notification, for example, an element that's indirectly removed from the"
" model. It will not interrupt you with dialogs, but only provide a small "
"in-app notification. If the change is undesired, hit `undo`."
msgstr ""
"Kada Gaphor radi nešto što nije izravno vidljivo, vidjet ćeš obavijest. "
"Na primjer, element koji je neizravno uklonjen iz modela. Neće te "
"prekidati dijalozima, već će samo pružiti malu obavijest unutar "
"aplikacije. Ako ne želiš prihvatiti promjenu, pritisni `poništi`."

#: ../design_principles.md:61
msgid "Balanced"
msgstr "Uravnoteženo"

#: ../design_principles.md:63
msgid ""
"Although Gaphor implements quite a bit of the UML 2 model, it's not "
"complete. We try to find the right balance in features to suite both "
"expert and novice modellers."
msgstr ""
"Iako Gaphor implementira podosta UML 2 modela, on nije potpun. Pokušavamo"
" uspostaviti ravnotežu značajki kako bi odgovarale stručnjacima i "
"početnicima modeliranja."

#: ../design_principles.md:67
msgid "Continuity"
msgstr "Kontinuitet"

#: ../design_principles.md:69
msgid ""
"A model that is created should be usable in the future. Gaphor does "
"acknowledge that. We care about compatibility."
msgstr ""
"Model koji se izradi bi se trebao moći koristiti u budućnosti. Gaphor to "
"podupire. Brinemo se o kompatibilnosti."

#: ../design_principles.md:72
msgid "Backwards compatibility"
msgstr "Kompatibilnost sa starijim verzijama"

#: ../design_principles.md:74
msgid ""
"Gaphor is capable of loading models going back to Gaphor 1.0. It's "
"important for a tool to always allow older models to be loaded."
msgstr ""
"Gaphor može učitavati modele izrađene s Gaphor verzijom 1.0. Važno je da "
"alat uvijek dopušta učitavanje starijih modela."

#: ../design_principles.md:77
msgid "Multi-platform"
msgstr "Višeplatformski"

#: ../design_principles.md:79
msgid ""
"We put a lot of effort in making Gaphor run on all major platforms: "
"Windows, macOS, and Linux. Having Gaphor available on all platforms is "
"essential if the model needs to be shared. It would be awful if you need "
"to run one specific operating system in order to open a model."
msgstr ""
"Uložili smo puno truda kako bi Gaphor radio na svim glavnim platformama: "
"Windows, macOS i Linux. Imati Gaphor dostupan na svim platformama bitno "
"je ako model treba dijeliti. Bilo bi užasno ako bi se morao pokrenuti "
"jedan određeni operacijski sustav za otvaranje modela."

#: ../design_principles.md:84
msgid ""
"So far, we do not support the fourth major platform (web). Native "
"applications provide a better user experience (once installed). But this "
"may change."
msgstr ""
"Za sada ne podržavamo četvrtu glavnu platformu (web). Izvorne aplikacije "
"pružaju bolje korisničko iskustvo (nakon instaliranja). To će se može "
"promijeniti."

#: ../design_principles.md:87
msgid "User interaction"
msgstr "Korisnička interakcija"

#: ../design_principles.md:89
msgid ""
"Gaphor is originally written on Linux. It uses [GTK](https://gtk.org) as "
"it's user interface toolkit. This sort of implies that Gaphor follows the"
" [GNOME Human Interface Guidelines "
"(HIG)](https://developer.gnome.org/hig/). Gaphor is also a multi-platform"
" application. We try to stay close to the GNOME HIG, but try not to "
"introduce concepts that are not available on Windows and macOS."
msgstr ""

#: ../design_principles.md:95
msgid ""
"User interface components are not generated. We found that UI generation "
"(like many enterprise modeling tools do) provides an awful user "
"experience. We want users to use Gaphor on a regular basis, so we aim for"
" it to be a tool that's pleasant to look at and easy to work with."
msgstr ""

#: ../design_principles.md:101
msgid "What else?"
msgstr ""

#: ../design_principles.md:103
msgid "On a technical level, the following principles are also applicable:"
msgstr ""

#: ../design_principles.md:105
msgid ""
"**Idempotency** Allow the same operation to be applied multiple times. "
"This should not affect the result."
msgstr ""

#: ../design_principles.md:107
msgid ""
"**Event Driven** Gaphor is a user application. It acts to user events. "
"The application uses an internal event dispatches (event bus) to "
"distribute events to interested parties. Everyone should be able to "
"listen to events."
msgstr ""

#: ../event_system.md:1
msgid "Event System"
msgstr "Sustav događaja"

#: ../event_system.md:3
msgid ""
"The event system in Gaphor provides an API to *handle* events and to "
"*subscribe* to events."
msgstr ""
"Sustav događaja u Gaphoru pruža API za *rukovanje* događajima i za "
"*pretplatu* na događaje."

#: ../event_system.md:6
msgid ""
"In Gaphor we manage event handler subscriptions through the "
"`EventManager` service. Gaphor is highly event driven:"
msgstr ""
"U Gaphoru upravljamo pretplatama za rukovanje događajima putem usluge "
"„Upravljač događaja”. Gaphor je izrazito vođen događajima:"

#: ../event_system.md:9
msgid "Changes in the loaded model are emitted as events"
msgstr "Promjene u učitanom modelu emitiraju se kao događaji"

#: ../event_system.md:10
msgid "Changes on diagrams are emitted as events"
msgstr "Promjene u dijagramima emitiraju se kao događaji"

#: ../event_system.md:11
msgid "Changes in the UI are emitted as events"
msgstr "Promjene u korisničkom sučelju emitiraju se kao događaji"

#: ../event_system.md:13
msgid ""
"Although Gaphor depends heavily on GTK for its user interface, Gaphor is "
"using its own event dispatcher. Events can be structured in hierarchies. "
"For example, an `AttributeUpdated` event is a subtype of "
"`ElementUpdated`. If we are interested in all changes to elements, we can"
" also register `ElementUpdated` and receive all `AttributeUpdated` events"
" as well."
msgstr ""

#: gaphor.core.eventmanager.EventManager:1 of
msgid "The Event Manager provides a flexible way to dispatch events."
msgstr ""

#: gaphor.core.eventmanager.EventManager:3 of
msgid ""
"Event dispatching is a central component in Gaphor. It allows components "
"in Gaphor to react to changes in the application."
msgstr ""

#: gaphor.core.eventmanager.EventManager:6 of
msgid "Events are dispatched by type."
msgstr ""

#: gaphor.core.eventmanager.EventManager.subscribe:1 of
msgid "Register a handler."
msgstr ""

#: gaphor.core.eventmanager.EventManager.subscribe:3 of
msgid ""
"Handlers are triggered (executed) when events are emitted through the "
":obj:`~gaphor.core.eventmanager.EventManager.handle` method."
msgstr ""

#: gaphor.core.eventmanager.EventManager.unsubscribe:1 of
msgid "Unregister a previously registered handler."
msgstr ""

#: gaphor.core.eventmanager.EventManager.handle:1 of
msgid "Send event notifications to registered handlers."
msgstr ""

#: gaphor.core.eventmanager.event_handler:1 of
msgid "Mark a function/method as an event handler for a particular type of event."
msgstr ""

#: gaphor.core.eventmanager.event_handler:4 of
msgid "Given a custom event type:"
msgstr ""

#: gaphor.core.eventmanager.event_handler:10 of
msgid "You can apply this to a handler method or function:"
msgstr ""

#: gaphor.core.eventmanager.event_handler:16 of
msgid "This will allow you to let the even be handled by an event manager:"
msgstr ""

#: ../event_system.md:31
msgid ""
"Under the hood events are handled by the Generics library. For more "
"information about how the Generic library handles events see the `Generic"
" documentation` <https://generic.readthedocs.io>`_."
msgstr ""

#: ../first_model.md:1
msgid "Your First Model"
msgstr "Tvoj prvi model"

#: ../first_model.md:8
msgid ""
"Although the names should speak for themselves, you can check out the "
"[Getting Started](getting_started) page for more information."
msgstr ""

#: ../first_model.md:12
msgid ""
"Once Gaphor is started, and you can start a new model with the _Generic_ "
"template. The initial diagram is already open in the Diagram section."
msgstr ""

#: ../first_model.md:15
msgid ""
"Select an element you want to place, in this case a Class (![Icon for "
"Class.](../gaphor/ui/icons/hicolor/scalable/actions/gaphor-class-"
"symbolic.svg)) by clicking on the icon in the Toolbox and click on the "
"diagram. This will place a new Class item instance on the diagram and add"
" a new Class to the model -- it shows up in the Model Browser. The "
"selected tool will reset itself to the Pointer tool after the element is "
"placed on the diagram."
msgstr ""

#: ../first_model.md:15
msgid "Icon for Class."
msgstr ""

#: ../first_model.md:21
msgid ""
"The Property Editor on the right side will show you details about the "
"newly added class, such as its name (_New Class_), attributes and "
"operations (methods). The Note field can contain any text you wish to "
"associate with the element, (this will not show on a diagram)."
msgstr ""

#: ../first_model.md:25
msgid ""
"![The Gaphor main window showing a single class added to the "
"model.](images/first-model-class.png)"
msgstr ""

#: ../first_model.md:25
msgid "The Gaphor main window showing a single class added to the model."
msgstr ""

#: ../first_model.md:27
msgid "It's simple to add elements to a diagram."
msgstr "Elementi se mogu jednostavno dodati dijagramu."

#: ../first_model.md:29
msgid ""
"Gaphor does not make any assumptions about which elements should be "
"placed on a diagram. A diagram is a diagram. UML defines all different "
"kinds of diagrams, such as Class diagrams, Component diagrams, Action "
"diagrams, Sequence diagrams. But Gaphor does not place any restrictions."
msgstr ""
"Gaphor ne pretpostavlja koji se elementi trebaju postaviti na dijagram. "
"Dijagram je dijagram. UML definira sve različite vrste dijagrama, kao što"
" su dijagrami klasa, dijagrami komponenti, dijagrami radnji, dijagrami "
"sekvenci. Ali Gaphor ne postavlja nikakva ograničenja."

#: ../first_model.md:34
msgid "Adding Relations"
msgstr "Dodavanje veza"

#: ../first_model.md:36
msgid ""
"Add another Class. Change the names to `Shape` and `Circle`. Let's define"
" that `Circle` is a sub-type of `Shape`. You can do this by selecting one"
" and changing the name in the Property Editor, or by double-clicking the "
"element."
msgstr ""

#: ../first_model.md:40
#, fuzzy
msgid ""
"Select Generalization (![Icon for generalization "
"relationships.](../gaphor/ui/icons/hicolor/scalable/actions/gaphor-"
"generalization-symbolic.svg))."
msgstr ""
"Odberi generaliziranje (![new "
"generalization](../gaphor/ui/icons/hicolor/scalable/actions/gaphor-"
"generalization-symbolic.svg))."

#: ../first_model.md:40
msgid "Icon for generalization relationships."
msgstr "Ikona za generalizaciju odnosa."

#: ../first_model.md:42
msgid ""
"Move the mouse cursor over `Shape`. Click, hold and drag the line end "
"over `Circle`. Release the mouse button, and you should have your "
"relationship between `Shape` and `Circle`. You can see both ends of the "
"relation are red, indicating they are connected to their class."
msgstr ""

#: ../first_model.md:47
msgid ""
"![The Gaphor main window showing two classes connected by a "
"generalization relationship.](images/first-model-generalization.png)"
msgstr ""

#: ../first_model.md:47
msgid ""
"The Gaphor main window showing two classes connected by a generalization "
"relationship."
msgstr ""

#: ../first_model.md:49
msgid ""
"Optionally you can run the auto-layout (![Menu icon](images/open-menu-"
"symbolic.svg) → Tools → Auto Layout) to align the elements on the "
"diagram."
msgstr ""

#: ../first_model.md:49 ../plugins.md:45 ../style_sheets.md:343
msgid "Menu icon"
msgstr ""

#: ../first_model.md:53
msgid "Creating New Diagrams"
msgstr "Stvaranje novih dijagrama"

#: ../first_model.md:55
#, fuzzy
msgid ""
"To create a new diagram, use the Model Browser. Select the element that "
"should contain the new diagram. For now, select _New Model_. Click the "
"New Diagram menu (![Plus symbol of the New Diagram popup menu.](images"
"/list-add-symbolic.svg)) in the header bar."
msgstr ""
"Za izradu novog dijagrama koristi „Preglednik modela”. Odaberi element "
"koji bi trebao sadržavati novi dijagram. Za sada, odaberi _Novi model_. "
"Pritisni izbornik „Novi dijagram” (![novi dijagram](images/list-add-"
"symbolic.svg)) u traci zaglavlja."

#: ../first_model.md:55
msgid "Plus symbol of the New Diagram popup menu."
msgstr ""

#: ../first_model.md:59
#, fuzzy
msgid "![The New Diagram popup window.](images/first-model-new-diagram-popup.png)"
msgstr "![slika](/images/first-model-new-diagram-popup.png)"

#: ../first_model.md:59
msgid "The New Diagram popup window."
msgstr ""

#: ../first_model.md:61
msgid "Select _New Generic Diagram_ and a new diagram is created."
msgstr ""

#: ../first_model.md:63
msgid ""
"Now drag the elements from the Model Browser onto the new diagram. First "
"the classes `Shape` and `Circle`. Add the generalization last. Drop it "
"somewhere between the two classes. The relation will be created to the "
"diagram."
msgstr ""

#: ../first_model.md:67
msgid ""
"Now change the name of class `Circle` to `Ellipse`. Check the other "
"diagram. The name has been changed there as well."
msgstr ""

#: ../first_model.md:72
msgid ""
"Elements in a diagram are only a _representation_ of the elements in the "
"underlying model. The model is what you see in the Model Browser."
msgstr ""

#: ../first_model.md:75
msgid ""
"Elements in the model are automatically removed when there are no more "
"representations in any of the diagrams."
msgstr ""

#: ../first_model.md:78
msgid "Examples of Gaphor models"
msgstr ""

#: ../first_model.md:80
#, fuzzy
msgid "SysML Models"
msgstr "CSS element"

#: ../first_model.md:81
msgid ""
"To see how a larger model comes together in Gaphor check out [Gaphor "
"Distilled](https://github.com/mikekidner/gaphor_distilled) which "
"implements the DELL-SAT-77 model used as the basis for [SysML "
"Distilled](https://delligattiassociates.com/publications/?_gl=1*1tu6ekh*_ga*MTMwMTU4NjMyNC4xNzMyNTYyOTUw*_up*MQ..)"
" one of the standard references for the SysML language."
msgstr ""

#: ../framework.md:1
msgid "Framework"
msgstr "Okruženje"

#: ../framework.md:3
msgid "Overview"
msgstr "Pregled"

#: ../framework.md:5
msgid ""
"Gaphor is built in a light, service oriented fashion. The application is "
"split in a series of services, such as a file, event, and undo managers. "
"Those services are loaded based on entry points defined in the "
"`pyproject.toml` file. To learn more about the architecture, please see "
"the description about the [Service Oriented "
"Architecture](service_oriented.md)."
msgstr ""
"Gaphor je izgrađen za jednostavan, uslužno orijentirani način. Aplikacija"
" je podijeljena na niz usluga, kao što su upravljači datoteka, događaja i"
" poništavanja. Te se usluge učitavaju na temelju ulaznih točaka "
"definiranih u datoteci `pyproject.toml`. Za više informacija o "
"arhitekturi, pogledaj opis za [Service Oriented "
"Architecture](service_oriented.md)."

#: ../framework.md:11
msgid "Event driven"
msgstr ""

#: ../framework.md:13
msgid ""
"Parts of Gaphor communicate with each other through events. Whenever "
"something important happens, for example, an attribute of a model element"
" changes, an event is sent. When other parts of the application are "
"interested in a change, they register an event handler for that event "
"type. Events are emitted though a central broker so you do not have to "
"register on every individual element that can send an event they are "
"interested in. For example, a diagram item could register an event rule "
"and then check if the element that sent the event is actually the event "
"the item is representing. For more information see the full description "
"of the [event system](event_system)."
msgstr ""

#: ../framework.md:23
msgid "Transactional"
msgstr "Transakcijski"

#: ../framework.md:25
#, fuzzy
msgid ""
"Gaphor is transactional, which means it keeps track of the functions it "
"performs as a series of transactions. The transactions work by sending an"
" event when a transaction starts and sending another when a transaction "
"ends. This allows, for example, the undo manager to keep a running log of"
" the previous transactions so that a transaction can be reversed if the "
"undo button is pressed."
msgstr ""
"Gaphor je [transakcijski](transaction.md), što znači da prati funkcije "
"koje obavlja kao niz transakcija. Transakcije funkcioniraju tako da šalju"
" događaj kada transakcija započne i šalju drugi događaj kada transakcija "
"završi. To na primjer omogućuje upravljaču poništavanja da vodi dnevnik "
"prethodnih transakcija tako da se transakcija može poništiti ako se "
"pritisne gumb za poništavanje."

#: ../framework.md:32
msgid "Main Components"
msgstr "Glavne komponente"

#: ../framework.md:34
msgid ""
"The main portion of Gaphor that executes first is called the "
"`Application`. Gaphor can have multiple models open at any time. Each "
"model is kept in a `Session`. Only one Application instance is active. "
"Each session will load its own services defined as "
"[gaphor.services](service_oriented.md)."
msgstr ""
"Glavni dio Gaphora koji se najprije izvršava zove se `Aplikacija`. Gaphor"
" može imati više otvorenih modela u bilo kojem trenutku. Svaki model se "
"čuva u `Sesiji`. Aktivna je samo jedna instanca aplikacije. Svaka će "
"sesija učitati vlastite usluge definirane kao "
"[gaphor.services](service_oriented.md)."

#: ../framework.md:40
msgid "The most notable services are:"
msgstr "Najistaknutije usluge su:"

#: ../framework.md:42
msgid "event_manager"
msgstr "event_manager"

#: ../framework.md:44
msgid ""
"This is the central component used for event dispatching. Every service "
"that does something with events (both sending and receiving) depends on "
"this component."
msgstr ""
"Ovo je središnja komponenta koja se koristi za slanje događaja. Svaka "
"usluga koja radi nešto s događajima (slanje i primanje) ovisi o ovoj "
"komponenti."

#: ../framework.md:48
msgid "element_factory"
msgstr "element_factory"

#: ../framework.md:50
#, fuzzy
msgid ""
"The [data model](models/core) itself is maintained in the element factory"
" ({obj}`~gaphor.core.modeling.ElementFactory`). This service is used to "
"create model elements, as well as to lookup elements or query for a set "
"of elements."
msgstr ""
"Sam [model podataka](models/core.md) održava se u tvornici elemenata "
"(`gaphor.core.modeling.elementfactory`). Ova se usluga koristi za "
"stvaranje elemenata modela, kao i za pregledvanje elemenata ili za "
"traženje skupa elemenata."

#: ../framework.md:54
msgid "undo_manager"
msgstr "undo_manager"

#: ../framework.md:56
msgid ""
"One of the most appreciated services. It allows users to make a mistake "
"every now and then!"
msgstr ""
"Jedna od najcjenjenijih usluga. Omogućuje korisnicima da tu i tamo "
"pogriješe!"

#: ../framework.md:59
msgid ""
"The undo manager is transactional. Actions performed by a user are only "
"stored if a transaction is active. If a transaction is completed "
"(committed) a new undo action is stored. Transactions can also be rolled "
"back, in which case all changes are played back directly. For more "
"information see the full description of the [undo manager](undo)."
msgstr ""
"Upravljač poništavanja je transakcijski. Korisničke radnje se spremaju "
"samo ako je transakcija aktivna. Ako je transakcija dovršena (poslana), "
"sprema se nova radnja poništavanja. Transakcije se također mogu vratiti. "
"U tom slučaju se sve promjene reproduciraju izravno. Za više informacija "
"pogledaj opis [undo manager](undo)."

#: ../framework.md:65
msgid "file_manager"
msgstr "file_manager"

#: ../framework.md:67
msgid "Loading and saving a model is done through this service."
msgstr "Učitavanje i spremanje modela vrši se putem ove usluge."

#: ../gaphor-services.md:5
msgid "Example: Gaphor services"
msgstr ""

#: ../gaphor-services.md:7
msgid ""
"In this example we're doing something a little less trivial. In Gaphor, "
"services are defined as [entry "
"points](https://packaging.python.org/en/latest/specifications/entry-"
"points/). Each service is a class, and takes parameters with names that "
"match other services. This allows services to depend on other services."
msgstr ""

#: ../gaphor-services.md:12
msgid "It looks something like this:"
msgstr ""

#: ../gaphor-services.md:56
msgid "Let's first load the entry points."
msgstr ""

#: ../gaphor-services.md:68
msgid "Now let's create a component in our model for every service."
msgstr ""

#: ../gaphor-services.md:85
msgid ""
"With all components mapped, we can create dependencies between those "
"components, based on the constructor parameter names."
msgstr ""

#: ../gaphor-services.md:101
msgid ""
"With all elements in the model, we can create a diagram. Let's drop the "
"components and dependencies on the diagram and let auto-layout do its "
"magic."
msgstr ""

#: ../gaphor-services.md:104
msgid ""
"To make the dependency look good, we have to add a style sheet. If you "
"create a new diagram via the GUI, this element is automatically added."
msgstr ""

#: ../gaphor-services.md:118
msgid "Last step is to layout and draw the diagram."
msgstr ""

#: ../gaphor-services.md:128
msgid ""
"That's all. As you can see from the diagram, a lot of services rely on "
"`EventManager`."
msgstr ""

#: ../getting_started.md:1
msgid "Get Started with Gaphor"
msgstr "Počni raditi s Gaphorom"

#: ../getting_started.md:3
msgid ""
"Gaphor is more than a diagram editor: it's a modeling environment. Where "
"simple diagram editors such as Microsoft Visio and "
"[draw.io](https://draw.io) allow you to create pictures, Gaphor actually "
"keeps track of the elements you add to the model. In Gaphor you can "
"create diagrams to track and visualize different aspects of the system "
"you're developing."
msgstr ""

#: ../getting_started.md:9
msgid "Enough talk, let's get started."
msgstr ""

#: ../getting_started.md:11
msgid ""
"You can find installers for Gaphor on the [Gaphor "
"Website](https://gaphor.org/download). Gaphor can be installed on Linux "
"(Flatpak), Windows, and macOS."
msgstr ""

#: ../getting_started.md:14
msgid ""
"Once Gaphor is launched, it provides you a welcome screen. It shows you "
"previously opened models and model templates."
msgstr ""
"Nakon pokretanja Gaphora, prikazuje se uvodni ekran. Prikazuje prethodno "
"otvorene modele i predloške modela."

#: ../getting_started.md:17
#, fuzzy
msgid ""
"![Gaphor's welcome screen showing recently opened models and model "
"templates.](images/getting-started-greeter.png)"
msgstr "![uvodni ekran](images/getting-started-greeter.png)"

#: ../getting_started.md:17
#, fuzzy
msgid ""
"Gaphor's welcome screen showing recently opened models and model "
"templates."
msgstr ""
"Nakon pokretanja Gaphora, prikazuje se uvodni ekran. Prikazuje prethodno "
"otvorene modele i predloške modela."

#: ../getting_started.md:19
msgid "You can select a template to get started."
msgstr "Počni izborom predloška."

#: ../getting_started.md:21
msgid "**Generic:** a blank model to start with"
msgstr "**Generički:** prazni model"

#: ../getting_started.md:22
msgid ""
"**UML:** A template for the *Unified Modeling Language* for modeling a "
"software system"
msgstr ""
"**UML:** Predložak za *Unified Modeling Language* za modeliranje "
"softverskog sustava"

#: ../getting_started.md:23
msgid ""
"**SysML:** A template for the *Systems Modeling Language* for modeling a "
"wide range of systems and systems-of-systems"
msgstr ""
"**SysML:** Predložak za *Systems Modeling Language* za modeliranje raznih"
" sustavskih modela i sustava-od-sustava"

#: ../getting_started.md:24
msgid ""
"**RAAML:** A template for the *Risk Analysis and Assessment Modeling "
"language* for safety and reliability analysis"
msgstr ""
"**RAAML:** Predložak za *Risk Analysis and Assessment Modeling language* "
"za sigurnost i analizu pouzdanosti"

#: ../getting_started.md:25
#, fuzzy
msgid ""
"**C4 Model:** A template for *Context, Containers, Components, and Code* "
"which is for lean modeling of software architecture"
msgstr ""
"**C4 Model:** Predložak za *Context, Containers, Components, and Code* "
"koji služi za jednostavno modeliranje softverske arhitekture"

#: ../getting_started.md:27
msgid "Once the model interface is loaded you'll see the modeling interface."
msgstr "Nakon što se sučelje modela učita, vidjet ćeš sučelje za modeliranje."

#: ../getting_started.md:29
msgid ""
"![The Gaphor main window, with numbers refering to parts of the "
"UI.](images/getting-started-new-model.png)"
msgstr ""

#: ../getting_started.md:29
msgid "The Gaphor main window, with numbers refering to parts of the UI."
msgstr ""

#: ../getting_started.md:31
msgid "The layout of the Gaphor interface is divided into four sections, namely:"
msgstr "Raspored sučelja Gaphora je podijeljen u četiri odjeljka, naime:"

#: ../getting_started.md:34 ../getting_started.md:41
msgid "Model Browser"
msgstr "Preglednik modela"

#: ../getting_started.md:35
msgid "Diagram Element Toolbox"
msgstr "Kutija alata za elemente dijagrama"

#: ../getting_started.md:36 ../getting_started.md:80
#: ../models/raaml/Diagrams.rst:2 ../models/sysml/Diagrams.rst:2
msgid "Diagrams"
msgstr "Dijagrami"

#: ../getting_started.md:37 ../getting_started.md:143
msgid "Property Editor"
msgstr "Uređivač svojstava"

#: ../getting_started.md:39
msgid "Each section has its own specific function."
msgstr "Svaki odjeljak ima vlastitu specifičnu funkciju."

#: ../getting_started.md:43
msgid ""
"The Model Browser section of the interface displays a hierarchical view "
"of your model. Every model element you create will be inserted into the "
"Model Browser. This view acts as a tree where you can expand and collapse"
" different elements of your model. This provides an easy way to view the "
"elements of your model from an elided perspective. That is, you can "
"collapse those model elements that are irrelevant to the task at hand."
msgstr ""

#: ../getting_started.md:51
msgid ""
"In the figure above, you will see that there are two elements in the "
"Model Browser. The root element, _New Model_ is a package. Notice the "
"small arrow beside _New Model_ that is pointing downward. This indicates "
"that the element is expanded. You will also notice the two sub-elements "
"are slightly indented in relation to _New Model_. The _main_ element is a"
" diagram."
msgstr ""

#: ../getting_started.md:58
msgid ""
"In the Model Browser view, you can also right-click the model elements to"
" get a context menu. This context menu allows you to find out in which "
"diagram model elements are shown, add new diagrams and packages, and "
"delete an element."
msgstr ""

#: ../getting_started.md:63
msgid ""
"Double-clicking on a diagram element will show it in the Diagram section."
" Elements such as classes and packages can be dragged from the tree view "
"on the diagrams."
msgstr ""

#: ../getting_started.md:67
msgid "Toolbox"
msgstr "Kutija alata"

#: ../getting_started.md:69
msgid ""
"The toolbox is used to add new items to a diagram. Select the element you"
" want to add by clicking on it. When you click on the diagram, the "
"selected element is created. The arrow is selected again, so the element "
"can be manipulated."
msgstr ""

#: ../getting_started.md:73
msgid ""
"Tools can be selected by simply left-clicking on them. By default, the "
"pointer tool is selected after every item placement. This can be changed "
"by disabling the \"Reset tool\" option in the Preferences window. Tools "
"can also be selected by keyboard shortcuts. The keyboard shortcut can be "
"displayed as a tooltip by hovering over the tool button in the toolbox. "
"Finally, it is also possible to drag elements on the Diagram from the "
"toolbox."
msgstr ""

#: ../getting_started.md:82
msgid ""
"The diagram section contains diagrams of the model and takes up the most "
"space in the UI because it is where most of the modeling is done. "
"Diagrams consist of items placed on the diagram. There are two main types"
" of items:"
msgstr ""

#: ../getting_started.md:86 ../getting_started.md:93
msgid "Elements"
msgstr "Elementi"

#: ../getting_started.md:87
msgid "Relationships"
msgstr "Odnosi"

#: ../getting_started.md:89
msgid ""
"Multiple diagrams can be opened at once: they are shown in tabs. Tabs can"
" be closed by pressing <kbd>Ctrl</kbd>+<kbd>w</kbd> or left-clicking on "
"the x in the diagram tab."
msgstr ""
"Moguće je otvoriti više dijagrama odjednom: oni se prikazuju u karticama."
" Kartice se mogu zatvoriti pritiskom <kbd>Ctrl</kbd>+<kbd>w</kbd> ili "
"pritiskom lijevog gumba miša na oznaku „x” u kartici dijagrama."

#: ../getting_started.md:95
msgid ""
"Elements are the shapes that you add to a diagram, and together with "
"Relations, allow you to build up a model."
msgstr ""

#: ../getting_started.md:98
msgid ""
"To resize an element on the diagram, left-click on the element to select "
"it and then drag the resize handles that appear at each corner."
msgstr ""

#: ../getting_started.md:101
msgid ""
"To move an element on the diagram, drag the element where you want to "
"place it by pressing and holding the left mouse button, and moving the "
"mouse before releasing the button."
msgstr ""

#: ../getting_started.md:105
msgid "Relations"
msgstr "Veze"

#: ../getting_started.md:107
#, fuzzy
msgid ""
"Relations are line-like items that form relationships between elements in"
" the diagram. Each end of a relation is in one of two states:"
msgstr ""
"Veze su linijski elementi koji tvore odnose između elemenata u dijagramu."
" Svaki kraj veze se nalazi u jednom od dva stanja:"

#: ../getting_started.md:110
msgid "Connected to an element and the handle turns red"
msgstr "Spajanje s elementom – crvena ručka"

#: ../getting_started.md:111
msgid "Disconnected from an element and the handle turns green"
msgstr "Odspajanje od elementa – zelena ručka"

#: ../getting_started.md:113
msgid ""
"If both ends of a relation are disconnected, the relation can be moved by"
" left-clicking and dragging it."
msgstr ""
"Ako su oba kraja veze nepovezana, veza se može pomaknuti pritiskom lijeve"
" tipke miša i povlačenjem."

#: ../getting_started.md:116
msgid ""
"A new segment in a relation can be added by left-clicking on the relation"
" to select it and then by hovering your mouse over it. A green handle "
"will appear in the middle of the line segments that exist. Drag the "
"handle to add another segment. For example, when you first create a new "
"relation, it will have only one segment. If you drag the segment handle, "
"then it will now have two segments with the knee of the two segments "
"where the handle was."
msgstr ""

#: ../getting_started.md:123
#, fuzzy
msgid "Copy and Paste"
msgstr "Kopiraj i umetni"

#: ../getting_started.md:125
msgid ""
"As stated before, Gaphor is a modeling environment. This means that every"
" _item_ in a diagram is backed by a _model element_ found in the model "
"browser. This means that you can show the same _model element_ in "
"different diagrams."
msgstr ""

#: ../getting_started.md:129
msgid ""
"<kbd>Ctrl</kbd>+<kbd>v</kbd> is used to paste _only_ the presentation "
"element."
msgstr ""

#: ../getting_started.md:130
msgid ""
"<kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>v</kbd> is used to paste a new "
"presentation with a new model element."
msgstr ""

#: ../getting_started.md:133
msgid ""
"<kbd>Ctrl</kbd>+<kbd>v</kbd> does a \"shallow\" paste. "
"<kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>v</kbd> does a \"deep\" paste."
msgstr ""

#: ../getting_started.md:136
msgid "Undo and Redo"
msgstr "Poništi i ponovi"

#: ../getting_started.md:138
msgid ""
"Undo a change press <kbd>Ctrl</kbd>+<kbd>z</kbd> or left-click on the "
"back arrow at the top of the Property Editor. To re-do a change, hit "
"<kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>z</kbd> or press the forward arrow "
"at the top of the Property Editor."
msgstr ""

#: ../getting_started.md:145
msgid ""
"The Property Editor is present on the right side of the diagrams. When no"
" item is selected in the diagram, it shows you some tips and tricks. When"
" an item is selected on the diagram, it contains the item details like "
"name, attributes and stereotypes. It can be opened with <kbd>F9</kbd> and"
" the ![Icon for showing and hiding the Property Editor.](images/sidebar-"
"show-right-symbolic.svg) icon in the header bar."
msgstr ""

#: ../getting_started.md:145
msgid "Icon for showing and hiding the Property Editor."
msgstr ""

#: ../getting_started.md:152
msgid "The properties that are shown depend on the item that is selected."
msgstr ""

#: ../getting_started.md:154
msgid "Model Preferences"
msgstr "Postavke modela"

#: ../getting_started.md:156
msgid ""
"The Property Editor also contains model preferences: Click the ![Document"
" with wrench icon for model specific configuration.](images/document-"
"properties-symbolic.svg) button."
msgstr ""

#: ../getting_started.md:156
msgid "Document with wrench icon for model specific configuration."
msgstr ""

#: ../getting_started.md:159
msgid "Reset Tool Automatically"
msgstr "Automatski resetiraj alat"

#: ../getting_started.md:161
msgid ""
"By default, the pointer tool is selected after an element is placed from "
"the toolbox. If this option is turned off, the same type of element will "
"be placed by clicking in the diagram until another element is selected in"
" the toolbox."
msgstr ""

#: ../getting_started.md:163
msgid "Remove Unused Elements"
msgstr ""

#: ../getting_started.md:165
msgid ""
"By default, elements that are not part of any diagram in the model will "
"be removed. If this option is turned off, elements remain in the model "
"and may be found in the model browser."
msgstr ""

#: ../getting_started.md:167
msgid "Diagram Language"
msgstr "Jezik dijagrama"

#: ../getting_started.md:169
msgid ""
"The diagram language modifier is only applicable to the loaded model and "
"how it is shown in the diagram. The diagram language setting is saved as "
"part of the model and defaults to English."
msgstr ""

#: ../getting_started.md:171
msgid "The UI language of Gaphor is controlled by the operating system."
msgstr ""

#: ../getting_started.md:174
msgid ""
"Gaphor considers the ``LANG`` environment variable on Linux, Windows and "
"macOS."
msgstr ""

#: ../getting_started.md:176
msgid ""
"On Windows and macOS it can be set independently of the operating "
"system's language settings to a different language."
msgstr ""

#: ../getting_started.md:178
msgid "Style Sheet"
msgstr "Stilski predložak"

#: ../getting_started.md:180
msgid ""
"The [style sheet](style_sheets) allows to change the visual appearance of"
" diagrams and model elements."
msgstr ""

#: ../index.rst:29
msgid "Getting Started"
msgstr "Prvi koraci"

#: ../index.rst:38
msgid "Features"
msgstr "Značajke"

#: ../index.rst:49
#, fuzzy
msgid "Development"
msgstr "Element"

#: ../index.rst:59
msgid "Modeling languages"
msgstr "Jezici modeliranja"

#: ../index.rst:69
msgid "Concepts"
msgstr "Koncepti"

#: ../index.rst:79
msgid "Internals"
msgstr "Interne teme"

#: ../index.rst:2
msgid "About Gaphor"
msgstr "O programu Gaphor"

#: ../index.rst:6
msgid "The documentation is up to date for Gaphor |version|"
msgstr "Dokumentacija je aktualna za Gaphor |version|"

#: ../index.rst:8
msgid ""
"Gaphor is a UML and SysML modeling application written in Python. It is "
"designed to be easy to use, while still being powerful. Gaphor implements"
" a fully-compliant UML 2 data model, so it is much more than a picture "
"drawing tool."
msgstr ""

#: ../index.rst:13
msgid ""
"You can use Gaphor to quickly visualize different aspects of a system as "
"well as create complete, highly complex models."
msgstr ""

#: ../index.rst:18
msgid ""
"Gaphor is 100% Open source, available under a friendly `Apache 2 license "
"<https://github.com/gaphor/gaphor/blob/main/LICENSES/Apache-2.0.txt>`_. "
"The code and issue tracker can be found on `GitHub "
"<https://github.com/gaphor/gaphor>`_."
msgstr ""

#: ../index.rst:21
msgid "What are you waiting for? :doc:`Let's get started <getting_started>`!"
msgstr ""

#: ../index.rst:23
msgid ""
"For download instructions, and the blog, please visit the `Gaphor Website"
" <https://gaphor.org>`_."
msgstr ""

#: ../index.rst:26
msgid ""
"Did you know Gaphor has excellent integration with :doc:`Sphinx <sphinx>`"
" and :doc:`Jupyter notebooks <scripting>`?"
msgstr ""

#: ../linux.md:1
msgid "Gaphor on Linux"
msgstr ""

#: ../linux.md:3
#, fuzzy
msgid ""
"Gaphor can be installed as Flatpak on Linux, some distributions provide "
"packages. Check out the [Gaphor download "
"page](https://gaphor.org/download/#linux) for details."
msgstr ""
"Gaphor se može instalirati kao s našim instalaterom. Za detalje pogledaj "
"[stranicu za preuzimanje "
"Gaphora](https://gaphor.org/download.html#windows)."

#: ../linux.md:7 ../macos.md:5 ../windows.md:7
msgid ""
"Older releases are available from "
"[GitHub](https://github.com/gaphor/gaphor/releases)."
msgstr ""

#: ../linux.md:9 ../macos.md:7 ../windows.md:9
msgid ""
"[CI builds](https://github.com/gaphor/gaphor/actions/workflows/full-"
"build.yml) are also available."
msgstr ""

#: ../linux.md:11 ../macos.md:10 ../windows.md:11
msgid "Development Environment"
msgstr ""

#: ../linux.md:13
msgid "There are two ways to set up a development environment:"
msgstr ""

#: ../linux.md:15
msgid "[GNOME Builder](#gnome-builder), ideal for “drive by” contributions."
msgstr ""

#: ../linux.md:16
msgid "[A local environment](#a-local-environment)."
msgstr ""

#: ../linux.md:18
msgid "GNOME Builder"
msgstr ""

#: ../linux.md:20
msgid ""
"Open [GNOME Builder](https://flathub.org/apps/details/org.gnome.Builder) "
"43 or newer, [clone the repository](https://help.github.com/en/github"
"/creating-cloning-and-archiving-repositories/cloning-a-repository). Check"
" if the _Build Profile_ is set to `org.gaphor.Gaphor.json`. If so, hit "
"the _Run_ button to start the application."
msgstr ""

#: ../linux.md:25
msgid "A Local Environment"
msgstr ""

#: ../linux.md:27
msgid ""
"To set up a development environment with Linux, you first need a fairly "
"new Linux distribution version. For example, the latest Ubuntu LTS or "
"newer, Arch, Debian Testing, SUSE Tumbleweed, or similar. Gaphor depends "
"on newer versions of GTK, and we don't test for backwards compatibility. "
"You will also need the latest stable version of Python. In order to get "
"the latest stable version without interfering with your system-wide "
"Python version, we recommend that you install "
"[pyenv](https://github.com/pyenv/pyenv)."
msgstr ""

#: ../linux.md:35
msgid ""
"Install the pyenv [prerequisites](https://github.com/pyenv/pyenv/wiki"
"/Common-build-problems) first, and then install pyenv:"
msgstr ""

#: ../linux.md:42
msgid ""
"Make sure you follow the instruction at the end of the installation "
"script to install the commands in your shell's rc file. Next install the "
"latest version of Python by executing:"
msgstr ""

#: ../linux.md:50
msgid ""
"Where 3.x.x is replaced by the latest stable version of Python (pyenv "
"should let you tab-complete available versions)."
msgstr ""

#: ../linux.md:52
msgid ""
"Next install the Gaphor prerequisites by installing the gobject "
"introspection and cairo build dependencies, for example, in Ubuntu "
"execute:"
msgstr ""

#: ../linux.md:61
msgid "For Redhat/RPM/Fedora based systems:"
msgstr ""

#: ../linux.md:67 ../macos.md:18
msgid ""
"Install [Poetry](https://python-poetry.org) using "
"[pipx](https://pypa.github.io/pipx/):"
msgstr ""

#: ../linux.md:72
msgid ""
"Next, [clone the repository](https://help.github.com/en/github/creating-"
"cloning-and-archiving-repositories/cloning-a-repository), after which you"
" need to execute the following consecutive commands:"
msgstr ""

#: ../linux.md:83 ../macos.md:30
msgid "Now, you can run gaphor as"
msgstr ""

#: ../linux.md:88
msgid ""
"NOTE: Gaphor requires GTK 4. It works best with GTK >=4.8 and libadwaita "
">=1.2."
msgstr ""

#: ../linux.md:90 ../macos.md:44 ../windows.md:169
msgid "Debugging using Visual Studio Code"
msgstr ""

#: ../linux.md:92
msgid ""
"Before you start debugging you'll need to open Gaphor in vscode (the "
"folder containing `pyproject.toml`). You'll need to have the Python "
"extension installed."
msgstr ""

#: ../linux.md:95 ../macos.md:49
msgid "Create a file `.vscode/launch.json` with the following content:"
msgstr ""

#: ../linux.md:115
msgid ""
"`GDK_BACKEND` is added since VSCode by default uses XWayland (the X11 "
"emulator)."
msgstr ""

#: ../linux.md:117
msgid "Create a Flatpak Package"
msgstr ""

#: ../linux.md:119
msgid ""
"The main method that Gaphor is packaged for Linux is with a Flatpak "
"package. [Flatpak](https://flatpak.org) is a software utility for "
"software deployment and package management for Linux. It offers a sandbox"
" environment in which users can run application software in isolation "
"from the rest of the system."
msgstr ""

#: ../linux.md:124
msgid ""
"We distribute the official Flatpak using [Flathub](https://flathub.org), "
"and building of the image is done at the [Gaphor Flathub "
"repository](https://github.com/flathub/org.gaphor.Gaphor)."
msgstr ""

#: ../linux.md:128
msgid "[Install Flatpak](https://flatpak.org/setup)"
msgstr "[Instaliraj Flatpak](https://flatpak.org/setup)"

#: ../linux.md:130
msgid "Install flatpak-builder"
msgstr "Instaliraj flatpak-builder"

#: ../linux.md:134
msgid "Install the GNOME SDK"
msgstr "Instaliraj GNOME SDK"

#: ../linux.md:138
msgid "Clone the Flathub repository and install the necessary SDK:"
msgstr "Kopiraj Flathub repozitorij i instaliraj potrebni SDK:"

#: ../linux.md:144
msgid "Build Gaphor Flatpak"
msgstr "Izgradi Gaphor Flatpak"

#: ../linux.md:148
msgid "Install the Flatpak"
msgstr "Instaliraj Flatpak"

#: ../linux.md:152
msgid "Linux Distribution Packages"
msgstr "Paketi za Linux distribuciju"

#: ../linux.md:154
msgid ""
"Examples of Gaphor and Gaphas RPM spec files can be found in [PLD "
"Linux](https://www.pld-linux.org/) [repository](https://github.com/pld-"
"linux/):"
msgstr ""

#: ../linux.md:158
msgid "https://github.com/pld-linux/python-gaphas"
msgstr "https://github.com/pld-linux/python-gaphas"

#: ../linux.md:159
msgid "https://github.com/pld-linux/gaphor"
msgstr "https://github.com/pld-linux/gaphor"

#: ../linux.md:161
msgid ""
"There is also an [Arch User Repository (AUR) for "
"Gaphor](https://aur.archlinux.org/packages/python-gaphor) available for "
"Arch users."
msgstr ""

#: ../linux.md:165
msgid ""
"Please, do not hesitate to contact us if you need help to create a Linux "
"package for Gaphor or Gaphas."
msgstr ""

#: ../macos.md:1
msgid "Gaphor on macOS"
msgstr "Gaphor na macOS-u"

#: ../macos.md:3
msgid ""
"The latest release of Gaphor can be downloaded from the [Gaphor download "
"page](https://gaphor.org/download#macos). Gaphor can also be installed as"
" a [Homebrew cask](https://formulae.brew.sh/cask/gaphor)."
msgstr ""

#: ../macos.md:12
msgid "To set up a development environment with macOS:"
msgstr ""

#: ../macos.md:13
msgid "Install [Homebrew](https://brew.sh)"
msgstr "Instaliraj [Homebrew](https://brew.sh)"

#: ../macos.md:14
msgid "Open a terminal and execute:"
msgstr "Otvori terminal i izvrši:"

#: ../macos.md:23
msgid ""
"Next, [clone the repository](https://help.github.com/en/github/creating-"
"cloning-and-archiving-repositories/cloning-a-repository), after which you"
" can execute the following consecutive commands to install the poetry "
"environment:"
msgstr ""

#: ../macos.md:35
msgid ""
"If PyGObject does not compile and complains about a missing `ffi.h` file,"
" you may want to install libffi from Homebrew, and set the following "
"environment variable and run `poetry install` again:"
msgstr ""

#: ../macos.md:46
msgid ""
"Before you start debugging you'll need to open Gaphor in VSCode (the "
"folder containing `pyproject.toml`). You'll need to have the Python "
"extension installed."
msgstr ""

#: ../macos.md:66
msgid "Packaging for macOS"
msgstr "Paketiranje za macOS"

#: ../macos.md:68
msgid ""
"In order to create an exe installation package for macOS, we utilize "
"[PyInstaller](https://pyinstaller.org) which analyzes Gaphor to find all "
"the dependencies and bundle them in to a single folder."
msgstr ""

#: ../macos.md:72
msgid "Follow the instructions for settings up a development environment above"
msgstr ""

#: ../macos.md:73
msgid "Open a terminal and execute the following from the repository directory:"
msgstr ""

#: ../merge_conflicts.md:1
msgid "Resolve Merge Conflicts"
msgstr ""

#: ../merge_conflicts.md:3
msgid ""
"Suppose you’re working on a model. If you create a change, while someone "
"else has also made changes, there’s a fair chance you'll end up with a "
"merge conflict."
msgstr ""

#: ../merge_conflicts.md:6
msgid ""
"Gaphor tries to make the changes to a model as small as possible: all "
"elements are stored in the same order. However, since a Gaphor model is a"
" persisted graph of objects, merging changes is not as simple as opening "
"a text editor."
msgstr ""

#: ../merge_conflicts.md:10
msgid ""
"From Gaphor 2.18 onwards Gaphor is also capable of merging models. Once a"
" merge conflict has been detected (i.e., when the model file contains git"
" conflict-resolution markers `<<<<<<<`, `=======`, and `>>>>>>>`), Gaphor"
" will offer the option to open the current model, the incoming model or "
"merge changes manually via the Merge Editor."
msgstr ""

#: ../merge_conflicts.md:15
msgid ""
"![A dialog showing options on how to deal with a merge conflict.](images"
"/merge-dialog.png)"
msgstr ""

#: ../merge_conflicts.md:15
msgid "A dialog showing options on how to deal with a merge conflict."
msgstr ""

#: ../merge_conflicts.md:17
msgid ""
"If you choose *Open Merge Editor*, both models will be loaded. The "
"current model remains as is. In addition, the changes made to the "
"incoming model are calculated. Those changes are stored as _pending "
"change_ objects in the model."
msgstr ""

#: ../merge_conflicts.md:21
msgid ""
"Pending changes are part of the model, you can save the model with "
"changes and resolve those at a later point."
msgstr ""

#: ../merge_conflicts.md:24
msgid ""
"The Merge Editor is shown on the right side, replacing the (normal) "
"Property Editor."
msgstr ""

#: ../merge_conflicts.md:26
msgid ""
"![The Gaphor main window, showing the merge editor on the right.](images"
"/merge-conflict-window.png)"
msgstr ""

#: ../merge_conflicts.md:26
msgid "The Gaphor main window, showing the merge editor on the right."
msgstr ""

#: ../merge_conflicts.md:28
msgid ""
"Merge actions are grouped by diagram, where possible. When you apply a "
"change, all changes listed as children are also applied. Once changes are"
" applied, they can only be reverted by undoing the change (hit _Undo_)."
msgstr ""

#: ../merge_conflicts.md:33
msgid ""
"The Merge Editor replaces the Property Editor, as long as there are "
"pending changes in the model."
msgstr ""

#: ../merge_conflicts.md:35
msgid ""
"It is concidered good practice to resolve the merge conflict before you "
"continue modeling."
msgstr ""

#: ../merge_conflicts.md:38
msgid ""
"When all conflicts have been resolved, press *Resolve* to finish merge "
"conflict resolution."
msgstr ""

#: ../modeling_language.md:1
msgid "Modeling Languages"
msgstr ""

#: ../modeling_language.md:3
msgid ""
"Since version 2.0, Gaphor supports the concept of Modeling languages. "
"This allows for development of separate modeling languages separate from "
"the Gaphor core application."
msgstr ""

#: ../modeling_language.md:7
msgid ""
"The main language was, and will be UML. Gaphor now also supports a subset"
" of SysML, RAAML and the C4 model."
msgstr ""

#: ../modeling_language.md:10
msgid ""
"A modeling language in Gaphor is defined by a class implementing the "
"`gaphor.abc.ModelingLanguage` abstract base class. The modeling language "
"should be registered as a `gaphor.modelinglanguages` entry point."
msgstr ""

#: ../modeling_language.md:14
msgid ""
"The `ModelingLanguage` interface is fairly minimal. It allows other "
"services to look up elements and diagram items, as well as a toolbox, and"
" diagram types. However, the responsibilities of a modeling language do "
"not stop there. Parts of functionality will be implemented by registering"
" handlers to a set of generic functions."
msgstr ""

#: ../modeling_language.md:20
msgid ""
"But let's not get ahead of ourselves. What is the functionality a "
"modeling language implementation can offer?"
msgstr ""

#: ../modeling_language.md:23
msgid ""
"Three functionalities are exposed by a [`ModelingLanguage` instance"
"](#modeling-language):"
msgstr ""

#: ../modeling_language.md:25
msgid "A data model (elements) and diagram items"
msgstr ""

#: ../modeling_language.md:26
msgid "Diagram types"
msgstr "Vrste dijagrma"

#: ../modeling_language.md:27
msgid "A toolbox definition"
msgstr "Definicija kutija alata"

#: ../modeling_language.md:29
msgid ""
"Other functionalities can be extended by adding handlers to the "
"respective generic functions:"
msgstr ""

#: ../modeling_language.md:32
msgid "[Connectors](#connectors), allow diagram items to connect"
msgstr "[Spojnice](#connectors) omogućuju spajanje elemenata dijagrama"

#: ../modeling_language.md:33
msgid ""
"[Format/parse](#format-and-parse) model elements to and from a textual "
"representation"
msgstr ""

#: ../modeling_language.md:34
msgid ""
"[Copy/paste](#copy-and-paste) behavior when element copying is not "
"trivial, for example with more than one element is involved"
msgstr ""

#: ../modeling_language.md:36
msgid "[Grouping](#grouping), allow elements to be nested in one another"
msgstr "[Grupiranje](#grouping), omogućuje međusobno ugniježđivanje elemenata"

#: ../modeling_language.md:37
msgid ""
"[Dropping](#dropping), allow elements to be dragged from the tree view "
"onto a diagram"
msgstr ""
"[Ispuštanje](#dropping), omogućuje povlačenje elemenata iz prikaza stabla"
" u dijagram"

#: ../modeling_language.md:38
msgid ""
"[Automatic cleanup rules](#automated-model-cleanup) to keep the model "
"consistent"
msgstr ""
"[Pravila automatskog čišćenja](#automated-model-cleanup) za održavanje "
"dosljednosti modela"

#: ../modeling_language.md:41
msgid ""
"Modeling languages can also provide new UI components. Those components "
"are not loaded directly when you import a modeling language package. "
"Instead, they should be imported via the `gaphor.modules` entrypoint."
msgstr ""

#: ../modeling_language.md:45
msgid ""
"[Editor pages](#property-editor-pages), shown in the collapsible pane on "
"the right side"
msgstr ""

#: ../modeling_language.md:46
msgid "[Instant (diagram) editor popups](#instant-diagram-editor-popups)"
msgstr ""

#: ../modeling_language.md:47
msgid "Special diagram interactions"
msgstr ""

#: ../modeling_language.md:50
#, fuzzy
msgid "Modeling language"
msgstr "Jezici modeliranja"

#: gaphor.abc.ModelingLanguage:1 of
msgid ""
"A model provider is a special service that provides an entrypoint to a "
"model implementation, such as UML, SysML, RAAML."
msgstr ""

#: gaphor.abc.ModelingLanguage.diagram_types:1 of
msgid "Iterate diagram types."
msgstr ""

#: gaphor.abc.ModelingLanguage.element_types:1 of
msgid "Iterate element types."
msgstr ""

#: gaphor.abc.ModelingLanguage.lookup_element:1 of
msgid "Look up a model element type by (class) name."
msgstr ""

#: gaphor.abc.ModelingLanguage.lookup_element:3 of
msgid ""
"A namespace may be provided. This will allow the model to be loaded from "
"that specific modeling language only."
msgstr ""

#: gaphor.abc.ModelingLanguage.model_browser_model:1 of
msgid "A model for use in the Model Browser."
msgstr ""

#: gaphor.abc.ModelingLanguage.name:1 of
msgid "Human-readable name of the modeling language."
msgstr ""

#: gaphor.abc.ModelingLanguage.toolbox_definition:1 of
msgid "Get structure for the toolbox."
msgstr ""

#: ../modeling_language.md:57
msgid ""
"As a convention, the package containing the modeling language should have"
" an attribute `__modeling_language__` that has the same value as the "
"modeling language name in the entry point."
msgstr ""

#: ../modeling_language.md:60
msgid "To illustrate:"
msgstr ""

#: ../modeling_language.md:62
msgid "The file `mytool/mylang/__init__.py` contains an entry:"
msgstr ""

#: ../modeling_language.md:68
msgid "`pyproject.toml` contains an entry point:"
msgstr ""

#: ../modeling_language.md:75
msgid "Connectors"
msgstr "Spojnice"

#: ../modeling_language.md:77
msgid "Connectors are used to connect one element to another."
msgstr "Spojnice se koriste za spajanje elemenata."

#: ../modeling_language.md:79
msgid ""
"Connectors should adhere to the `ConnectorProtocol`. Normally you would "
"inherit from `BaseConnector`."
msgstr ""

#: gaphor.diagram.connectors.BaseConnector:1 of
msgid "Connection adapter for Gaphor diagram items."
msgstr ""

#: gaphor.diagram.connectors.BaseConnector:3 of
msgid ""
"Line item ``line`` connects with a handle to a connectable item "
"``element``."
msgstr ""

#: ../modeling_language.md
msgid "Parameters"
msgstr "Parametri"

#: gaphor.diagram.connectors.BaseConnector:5 of
msgid "connecting item"
msgstr "spojni element"

#: gaphor.diagram.connectors.BaseConnector:6 of
msgid "connectable item"
msgstr "spojiv element"

#: gaphor.diagram.connectors.BaseConnector:8 of
msgid ""
"By convention the adapters are registered by (element, line) -- in that "
"order."
msgstr ""

#: gaphor.diagram.connectors.BaseConnector.allow:1 of
msgid "Determine if items can be connected."
msgstr "Odredi je li se elementi mogu povezati."

#: gaphor.diagram.connectors.BaseConnector.allow:3 of
msgid "Is the connection allowed at all (during mouse movement for example)?"
msgstr ""

#: gaphor.diagram.connectors.BaseConnector.allow:5 of
msgid "Returns `True` if connection is allowed."
msgstr ""

#: gaphor.diagram.connectors.BaseConnector.connect:1 of
msgid "Connect to an element."
msgstr "Poveži s elementom."

#: gaphor.diagram.connectors.BaseConnector.connect:3 of
msgid ""
"Establish a connection between element and line. Also takes care of "
"disconnects, if required (e.g. 1:1 relationships)."
msgstr ""

#: gaphor.diagram.connectors.BaseConnector.connect:6 of
msgid ""
"Note that at this point the line may be connected to some other, or the "
"same element. The connection at model level also still exists."
msgstr ""

#: gaphor.diagram.connectors.BaseConnector.connect:10 of
msgid "Returns `True` if a connection is established."
msgstr ""

#: gaphor.diagram.connectors.BaseConnector.disconnect:1 of
msgid "Disconnect model level connections."
msgstr ""

#: gaphor.diagram.connectors.BaseConnector.disconnect:3 of
msgid ""
"Break connection, called when dropping a handle on a point where it can "
"not connect."
msgstr ""

#: gaphor.diagram.connectors.BaseConnector.get_connected:1 of
msgid "Get item connected to a handle."
msgstr ""

#: ../modeling_language.md:87
#, fuzzy
msgid "Format and parse"
msgstr "Kopiraj i umetni"

#: ../modeling_language.md:89
msgid ""
"Model elements can be formatted to a simple text representation. For "
"example, This is used in the Model Browser. It isn't a full serialization"
" of the model element."
msgstr ""

#: ../modeling_language.md:92
msgid ""
"In some cases it's useful to parse a text back into an object. This is "
"done when you edit attributes and operations on a class."
msgstr ""

#: ../modeling_language.md:95
msgid "Not every ``format()`` needs to have an equivalent ``parse()`` function."
msgstr ""

#: ../modeling_language.md:100
msgid ""
"Returns a human readable representation of the model element. In most "
"cases this is just the name, however, properties (attributes) and "
"operations are formatted more extensively:"
msgstr ""

#: ../modeling_language.md:110
msgid ""
"Parse ``text`` and populate ``element``. The element is populated with "
"elements from the text. This may mean that new model elements are created"
" as part of the parse process."
msgstr ""

#: ../modeling_language.md:114
msgid "Copy and paste"
msgstr "Kopiraj i umetni"

#: ../modeling_language.md:116
msgid ""
"Copy and paste works out of the box for simple items: one diagram item "
"with one model element (the `subject`). It leverages the `load()` and "
"`save()` methods of the elements to ensure all relevant data is copied."
msgstr ""

#: ../modeling_language.md:119
msgid ""
"Sometimes items need more than one model element to work. For example an "
"Association: it has two association ends."
msgstr ""

#: ../modeling_language.md:121
msgid ""
"In those specific cases you need to implement your own copy and paste "
"functions. To create such a thing you'll need to create two functions: "
"one for copying and one for pasting."
msgstr ""

#: ../modeling_language.md:126
msgid ""
"Create a copy of an element (or list of elements). The returned type "
"should be distinct, so the `paste()` function can properly dispatch. A "
"copy function normally copies only the element and mandatory related "
"elements. E.g. an Association needs two association ends."
msgstr ""

#: ../modeling_language.md:134
msgid ""
"Paste previously copied data. Based on the data type created in the "
"``copy()`` function, try to duplicate the copied elements. Returns the "
"newly created item or element."
msgstr ""

#: ../modeling_language.md:139
msgid "Gaphor provides some convenience functions:"
msgstr ""

#: ../modeling_language.md:143
msgid ""
"Copy ``items``. The ``lookup`` function is used to look up owned elements"
" (shown as child nodes in the Model Browser)."
msgstr ""

#: ../modeling_language.md:148
msgid ""
"Paste a copy of the Presentation element to the diagram, but try to link "
"the underlying model element. A shallow copy."
msgstr ""

#: ../modeling_language.md:154
msgid "Paste a copy of both Presentation and model element. A deep copy."
msgstr ""

#: ../modeling_language.md:157
msgid "Grouping"
msgstr "Grupiranje"

#: ../modeling_language.md:159
msgid ""
"Grouping is done by dragging one item on top of another, in a diagram or "
"in the tree view."
msgstr ""

#: ../modeling_language.md:163
msgid ""
"Return the owner for `element`. The owner may be `Root`, denoting the "
"element should be placed in the root of the ownership hierarchy. If "
"`None` is returned, there is no owner."
msgstr ""

#: ../modeling_language.md:169
msgid "Returns all elements owned by `element"
msgstr ""

#: ../modeling_language.md:174
msgid ""
"Group an element in a parent element. The grouping can be based on "
"ownership, but other types of grouping are also possible."
msgstr ""

#: ../modeling_language.md:180
msgid ""
"Remove the grouping from an element. The function needs to check if the "
"provided `parent` node is the right one."
msgstr ""

#: ../modeling_language.md:186
msgid ""
"This function tries to determine if grouping is possible, without "
"actually performing a group operation. This is not 100% accurate."
msgstr ""

#: ../modeling_language.md:191
msgid "Dropping"
msgstr ""

#: ../modeling_language.md:193
msgid ""
"Dropping is performed by dragging an element from the tree view and drop "
"it on a diagram. This is an easy way to extend a diagram with already "
"existing model elements."
msgstr ""

#: ../modeling_language.md:196
msgid ""
"Alternatively, a presentation item can be dropped on top of another "
"element."
msgstr ""

#: ../modeling_language.md:200
msgid ""
"The drop function creates a new presentation for an element on the "
"diagram, if the element is not a presentation yet. For relationships, a "
"drop only works if both connected elements are present in the same "
"diagram."
msgstr ""

#: ../modeling_language.md:205
msgid ""
"While grouping deals with connecting model elements, dropping deals with "
"creating and placing presentation elements on the right item in a "
"diagram."
msgstr ""

#: ../modeling_language.md:209
msgid "Automated model cleanup"
msgstr ""

#: ../modeling_language.md:211
msgid "Gaphor wants to keep the model in sync with the diagrams."
msgstr ""

#: ../modeling_language.md:213
msgid ""
"A little dispatch function is used to determine if a model element can be"
" removed."
msgstr ""

#: ../modeling_language.md:217
msgid "Determine if a model element can safely be removed."
msgstr ""

#: ../modeling_language.md:220
#, fuzzy
msgid "Property Editor pages"
msgstr "Uređivač svojstava"

#: ../modeling_language.md:222
msgid ""
"The editor page is constructed from snippets. For example: almost each "
"element has a name, so there is a UI snippet that allows you to edit a "
"name."
msgstr ""

#: ../modeling_language.md:225
msgid "Each property page (snippet) should inherit from `PropertyPageBase`."
msgstr ""

#: gaphor.diagram.propertypages.PropertyPageBase:1 of
msgid "A property page which can display itself in a notebook."
msgstr ""

#: gaphor.diagram.propertypages.PropertyPageBase.construct:1 of
msgid "Create the page (Gtk.Widget) that belongs to the Property page."
msgstr ""

#: gaphor.diagram.propertypages.PropertyPageBase.construct:3 of
msgid "Returns the page's toplevel widget (Gtk.Widget)."
msgstr ""

#: ../modeling_language.md:232
msgid "Instant (diagram) editor popups"
msgstr ""

#: ../modeling_language.md:234
msgid ""
"When you double-click on an item in a diagram, a popup can show up, so "
"you can easily change the name."
msgstr ""

#: ../modeling_language.md:236
msgid ""
"By default, this works for any named element. You can register your own "
"inline editor function if you need to."
msgstr ""

#: ../modeling_language.md:240
msgid ""
"Show a small editor popup in the diagram. Makes for easy editing without "
"resorting to the Element editor."
msgstr ""

#: ../modeling_language.md:243
msgid ""
"In case of a mouse press event, the mouse position (relative to the "
"element) are also provided."
msgstr ""

#: ../models/c4model.md:1
#, fuzzy
msgid "The C4 Model"
msgstr "C4 model"

#: ../models/c4model.md:3
msgid ""
"The [C4 model](https://c4model.com/) is a simple visual language to "
"describe the static structure of a software system."
msgstr ""

#: ../models/c4model.md:5
msgid "It’s based on the [UML](uml.md) language."
msgstr ""

#: ../models/core.rst:2
msgid "Modeling Language Core"
msgstr ""

#: ../models/core.rst:4
msgid "The Core modeling language is the the basis for any other language."
msgstr ""

#: ../models/core.rst:6
msgid ""
"The :obj:`~gaphor.core.modeling.Base` class acts as the root for all "
"gaphor domain classes. :obj:`~gaphor.core.modeling.Diagram` and "
":obj:`~gaphor.core.modeling.Presentation` form the basis for everything "
"you see in a diagram."
msgstr ""

#: ../models/core.rst:10
msgid ""
"All data models in Gaphor are generated from actual Gaphor model files. "
"This allows us to provide you nice diagrams of Gaphor’s internal model."
msgstr ""

#: ../models/core.rst:16
msgid "The core model with presentation classes"
msgstr ""

#: ../models/core.rst:19
msgid "The ``Base`` Class"
msgstr ""

#: ../models/core.rst:21
msgid ""
"The :obj:`~gaphor.core.modeling.Base` class provides event notification "
"and integrates with the model repository (internally known as "
":obj:`~gaphor.core.modeling.ElementFactory`). All classes in a model "
"should derive from this class. If a model does not show a base class for "
"an element, it will derive from :obj:`~gaphor.core.modeling.Base`. Bi-"
"directional relationships are also possible, as well as derived "
"relations."
msgstr ""

#: ../models/core.rst:28
msgid ""
"The :obj:`~gaphor.core.modeling.base.RepositoryProtocol`, and "
":obj:`~gaphor.core.modeling.base.EventWatcherProtocol` protocols are "
"important to connect the model to the repository and event handling "
"mechanisms."
msgstr ""

#: ../models/core.rst:33
msgid "The class ``Base`` is the core of Gaphor’s data model."
msgstr ""

#: gaphor.core.modeling.base.Base:1 of
msgid "Base class for all model data classes."
msgstr ""

#: gaphor.core.modeling.Base.id:1 of
msgid "An id (read-only), unique within the model."
msgstr ""

#: gaphor.core.modeling.Base.model:1 of
msgid "The owning model, raises :class:`TypeError` when model is not set."
msgstr ""

#: gaphor.core.modeling.base.Base.unlink:1 of
msgid "Unlink the element."
msgstr ""

#: gaphor.core.modeling.base.Base.unlink:3 of
msgid ""
"All the elements references are destroyed. For composite associations, "
"the associated elements are also unlinked."
msgstr ""

#: gaphor.core.modeling.base.Base.unlink:6 of
msgid ""
"The unlink lock is acquired while unlinking this element's properties to "
"avoid recursion problems."
msgstr ""

#: ../models/core.rst:45
msgid "Event handling"
msgstr ""

#: gaphor.core.modeling.base.Base.handle:1 of
msgid "Propagate incoming events."
msgstr ""

#: gaphor.core.modeling.base.Base.handle:3 of
msgid ""
"This only works if the element has been created by an "
":class:`~gaphor.core.modeling.ElementFactory`"
msgstr ""

#: gaphor.core.modeling.base.Base.watcher:1 of
msgid "Create a new watcher for this element."
msgstr ""

#: gaphor.core.modeling.base.Base.watcher:3 of
msgid ""
"Watchers provide a convenient way to get signalled when a property "
"relative to ``self`` has been changed."
msgstr ""

#: gaphor.core.modeling.base.Base.watcher:6 of
msgid ""
"To use a watcher, the element should be created by a properly wired up "
":class:`~gaphor.core.modeling.ElementFactory``."
msgstr ""

#: gaphor.core.modeling.base.Base.watcher:8 of
msgid "This example is purely illustrative:"
msgstr ""

#: ../models/core.rst:53
#, fuzzy
msgid "Loading and saving"
msgstr "Crtanje i razmaci"

#: gaphor.core.modeling.base.Base.load:1 of
msgid "Loads value in name."
msgstr ""

#: gaphor.core.modeling.base.Base.load:3 of
msgid "Make sure that after all elements are loaded, postload() should be called."
msgstr ""

#: gaphor.core.modeling.base.Base.postload:1 of
msgid "Fix up the odds and ends."
msgstr ""

#: gaphor.core.modeling.base.Base.postload:3 of
msgid "This is run after all elements are loaded."
msgstr ""

#: gaphor.core.modeling.base.Base.save:1 of
msgid "Save the state by calling ``save_func(name, value)``."
msgstr ""

#: ../models/core.rst:63
msgid "OCL-style methods"
msgstr ""

#: gaphor.core.modeling.base.Base.isKindOf:1 of
msgid "Returns :const:`True` if the object is an instance of ``class_``."
msgstr ""

#: gaphor.core.modeling.base.Base.isTypeOf:1 of
msgid "Returns :const:`True` if the object is of the same type as the ``other``."
msgstr ""

#: ../models/core.rst:71
msgid "The ``Presentation`` class"
msgstr ""

#: gaphor.core.modeling.presentation.Presentation:1 of
msgid "A special type of :obj:`Base` that can be displayed on a :obj:`Diagram`."
msgstr ""

#: gaphor.core.modeling.presentation.Presentation:3 of
msgid "Presentation instances can only be owned by diagrams."
msgstr ""

#: gaphor.core.modeling.presentation.Presentation:5 of
msgid ""
"Subtypes of ``Presentation`` should implement the :obj:`gaphas.item.Item`"
" protocol."
msgstr ""

#: gaphor.core.modeling.presentation.Presentation.request_update:1 of
msgid "Mark this presentation object for update."
msgstr ""

#: gaphor.core.modeling.presentation.Presentation.request_update:3 of
msgid "Updates are orchestrated by diagrams."
msgstr ""

#: gaphor.core.modeling.presentation.Presentation.watch:1 of
msgid "Watch a certain path of elements starting with ``self``."
msgstr ""

#: gaphor.core.modeling.presentation.Presentation.watch:3 of
msgid ""
"The handler is optional and will default to a simple "
":obj:`request_update`."
msgstr ""

#: gaphor.core.modeling.presentation.Presentation.watch:5 of
msgid ""
"Watches should be set in the constructor, so they can be registered and "
"unregistered in one shot."
msgstr ""

#: gaphor.core.modeling.presentation.Presentation.watch:12 of
msgid "This interface is fluent: returns ``self``."
msgstr ""

#: gaphor.core.modeling.presentation.Presentation.change_parent:1 of
msgid ""
"Change the parent and update the item's matrix so the item visually "
"remains in the same place."
msgstr ""

#: ../models/core.rst:84
msgid "The ``Diagram`` class"
msgstr ""

#: gaphor.core.modeling.diagram.Diagram:1 of
msgid "Diagrams may contain :obj:`Presentation` elements."
msgstr ""

#: gaphor.core.modeling.diagram.Diagram:3 of
msgid ""
"If diagrams need to be owned, the modeling language (e.g. UML) should "
"subclass ``Diagram`` and add ownership relationships and rules."
msgstr ""

#: gaphor.core.modeling.diagram.Diagram.create:1 of
msgid "Create a new diagram item on the diagram."
msgstr ""

#: gaphor.core.modeling.diagram.Diagram.create:3 of
msgid ""
"It is created with a unique ID, and it is attached to the diagram's root "
"item.  The type parameter is the element class to create.  The new "
"element also has an optional parent and subject."
msgstr ""

#: gaphor.core.modeling.diagram.Diagram.lookup:1 of
msgid "Find a presentation item by id."
msgstr ""

#: gaphor.core.modeling.diagram.Diagram.lookup:3 of
msgid "Returns a presentation in this diagram or return ``None``."
msgstr ""

#: gaphor.core.modeling.diagram.Diagram.select:1 of
msgid "Return an iterator of all canvas items that match expression."
msgstr ""

#: gaphor.core.modeling.diagram.Diagram.request_update:1 of
msgid "Schedule an item for updating."
msgstr ""

#: gaphor.core.modeling.diagram.Diagram.request_update:3 of
msgid ""
"No update is done at this point, it's only added to the set of to-be "
"updated items."
msgstr ""

#: gaphor.core.modeling.diagram.Diagram.request_update:6 of
msgid "This method is part of the :obj:`gaphas.model.Model` protocol."
msgstr ""

#: gaphor.core.modeling.diagram.Diagram.update:1 of
msgid "Update the diagram."
msgstr "Aktualiziraj dijagram."

#: gaphor.core.modeling.diagram.Diagram.update:3 of
msgid ""
"All items that requested an update via :meth:`request_update` are now "
"updates. If an item has an ``update(context: UpdateContext)`` method, "
"it's invoked. Constraints are solved."
msgstr ""

#: ../models/core.rst:99
msgid "Protocols"
msgstr ""

#: ../models/core.rst:105
msgid "Create a new element in the repository."
msgstr ""

#: ../models/core.rst:109
msgid "Select elements from the repository that fulfill ``expression``."
msgstr ""

#: ../models/core.rst:114
msgid "Select all elements from the repository of type ``type_``."
msgstr ""

#: ../models/core.rst:119
msgid "Select all elements from the repository."
msgstr ""

#: ../models/core.rst:123
msgid "Get an element by id from the repository."
msgstr ""

#: ../models/core.rst:125
msgid "Returns :const:`None` if no such element exists."
msgstr ""

#: ../models/core.rst:131
msgid ""
"Add a watch for a specific path. The path is relative to the element that"
" created the watcher object."
msgstr ""

#: ../models/core.rst:134
msgid "Returns ``self``, so watch operations can be chained."
msgstr ""

#: ../models/core.rst:138
msgid ""
"Should be called before the watcher is disposed, to release all watched "
"paths."
msgstr ""

#: ../models/core_changeset.md:1
msgid "Change Sets"
msgstr ""

#: ../models/core_changeset.md:3
msgid ""
"The core model has support for change sets, which are sets of pending "
"changes. Normally you end up with a change set when you [resolve a merge "
"conflict](../merge_conflicts) in your model."
msgstr ""

#: ../models/core_services.rst:2
#, fuzzy
msgid "Core Services"
msgstr "Usluge"

#: ../models/core_services.rst:4
msgid ""
"here you can find the API for services that are related to model creation"
" and model manipulation."
msgstr ""

#: ../models/core_services.rst:9
#, fuzzy
msgid "Element Repository (/Factory)"
msgstr "element_factory"

#: gaphor.core.modeling.elementfactory.ElementFactory:1 of
msgid "The ``ElementFactory`` is used as a central repository for a model."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory:3 of
msgid ""
"New model elements should be created by "
":obj:`~gaphor.core.modeling.ElementFactory.create`."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory:6 of
msgid ""
"Methods like :obj:`~gaphor.core.modeling.ElementFactory.select` can be "
"used to find elements in the model."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.select:1 of
msgid "Iterate elements that comply with expression."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.select:3 of
msgid "Expressions can be:"
msgstr "Izrazi mogu biti:"

#: gaphor.core.modeling.elementfactory.ElementFactory.select:5 of
msgid ":obj:`None`: return all elements."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.select:6 of
msgid "A type: return all elements of that type, or subtypes."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.select:7 of
msgid "An expression."
msgstr "Izraz."

#: gaphor.core.modeling.elementfactory.ElementFactory.lselect:1 of
msgid ""
"Like :obj:`~gaphor.core.modeling.ElementFactory.select`, but return a "
"list, instead of an iterator."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.lookup:1 of
msgid "Find element with a specific id."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.keys:1 of
msgid "Iterate all id's in the factory."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.values:1 of
msgid "Iterate all elements in the factory."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.size:1 of
msgid "Return the amount of elements currently in the factory."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.is_empty:1 of
msgid "Returns ``True`` if the factory holds no elements."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.create:1 of
msgid "Create a new model element of type ``type``."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.create:3 of
msgid ""
"This method will only create model elements, not "
":obj:`~gaphor.core.modeling.Presentation` elements: those are created by "
":obj:`~gaphor.core.modeling.Diagram`."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.flush:1 of
msgid "Flush all elements (remove them from the factory)."
msgstr ""

#: gaphor.core.modeling.elementfactory.ElementFactory.flush:3 of
msgid ""
"Diagram elements are flushed first. The remaining elements are flushed "
"next."
msgstr ""

#: ../models/core_services.rst:33
#, fuzzy
msgid "Modeling Language"
msgstr "Jezici modeliranja"

#: ../models/core_services.rst:35
msgid ""
"Information on how modeling languages are managed can be found "
":doc:`../modeling_language`."
msgstr ""

#: ../models/core_services.rst:39
#, fuzzy
msgid "Event Manager"
msgstr "event_manager"

#: ../models/core_services.rst:41
msgid ""
"The :doc:`../event_system` takes care of dispatches events throughout "
"Gaphor."
msgstr ""

#: ../models/raaml.md:10 ../models/sysml.md:9 ../models/uml.md:15
msgid "Packages"
msgstr "Paketi"

#: ../models/raaml.md:1
msgid "Risk Analysis and Assessment Modeling Language"
msgstr ""

#: ../models/raaml.md:3
msgid ""
"Gaphor implements parts of the [RAAML 1.0 "
"specification](https://www.omg.org/spec/RAAML)."
msgstr ""

#: ../models/raaml/Core.rst:2
msgid "Core"
msgstr ""

#: ../models/raaml/Core.rst:5
msgid "Core Library/Any Situation"
msgstr ""

#: ../models/raaml/Core.rst:11
msgid "Core Profile/Controlling Measure"
msgstr ""

#: ../models/raaml/Core.rst:17
msgid "Core Profile/Relevant To"
msgstr ""

#: ../models/raaml/Core.rst:23
msgid "Core Profile/Situation"
msgstr ""

#: ../models/raaml/Core.rst:29
msgid "Core Profile/Violates"
msgstr ""

#: ../models/raaml/General.rst:2
msgid "General"
msgstr "Opće"

#: ../models/raaml/General.rst:5
msgid "Basic Event"
msgstr "Osnovni događaj"

#: ../models/raaml/General.rst:11
msgid "General Concepts Library/Abstract Cause"
msgstr ""

#: ../models/raaml/General.rst:17
msgid "General Concepts Library/Abstract Effect"
msgstr ""

#: ../models/raaml/General.rst:23
msgid "General Concepts Library/Abstract Event"
msgstr ""

#: ../models/raaml/General.rst:29
msgid "General Concepts Library/Abstract Failure Mode"
msgstr ""

#: ../models/raaml/General.rst:35
msgid "General Concepts Library/Abstract Risk"
msgstr ""

#: ../models/raaml/General.rst:41
msgid "General Concepts Library/Activation"
msgstr ""

#: ../models/raaml/General.rst:47
msgid "General Concepts Library/Cause"
msgstr ""

#: ../models/raaml/General.rst:53
msgid "General Concepts Library/Dysfunctional Event"
msgstr ""

#: ../models/raaml/General.rst:59
msgid "General Concepts Library/Effect"
msgstr ""

#: ../models/raaml/General.rst:65
msgid "General Concepts Library/Error Propagation"
msgstr ""

#: ../models/raaml/General.rst:71
msgid "General Concepts Library/Error Realization"
msgstr ""

#: ../models/raaml/General.rst:77
msgid "General Concepts Library/Harm Potential"
msgstr ""

#: ../models/raaml/General.rst:83
msgid "General Concepts Library/Hazard"
msgstr ""

#: ../models/raaml/General.rst:89
msgid "General Concepts Library/Scenario"
msgstr ""

#: ../models/raaml/General.rst:95
msgid "General Concepts Library/Undesired State"
msgstr ""

#: ../models/raaml/General.rst:101
msgid "General Concepts Profile/Detection"
msgstr ""

#: ../models/raaml/General.rst:107
msgid "General Concepts Profile/Failure State"
msgstr ""

#: ../models/raaml/General.rst:113
msgid "General Concepts Profile/Mitigation"
msgstr ""

#: ../models/raaml/General.rst:119
msgid "General Concepts Profile/Prevention"
msgstr ""

#: ../models/raaml/General.rst:125
msgid "General Concepts Profile/Recommendation"
msgstr ""

#: ../models/raaml/General.rst:131
msgid "General Concepts Profile/Undeveloped"
msgstr ""

#: ../models/raaml/Methods.rst:2
msgid "Methods"
msgstr "Metode"

#: ../models/raaml/Methods.rst:5
msgid "FTA/FTA Library/Events/Basic Event"
msgstr "FTA/FTA biblioteka/Događaji/Osnovni događaj"

#: ../models/raaml/Methods.rst:11
msgid "FTA/FTA Library/Events/Conditional Event"
msgstr "FTA/FTA biblioteka/Događaji/Uvjetni događaj"

#: ../models/raaml/Methods.rst:17
msgid "FTA/FTA Library/Events/Dormant Event"
msgstr "FTA/FTA biblioteka/Događaji/Neaktivni događaj"

#: ../models/raaml/Methods.rst:23
msgid "FTA/FTA Library/Events/Events"
msgstr "FTA/FTA biblioteka/Događaji/Događaji"

#: ../models/raaml/Methods.rst:29
msgid "FTA/FTA Library/Events/Event"
msgstr "FTA/FTA biblioteka/Događaji/Događaj"

#: ../models/raaml/Methods.rst:35
msgid "FTA/FTA Library/Events/House Event"
msgstr "FTA/FTA biblioteka/Događaji/Kućni događaj"

#: ../models/raaml/Methods.rst:41
msgid "FTA/FTA Library/Events/Intermediate Event"
msgstr "FTA/FTA biblioteka/Događaji/Međudogađaj"

#: ../models/raaml/Methods.rst:47
msgid "FTA/FTA Library/Events/Top Event"
msgstr "FTA/FTA biblioteka/Događaji/Glavni događaj"

#: ../models/raaml/Methods.rst:53
msgid "FTA/FTA Library/Events/Undeveloped Event"
msgstr "FTA/FTA biblioteka/Događaji/Nerazvijeni događaj"

#: ../models/raaml/Methods.rst:59
msgid "FTA/FTA Library/Events/Zero Event"
msgstr "FTA/FTA biblioteka/Događaji/Nula događaja"

#: ../models/raaml/Methods.rst:65
msgid "FTA/FTA Library/FTA Element"
msgstr "FTA/FTA biblioteka/FTA element"

#: ../models/raaml/Methods.rst:71
msgid "FTA/FTA Library/FTA Library"
msgstr "FTA/FTA biblioteka/FTA biblioteka"

#: ../models/raaml/Methods.rst:77
msgid "FTA/FTA Library/FTA Tree"
msgstr "FTA/FTA biblioteka/FTA stablo"

#: ../models/raaml/Methods.rst:83
msgid "FTA/FTA Library/Gates/AND"
msgstr "FTA/FTA biblioteka/Sklopke/I"

#: ../models/raaml/Methods.rst:89
msgid "FTA/FTA Library/Gates/Gate"
msgstr "FTA/FTA biblioteka/Sklopke/Sklopka"

#: ../models/raaml/Methods.rst:95
msgid "FTA/FTA Library/Gates/INHIBIT"
msgstr "FTA/FTA biblioteka/Sklopke/S preduvjetom"

#: ../models/raaml/Methods.rst:101
msgid "FTA/FTA Library/Gates/MAJORITY_VOTE"
msgstr "FTA/FTA biblioteka/Sklopke/VEĆINA_GLASOVA"

#: ../models/raaml/Methods.rst:107
msgid "FTA/FTA Library/Gates/NOT"
msgstr "FTA/FTA biblioteka/Sklopke/NE"

#: ../models/raaml/Methods.rst:113
msgid "FTA/FTA Library/Gates/OR"
msgstr "FTA/FTA biblioteka/Sklopke/ILI"

#: ../models/raaml/Methods.rst:119
msgid "FTA/FTA Library/Gates/SEQ"
msgstr "FTA/FTA biblioteka/Sklopke/sprovođenje slijeda"

#: ../models/raaml/Methods.rst:125
msgid "FTA/FTA Library/Gates/XOR"
msgstr "FTA/FTA biblioteka/Sklopke/XILI"

#: ../models/raaml/Methods.rst:131
msgid "FTA/FTA Profile/AND"
msgstr "FTA/FTA profil/I"

#: ../models/raaml/Methods.rst:137
msgid "FTA/FTA Profile/Conditional Event"
msgstr "FTA/FTA profil/Uvjetni događaj"

#: ../models/raaml/Methods.rst:143
msgid "FTA/FTA Profile/Dormant Event"
msgstr "FTA/FTA profil/Neaktivni događaj"

#: ../models/raaml/Methods.rst:149
msgid "FTA/FTA Profile/Event"
msgstr "FTA/FTA profil/Događaj"

#: ../models/raaml/Methods.rst:155
msgid "FTA/FTA Profile/Gate"
msgstr "FTA/FTA profil/Sklopka"

#: ../models/raaml/Methods.rst:161
msgid "FTA/FTA Profile/House Event"
msgstr "FTA/FTA profil/Domaći događaj"

#: ../models/raaml/Methods.rst:167
msgid "FTA/FTA Profile/INHIBIT"
msgstr "FTA/FTA profil/UVJET"

#: ../models/raaml/Methods.rst:173
msgid "FTA/FTA Profile/Intermediate Event"
msgstr "FTA/FTA profil/Međudogađaj"

#: ../models/raaml/Methods.rst:179
msgid "FTA/FTA Profile/MAJORITY_VOTE"
msgstr "FTA/FTA profil/VEĆINA_GLASOVA"

#: ../models/raaml/Methods.rst:185
msgid "FTA/FTA Profile/NOT"
msgstr "FTA/FTA profil/NE"

#: ../models/raaml/Methods.rst:191
msgid "FTA/FTA Profile/OR"
msgstr "FTA/FTA profil/ILI"

#: ../models/raaml/Methods.rst:197
msgid "FTA/FTA Profile/SEQ"
msgstr "FTA/FTA profil/SPROVOĐENJE_SLIJDA"

#: ../models/raaml/Methods.rst:203
msgid "FTA/FTA Profile/Top Event"
msgstr "FTA/FTA profil/Glavni događaj"

#: ../models/raaml/Methods.rst:209
msgid "FTA/FTA Profile/Transfer In"
msgstr "FTA/FTA profil/Prijenos u"

#: ../models/raaml/Methods.rst:215
msgid "FTA/FTA Profile/Transfer Out"
msgstr "FTA/FTA profil/Prijenos iz"

#: ../models/raaml/Methods.rst:221
msgid "FTA/FTA Profile/Tree"
msgstr "FTA/FTA profil/Stablo"

#: ../models/raaml/Methods.rst:227
msgid "FTA/FTA Profile/XOR"
msgstr "FTA/FTA profil/XILI"

#: ../models/raaml/Methods.rst:233
msgid "FTA/FTA Profile/Zero Event"
msgstr "FTA/FTA profil/Nula događaj"

#: ../models/raaml/Methods.rst:239
msgid "FTA/FTA"
msgstr "FTA/FTA"

#: ../models/sysml.md:1
msgid "Systems Modeling Language"
msgstr "Jezici modeliranja sustava"

#: ../models/sysml.md:3
msgid ""
"Gaphor implements part of the [SysML 1.6](https://www.omg.org/spec/SysML)"
" specification."
msgstr ""
"Gaphor implementira dio [SysML 1.6](https://www.omg.org/spec/SysML) "
"specifikacije."

#: ../models/sysml/Activities.rst:2
msgid "Activities"
msgstr "Aktivnosti"

#: ../models/sysml/Allocations.rst:2
msgid "Allocations"
msgstr "Dodjeljivanja"

#: ../models/sysml/Allocations.rst:5
msgid "AllocatedActivityPartition"
msgstr ""

#: ../models/sysml/Allocations.rst:11
msgid "Allocation"
msgstr ""

#: ../models/sysml/Blocks.rst:2 ../style_sheets.md:329 ../style_sheets.md:330
msgid "Blocks"
msgstr "Blokovi"

#: ../models/sysml/Blocks.rst:8
msgid "Adjunt and Classifier Behavior Properties"
msgstr ""

#: ../models/sysml/Blocks.rst:14
msgid "Bound References"
msgstr ""

#: ../models/sysml/Blocks.rst:20
msgid "Connector Ends"
msgstr "Krajevi spojnica"

#: ../models/sysml/Blocks.rst:26
msgid "Properties"
msgstr "Svojstva"

#: ../models/sysml/Blocks.rst:32
msgid "Property Paths"
msgstr "Staze svojstava"

#: ../models/sysml/Blocks.rst:38
msgid "Property-Specific Types"
msgstr "Vrste svojstava"

#: ../models/sysml/Blocks.rst:44
msgid "Property Strings"
msgstr "Izrazi svojstava"

#: ../models/sysml/Blocks.rst:50
msgid "Value Types"
msgstr "Vrste vrijednosti"

#: ../models/sysml/ConstraintBlocks.rst:2
msgid "ConstraintBlocks"
msgstr ""

#: ../models/sysml/Libraries.rst:2
msgid "Libraries"
msgstr "Biblioteke"

#: ../models/sysml/ModelElements.rst:2
msgid "ModelElements"
msgstr ""

#: ../models/sysml/PortsAndFlows.rst:2
msgid "PortsAndFlows"
msgstr ""

#: ../models/sysml/PortsAndFlows.rst:5
msgid "Actions on Nested Ports"
msgstr ""

#: ../models/sysml/PortsAndFlows.rst:11
msgid "Port Stereotypes"
msgstr ""

#: ../models/sysml/PortsAndFlows.rst:17
msgid "Property Value Change Events"
msgstr ""

#: ../models/sysml/PortsAndFlows.rst:23
msgid "Provided and Required Features"
msgstr "Postojeće i potrebne značajke"

#: ../models/sysml/PortsAndFlows.rst:29
msgid "Item Flow"
msgstr "Tok elementa"

#: ../models/sysml/Requirements.rst:2 ../style_sheets.md:331
msgid "Requirements"
msgstr "Uvjeti"

#: ../models/uml.md:1
msgid "Unified Modeling Language"
msgstr "Unified Modeling Language"

#: ../models/uml.md:3
msgid ""
"The UML model is the most extensive model in Gaphor. It is used as a base"
" language for [SysML](sysml.md), [RAAML](raaml.md), and [C4](c4model.md)."
msgstr ""
"UML model je najopsežniji model u Gaphoru. Koristi se kao osnovni jezik "
"za [SysML](sysml.md), [RAAML](raaml.md) i [C4](c4model.md)."

#: ../models/uml.md:7
msgid ""
"Gaphor follows the [official UML 2.5.1 data "
"model](https://www.omg.org/spec/UML/). Where changes have been made a "
"comment has been added to the model. In particular where _m:n_ "
"relationships subset _1:n_ relationships."
msgstr ""
"Gaphor slijedi [službeni model podataka UML "
"2.5.1](https://www.omg.org/spec/UML/). Tamo gdje su napravljene promjene,"
" modelu je dodan komentar. Osobito gdje _m:n_ odnosi čine podskup _1:n_ "
"odnosa."

#: ../models/uml/01._Common_Structure.rst:2
msgid "01. Common Structure"
msgstr "01. Uobičajena struktura"

#: ../models/uml/01._Common_Structure.rst:5
msgid "1. Root"
msgstr "1. Osnova"

#: ../models/uml/01._Common_Structure.rst:11
msgid "2. Templates"
msgstr "2. Predlošci"

#: ../models/uml/01._Common_Structure.rst:13
msgid "Not implemented."
msgstr "Nije implementirano."

#: ../models/uml/01._Common_Structure.rst:16
msgid "3. Namespaces"
msgstr "3. Imenski prostori"

#: ../models/uml/01._Common_Structure.rst:22
msgid "4. Types and Multiplicity"
msgstr "4. Vrste i mnogostrukost"

#: ../models/uml/01._Common_Structure.rst:28
msgid "5. Constraints"
msgstr "5. Ograničenja"

#: ../models/uml/01._Common_Structure.rst:34
msgid "6. Dependencies"
msgstr "6. Zavisnosti"

#: ../models/uml/02._Values.rst:2
msgid "02. Values"
msgstr "02. Vrijednosti"

#: ../models/uml/02._Values.rst:5
msgid "1. Literals"
msgstr ""

#: ../models/uml/02._Values.rst:11
msgid "2. Expressions"
msgstr "2. Izrazi"

#: ../models/uml/03._Classification.rst:2
msgid "03. Classification"
msgstr "03. Klasifikacija"

#: ../models/uml/03._Classification.rst:5
msgid "1. Classifiers"
msgstr "1. Klasifikatori"

#: ../models/uml/03._Classification.rst:11
msgid "3. Features"
msgstr "3. Značajke"

#: ../models/uml/03._Classification.rst:17
msgid "4. Properties"
msgstr "4. Svojstva"

#: ../models/uml/03._Classification.rst:23
msgid "5. Operations"
msgstr "5. Operacije"

#: ../models/uml/03._Classification.rst:29
msgid "7. Instances"
msgstr "7. Instance"

#: ../models/uml/04._Simple_Classifiers.rst:2
msgid "04. Simple Classifiers"
msgstr "04. Jednostavni klasifikatori"

#: ../models/uml/04._Simple_Classifiers.rst:5
msgid "1. Data Types"
msgstr "1. Vrste podataka"

#: ../models/uml/04._Simple_Classifiers.rst:11
msgid "3. Interfaces"
msgstr "3. Sučelja"

#: ../models/uml/05._Structured_Classifiers.rst:2
msgid "05. Structured Classifiers"
msgstr "05. Strukturirani klasifikatori"

#: ../models/uml/05._Structured_Classifiers.rst:5
msgid "1. Structured Classifiers"
msgstr "1. Strukturirani klasifikatori"

#: ../models/uml/05._Structured_Classifiers.rst:11
msgid "2. Encapsulated Classifiers"
msgstr "2. Ugrađeni klasifikatori"

#: ../models/uml/05._Structured_Classifiers.rst:17
msgid "3. Classes"
msgstr "3. Klase"

#: ../models/uml/05._Structured_Classifiers.rst:23
msgid "4. Associations"
msgstr "4. Veze"

#: ../models/uml/05._Structured_Classifiers.rst:29
msgid "5. Components"
msgstr "5. Komponente"

#: ../models/uml/05._Structured_Classifiers.rst:35
msgid "6. Collaborations"
msgstr "6. Suradnje"

#: ../models/uml/06._Packaging.rst:2
msgid "06. Packaging"
msgstr "06. Paketiranje"

#: ../models/uml/06._Packaging.rst:5
msgid "1. Packages"
msgstr "1. Paketi"

#: ../models/uml/06._Packaging.rst:11
msgid "2. Profiles"
msgstr "2. Profili"

#: ../models/uml/07._Common_Behaviors.rst:2
msgid "07. Common Behaviors"
msgstr "07. Opća ponašanja"

#: ../models/uml/07._Common_Behaviors.rst:5
msgid "1. Behaviors"
msgstr "1. Ponašanja"

#: ../models/uml/07._Common_Behaviors.rst:11
msgid "2. Events"
msgstr "2. Događaji"

#: ../models/uml/08._State_Machines.rst:2
msgid "08. State Machines"
msgstr ""

#: ../models/uml/08._State_Machines.rst:5
msgid "1. Behavior State Machines"
msgstr ""

#: ../models/uml/09._Activities.rst:2
msgid "09. Activities"
msgstr "09. Aktivnosti"

#: ../models/uml/09._Activities.rst:5
msgid "1. Activities"
msgstr "1. Aktivnosti"

#: ../models/uml/09._Activities.rst:11
msgid "2. Control Nodes"
msgstr ""

#: ../models/uml/09._Activities.rst:17
msgid "3. Object Nodes"
msgstr ""

#: ../models/uml/09._Activities.rst:23
msgid "4. Executable Nodes"
msgstr ""

#: ../models/uml/09._Activities.rst:29
msgid "5. Activity Groups"
msgstr "5. Grupe aktivnosti"

#: ../models/uml/10._Actions.rst:2
msgid "10. Actions"
msgstr "10. Radnje"

#: ../models/uml/10._Actions.rst:5
msgid "1. Actions"
msgstr "1. Radnje"

#: ../models/uml/10._Actions.rst:11
msgid "2. Invocation Actions"
msgstr ""

#: ../models/uml/10._Actions.rst:17
msgid "7. Structural Feature Actions"
msgstr ""

#: ../models/uml/10._Actions.rst:23
msgid "9. Accept Event Actions"
msgstr "9. Radnje prihvaćanja događaja"

#: ../models/uml/11._Interactions.rst:2
msgid "11. Interactions"
msgstr "11. Interakcije"

#: ../models/uml/11._Interactions.rst:5
msgid "1. Interactions"
msgstr "1. Interakcije"

#: ../models/uml/11._Interactions.rst:11
msgid "2. Lifelines"
msgstr ""

#: ../models/uml/11._Interactions.rst:17
msgid "3. Messages"
msgstr "3. Poruke"

#: ../models/uml/11._Interactions.rst:23
msgid "4. Occurrences"
msgstr "4. Pojavljivanja"

#: ../models/uml/12._Use_Cases.rst:2
msgid "12. Use Cases"
msgstr "12. Slučajevi primjene"

#: ../models/uml/12._Use_Cases.rst:5
msgid "UseCases"
msgstr ""

#: ../models/uml/13._Deployments.rst:2
msgid "13. Deployments"
msgstr ""

#: ../models/uml/13._Deployments.rst:5
msgid "1. Deployments"
msgstr ""

#: ../models/uml/13._Deployments.rst:11
msgid "2. Artifacts"
msgstr "2. Artefakti"

#: ../models/uml/13._Deployments.rst:17
msgid "3. Nodes"
msgstr "3. Čvorovi"

#: ../models/uml/14._Information_Flows.rst:2
msgid "14. Information Flows"
msgstr "14. Tokovi informacija"

#: ../models/uml/A._Gaphor_Specific_Constructs.rst:2
msgid "A. Gaphor Specific Constructs"
msgstr "A. Gaphor specifične konstrukcije"

#: ../models/uml/A._Gaphor_Specific_Constructs.rst:5
msgid "1. Diagrams"
msgstr "1. Dijagrami"

#: ../models/uml/A._Gaphor_Specific_Constructs.rst:11
msgid "2. Stereotype Applications"
msgstr ""

#: ../models/uml/B._Gaphor_Profile.rst:2
msgid "B. Gaphor Profile"
msgstr "B. Gaphor profil"

#: ../models/uml/B._Gaphor_Profile.rst:4
msgid ""
"In order to provide extra information to the diagram elements (mainly "
"association ends), the Gaphor model has been extended with stereotypes."
msgstr ""

#: ../plugins.md:1
msgid "Plugins"
msgstr ""

#: ../plugins.md:4
msgid "Plugins is an experimental feature! The API may change."
msgstr ""

#: ../plugins.md:6
msgid "We welcome you to try and provide your feedback."
msgstr ""

#: ../plugins.md:9
msgid ""
"Plugins allow you to extend the functionality of Gaphor beyond the "
"features provided in the standard distributions. In particular, plugins "
"can be helpful if you install the binary distributions available on the "
"[download page](https://gaphor.org/download/)."
msgstr ""

#: ../plugins.md:12
msgid "Gaphor can be extended via entry points in several ways:"
msgstr ""

#: ../plugins.md:14
msgid "Application (global) services (`gaphor.appservices`)"
msgstr ""

#: ../plugins.md:15
msgid "Session specific services (`gaphor.services`)"
msgstr ""

#: ../plugins.md:16
msgid "[Modeling languages](modeling_language) (`gaphor.modelinglanguages`)"
msgstr ""

#: ../plugins.md:17
msgid "(Sub)command line parsers (`gaphor.argparsers`)"
msgstr ""

#: ../plugins.md:18
msgid "Indirectly loaded modules (`gaphor.modules`), mainly for UI components"
msgstr ""

#: ../plugins.md:21
msgid ""
"The default location for plugins is `$HOME/.local/gaphor/plugins-2` "
"(`$USER/.local/gaphor/plugins-2` on Windows). This location can be "
"changed by setting the environment variable `GAPHOR_PLUGIN_PATH` and "
"point to a directory."
msgstr ""

#: ../plugins.md:25
#, fuzzy
msgid "Install a plugin"
msgstr "Instalacija"

#: ../plugins.md:27
msgid ""
"At this moment Gaphor does not have functionality bundled to install and "
"maintain plugins. To install a plugin, use `pip` from a Python "
"installation on your computer. On macOS and Linux, that should be easy, "
"on Windows you may need to install Python separately from "
"[python.org](https://python.org) or the Windows Store."
msgstr ""

#: ../plugins.md:32
msgid ""
"Since plugins are installed with your system Python version, it's "
"important that plugins are pure Python and do not contain compiled C "
"code."
msgstr ""

#: ../plugins.md:34
msgid ""
"If you use Gaphor installed as Flatpak, you need to grant Gaphor access "
"to user files (`filesystem=home`), so Gaphor can find files in your "
"`.local` folder. You can use "
"[FlatSeal](https://flathub.org/apps/com.github.tchx84.Flatseal) to change"
" permissions of Flatpaks."
msgstr ""

#: ../plugins.md:39
msgid ""
"For example: to install the [Hello World "
"plugin](https://github.com/gaphor/gaphor_plugin_helloworld) on Linux and "
"macOS, enter:"
msgstr ""

#: ../plugins.md:45
msgid ""
"Then start Gaphor as you normally would. A new Hello World entry has been"
" added to the tools menu (![Menu icon](images/open-menu-symbolic.svg) → "
"Tools → Hello World)."
msgstr ""

#: ../plugins.md:48
msgid "Create your own plugin"
msgstr ""

#: ../plugins.md:50
msgid ""
"If you want to write a plugin yourself, you can familiarize yourself with"
" Gaphor's [design principles](design_principles), [service oriented "
"architecture](service_oriented), and [event driven framework](framework)."
msgstr ""

#: ../plugins.md:54
msgid "Example plugin"
msgstr ""

#: ../plugins.md:56
msgid ""
"You can have a look at the [Hello World "
"plugin](https://github.com/gaphor/gaphor_plugin_helloworld) available on "
"GitHub for an example of how to create your own plugin."
msgstr ""

#: ../plugins.md:58
msgid ""
"The "
"[pyproject.toml](https://github.com/gaphor/gaphor_plugin_helloworld/blob/main/pyproject.toml)"
" file contains a plugin:"
msgstr ""

#: ../plugins.md:67
msgid ""
"This refers to the class `HelloWorldPlugin` in package/module "
"[gaphor_plugins_helloworld](https://github.com/gaphor/gaphor_plugin_helloworld/blob/main/gaphor_helloworld_plugin/__init__.py)."
msgstr ""

#: ../plugins.md:70
msgid "Here is a stripped version of the hello world plugin:"
msgstr ""

#: ../plugins.md:95
msgid ""
"As stated before, a plugin should implement the `Service` interface. It "
"also implements `ActionProvider`, saying it has some actions to be "
"performed by the user."
msgstr ""

#: ../plugins.md:98
msgid ""
"The menu entry will be part of the \"Tools\" extension menu. This "
"extension point is created as a service. Other services can also be "
"passed as dependencies. Services can get references to other services by "
"defining them as arguments of the constructor."
msgstr ""

#: ../plugins.md:102
msgid "All action defined in this service are registered."
msgstr ""

#: ../plugins.md:103
msgid ""
"Each service has a `shutdown()` method. This allows the service to "
"perform some cleanup when it's shut down."
msgstr ""

#: ../plugins.md:105
msgid ""
"The action that can be invoked. The action is defined and will be picked "
"up by `add_actions()` method (see 3.)"
msgstr ""

#: ../plugins.md:108
msgid "Plugin Development FAQ"
msgstr ""

#: ../plugins.md:110
msgid "How do I acceess gaphor services in my plugin?"
msgstr ""

#: ../plugins.md:112
msgid ""
"Gaphor's services can be made accessible by listing the service names in "
"the init function of your plugin class. This also requires including "
"Service as a base class. In the HelloWorldPlugin example, the tools_menu "
"service is included."
msgstr ""

#: ../plugins.md:115
msgid ""
"A more complete description of this approach can be found in the [Service"
" Oriented Architecture documentation page](service_oriented.md)."
msgstr ""

#: ../plugins.md:118
msgid "Community Developed Plugins"
msgstr ""

#: ../plugins.md:120
#, fuzzy
msgid "Gaphor_Tools"
msgstr "Gaphor na macOS-u"

#: ../plugins.md:121
msgid "What does it do?"
msgstr ""

#: ../plugins.md:122
msgid ""
"Import and export of SysML requirements and notes to Excel and "
"Confluence. It's currently at the proof-of-concept stage of development, "
"but does allow a requirements table to be exported, then edited and "
"imported bringing in all the changes to the model, similarly for element "
"notes."
msgstr ""

#: ../plugins.md:123
msgid "Where can I get it?"
msgstr ""

#: ../plugins.md:124
msgid ""
"From this [BitBucket "
"Repo](https://bitbucket.org/resonatesystems/gaphor_tools/src/main/)"
msgstr ""

#: ../scripting.md:5
msgid "Jupyter and Scripting"
msgstr ""

#: ../scripting.md:7
msgid ""
"One way to work with models is through the GUI. However, you may also be "
"interested in getting more out of your models by interacting with them "
"through Python scripts and [Jupyter notebooks](https://jupyter.org/)."
msgstr ""

#: ../scripting.md:11
msgid "You can use scripts to:"
msgstr ""

#: ../scripting.md:13
msgid "Explore the model, check for (in)valid conditions."
msgstr ""

#: ../scripting.md:14
msgid "Generate code, as is done for Gaphor’s data model."
msgstr ""

#: ../scripting.md:15
msgid "Update a model from another source, like a CSV file."
msgstr ""

#: ../scripting.md:17
msgid "Since Gaphor is written in Python, it also functions as a library."
msgstr ""

#: ../scripting.md:19
msgid "Getting started"
msgstr "Prvi koraci"

#: ../scripting.md:21
msgid ""
"To get started, you’ll need a Python console. You can use the interactive"
" console in Gaphor, use a Jupyter notebook, although that will require "
"setting up a Python development environment."
msgstr ""

#: ../scripting.md:25
msgid "Query a model"
msgstr ""

#: ../scripting.md:27
msgid ""
"The first step is to load a model. For this you’ll need an "
"{obj}`gaphor.core.modeling.ElementFactory`. The `ElementFactory` is "
"responsible to creating and maintaining the model. It acts as a "
"repository for the model while you’re working on it."
msgstr ""

#: ../scripting.md:38
msgid ""
"The module `gaphor.storage` contains everything to load and save models. "
"Gaphor supports multiple [modeling languages](modeling_language). The "
"`ModelingLanguageService` consolidates those languages and makes it easy "
"for the loader logic to find the appropriate classes."
msgstr ""

#: ../scripting.md:44
msgid ""
"In versions before 2.13, an `EventManager` is required. In later "
"versions, the `ModelingLanguageService` can be initialized without event "
"manager."
msgstr ""

#: ../scripting.md:68
msgid ""
"At this point the model is loaded in the `element_factory` and can be "
"queried."
msgstr ""

#: ../scripting.md:71
msgid ""
"A modeling language consists of the model elements, and diagram items. "
"Graphical components are loaded separately. For the most basic "
"manupilations, GTK (the GUI toolkit we use) is not required, but you may "
"run into situations where Gaphor tries to load the GTK library."
msgstr ""

#: ../scripting.md:76
msgid ""
"One trick to avoid this (when generating Sphinx docs at least) is to use "
"autodoc’s mock function to mock out the GTK and GDK libraries. However, "
"Pango needs to be installed for text rendering."
msgstr ""

#: ../scripting.md:81
msgid ""
"A simple query only tells you what elements are in the model. The method "
"`ElementFactory.select()` returns an iterator. Sometimes it’s easier to "
"obtain a list directly. For those cases you can use "
"`ElementFatory.lselect()`. Here we select the last five elements:"
msgstr ""

#: ../scripting.md:91
msgid "Elements can also be queried by type and with a predicate function:"
msgstr ""

#: ../scripting.md:106
msgid ""
"Now, let’s say we want to do some simple (pseudo-)code generation. We can"
" iterate class attributes and write some output."
msgstr ""

#: ../scripting.md:127
msgid ""
"To find out which relations can be queried, have a look at the [modeling "
"language](modeling_language) documentation. Gaphor’s data models have "
"been built using the [UML](models/uml) language."
msgstr ""

#: ../scripting.md:131
msgid "You can find out more about a model property by printing it."
msgstr ""

#: ../scripting.md:137
msgid ""
"In this case it tells us that the type of `UML.Class.ownedAttribute` is "
"`UML.Property`. `UML.Property.class_` is set to the owner class when "
"`ownedAttribute` is set. It is a bidirectional relation."
msgstr ""

#: ../scripting.md:141
msgid "Draw a diagram"
msgstr ""

#: ../scripting.md:143
msgid ""
"Another nice feature is drawing the diagrams. At this moment this "
"requires a function. This behavior is similar to the [`diagram` "
"directive](sphinx)."
msgstr ""

#: ../scripting.md:154
msgid "Create a diagram"
msgstr ""

#: ../scripting.md:156
msgid "(Requires Gaphor 2.13)"
msgstr ""

#: ../scripting.md:158
msgid ""
"Now let's make something a little more fancy. We still have the core "
"model loaded in the element factory. From this model we can create a "
"custom diagram. With a little help of the auto-layout service, we can "
"make it a readable diagram."
msgstr ""

#: ../scripting.md:163
msgid ""
"To create the diagram, we [`drop` elements](modeling_language:dropping) "
"on the diagram. Items on a diagram represent an element in the model. "
"We'll also drop all associations on the model. Only if both ends can "
"connect, the association will be added."
msgstr ""

#: ../scripting.md:189
msgid "The diagram is not perfect, but you get the picture."
msgstr ""

#: ../scripting.md:191
msgid "Update a model"
msgstr ""

#: ../scripting.md:193
msgid ""
"Updating a model always starts with the element factory: that’s where "
"elements are created."
msgstr ""

#: ../scripting.md:196
msgid "To create a UML Class instance, you can:"
msgstr ""

#: ../scripting.md:203
msgid ""
"To give it an attribute, create an attribute type (`UML.Property`) and "
"then assign the attribute values."
msgstr ""

#: ../scripting.md:213
msgid "Adding it to the diagram looks like this:"
msgstr ""

#: ../scripting.md:221
msgid "If you save the model, your changes are persisted:"
msgstr ""

#: ../scripting.md:229
#, fuzzy
msgid "Updating elements"
msgstr "Elementi"

#: ../scripting.md:231
msgid ""
"If you need to update existing elements, this can be done by keeping "
"track of the element ID. Each element in the model has a unique internal "
"id. Once again we need some imports from Gaphor:"
msgstr ""

#: ../scripting.md:244
#, fuzzy
msgid "Then start up the services we will use:"
msgstr "Najistaknutije usluge su:"

#: ../scripting.md:263
msgid "and load in the model to the session"
msgstr ""

#: ../scripting.md:280
msgid ""
"Importantly, the changes are made as part of a `Transaction`. Here we "
"find the element with the same id, and then update the content. We then "
"save the altered model to a file."
msgstr ""

#: ../scripting.md:295
msgid "What else"
msgstr ""

#: ../scripting.md:297
msgid "What else is there to know…"
msgstr ""

#: ../scripting.md:299
msgid ""
"Gaphor supports derived associations. For example, `element.owner` points"
" to the owner element. For an attribute that would be its containing "
"class."
msgstr ""

#: ../scripting.md:300
msgid ""
"The module `gaphor.UML.recipes` contains several functions for "
"manipulating elements and their associations."
msgstr ""

#: ../scripting.md:301
msgid ""
"The tests for a given modelling language are a good place to find "
"reference examples of element creation and modification."
msgstr ""

#: ../scripting.md:302
msgid ""
"All data models are described in the `Modeling Languages` section of the "
"docs."
msgstr ""

#: ../scripting.md:303
msgid ""
"If you use Gaphor’s Console, you’ll need to apply all changes in a "
"transaction, or they will result in an error."
msgstr ""

#: ../scripting.md:304
msgid ""
"If you want a comprehensive example of a code generator, have a look at "
"[Gaphor’s `coder` "
"module](https://github.com/gaphor/gaphor/blob/main/gaphor/codegen/coder.py)."
" This module is used to generate the code for the data models used by "
"Gaphor."
msgstr ""

#: ../scripting.md:305
msgid ""
"This page is rendered with [MyST-NB](https://myst-nb.readthedocs.io/). "
"It’s actually a Jupyter Notebook!"
msgstr ""

#: ../scripting.md:307
msgid "Examples"
msgstr "Primjeri"

#: ../scripting.md:309
msgid ""
"Expanding on the information above the following snippetts show how to "
"create requirements and interfaces."
msgstr ""

#: ../scripting.md:311
msgid "Requirements from text fields"
msgstr ""

#: ../scripting.md:336
#, fuzzy
msgid "Interfaces from dictionaries"
msgstr "Interakcije"

#: ../scripting.md:367
msgid "Basic Validation"
msgstr ""

#: ../scripting.md:368
msgid ""
"Some simple validation checks can be run using a couple of small "
"functions to select and evaluate elements."
msgstr ""

#: ../scripting.md:392
msgid "Here is another example:"
msgstr ""

#: ../service_oriented.md:1
msgid "Service Oriented Architecture"
msgstr ""

#: ../service_oriented.md:3
msgid ""
"Gaphor has a service oriented architecture. What does this mean? Well, "
"Gaphor is built as a set of small islands (services). Each island "
"provides a specific piece of functionality. For example, we use separate "
"services to load/save models, provide the menu structure, and to handle "
"the undo system."
msgstr ""

#: ../service_oriented.md:8
msgid ""
"We define services as entry points in the `pyproject.toml`. With entry "
"points, applications can register functionality for specific purposes. We"
" also group entry points in to *entry point groups*. For example, we use "
"the console_scripts entry point group to start an application from the "
"command line."
msgstr ""

#: ../service_oriented.md:15
msgid "Services"
msgstr "Usluge"

#: ../service_oriented.md:17
msgid ""
"Gaphor is modeled around the concept of services. Each service can be "
"registered with the application and then it can be used by other services"
" or other objects living within the application."
msgstr ""

#: ../service_oriented.md:21
msgid ""
"Each service should implement the Service interface. This interface "
"defines one method:"
msgstr ""

#: ../service_oriented.md:28
msgid "Which is called when a service needs to be cleaned up."
msgstr ""

#: ../service_oriented.md:30
msgid ""
"We allow each service to define its own methods, as long as the service "
"is implemented too."
msgstr ""

#: ../service_oriented.md:33
msgid "Services should be defined as entry points in the `pyproject.toml` file."
msgstr ""

#: ../service_oriented.md:35
msgid ""
"Typically, a service does some work in the background. Services can also "
"expose actions that can be invoked by users. For example, the _Ctrl-z_ "
"key combo (undo) is implemented by the UndoManager service."
msgstr ""

#: ../service_oriented.md:39
msgid ""
"A service can also depend on another services. Service initialization "
"resolves these dependencies. To define a service dependency, just add it "
"to the constructor by its name defined in the entry point:"
msgstr ""

#: ../service_oriented.md:58
msgid ""
"Services that expose actions should also inherit from the ActionProvider "
"interface. This interface does not require any additional methods to be "
"implemented. Action methods should be annotated with an `@action` "
"annotation."
msgstr ""

#: ../service_oriented.md:62
msgid "Example: ElementFactory"
msgstr ""

#: ../service_oriented.md:64
msgid ""
"A nice example of a service in use is the "
"{obj}`~gaphor.core.modeling.ElementFactory`. It is one of the core "
"services."
msgstr ""

#: ../service_oriented.md:67
msgid ""
"When an important events occurs, like an element is created or destroyed,"
" that event is emitted. We then use an event handler for `ElementFactory`"
" that stores the add/remove signals in the undo system. Another example "
"of events that are emitted are with "
"{obj}`~gaphor.core.modeling.Element`'s. Those classes, or more "
"specifically, the properties, send notifications every time their state "
"changes."
msgstr ""

#: ../service_oriented.md:74
msgid "Entry Points"
msgstr ""

#: ../service_oriented.md:76
msgid ""
"Gaphor uses a main :ref`entry point "
"<https://packaging.python.org/en/latest/specifications/entry-points/>` "
"group called `gaphor.services`."
msgstr ""

#: ../service_oriented.md:78
msgid ""
"Services are used to perform the core functionality of the application "
"while breaking the functions in to individual components. For example, "
"the element factory and undo manager are both services."
msgstr ""

#: ../service_oriented.md:82
msgid ""
"Plugins can also be created to extend Gaphor beyond the core "
"functionality as an add-on. For example, a plugin could be created to "
"connect model data to other applications. Plugins are also defined as "
"services. For example a new XMI export plugin would be defined as follows"
" in the `pyproject.toml`:"
msgstr ""

#: ../service_oriented.md:92
msgid "Interfaces"
msgstr "Sučelja"

#: ../service_oriented.md:94
msgid ""
"Each service (and plugin) should implement the `gaphor.abc.Service` "
"interface:"
msgstr ""

#: gaphor.abc.Service:1 of
msgid "Base interface for all services in Gaphor."
msgstr ""

#: gaphor.abc.Service.shutdown:1 of
msgid "Shutdown the services, free resources."
msgstr ""

#: ../service_oriented.md:101
msgid ""
"Another more specialized service that also inherits from "
"`gaphor.abc.Service`, is the UI Component service. Services that use this"
" interface are used to define windows and user interface functionality. A"
" UI component should implement the `gaphor.ui.abc.UIComponent` interface:"
msgstr ""

#: gaphor.ui.abc.UIComponent:1 of
msgid "A user interface component."
msgstr ""

#: gaphor.ui.abc.UIComponent.close:1 of
msgid "Close the UI component."
msgstr ""

#: gaphor.ui.abc.UIComponent.close:3 of
msgid "The component can decide to hide or destroy the UI components."
msgstr ""

#: gaphor.ui.abc.UIComponent.open:1 of
msgid "Create and display the UI components (windows)."
msgstr ""

#: gaphor.ui.abc.UIComponent.shutdown:1 of
msgid "Shut down this component."
msgstr ""

#: gaphor.ui.abc.UIComponent.shutdown:3 of
msgid "It's not supposed to be opened again."
msgstr ""

#: ../service_oriented.md:111
msgid ""
"Typically, a service and UI component would like to present some actions "
"to the user, by means of menu entries. Every service and UI component can"
" advertise actions by implementing the `gaphor.abc.ActionProvider` "
"interface:"
msgstr ""

#: gaphor.abc.ActionProvider:1 of
msgid ""
"An action provider is a special service that provides actions via "
"``@action`` decorators on its methods (see gaphor/action.py)."
msgstr ""

#: ../sphinx.rst:2
msgid "Sphinx Extension"
msgstr ""

#: ../sphinx.rst:4
msgid ""
"What's more awesome than to use Gaphor diagrams directly in your "
"`Sphinx`_ documentation. Whether you write your docs in `reStructured "
"Text`_ or `Markdown`_, we've got you covered."
msgstr ""

#: ../sphinx.rst:9
msgid ""
"Here we cover the reStructured Text syntax. If you prefer markdown, we "
"suggest you have a look at the `MyST-parser <https://myst-"
"parser.readthedocs.io/>`_, as it `supports Sphinx directives <https"
"://myst-parser.readthedocs.io/en/latest/syntax/roles-and-"
"directives.html>`_."
msgstr ""

#: ../sphinx.rst:13
msgid ""
"It requires `minimal effort to set up <#configuration>`_. Adding a "
"diagram is as simple as:"
msgstr ""

#: ../sphinx.rst:22
msgid ""
"In case you use multiple Gaphor source files, you need to define a "
"``:model:`` attribute and add the model names to the Sphinx configuration"
" file (``conf.py``)."
msgstr ""

#: ../sphinx.rst:30
msgid ""
"Diagrams can be referenced by their name, or by their fully qualified "
"name."
msgstr ""

#: ../sphinx.rst:36
msgid "`Figure`_, and `Image properties`_ can also be applied:"
msgstr ""

#: ../sphinx.rst:47
msgid "A description suitable for an example"
msgstr ""

#: ../sphinx.rst:53
msgid "You can also add a caption, if you want."
msgstr ""

#: ../sphinx.rst:56
msgid "Configuration"
msgstr "Konfiguracija"

#: ../sphinx.rst:58
msgid ""
"To add Gaphor diagram support to Sphinx, make sure Gaphor is listed as a "
"dependency."
msgstr ""

#: ../sphinx.rst:62
msgid "Gaphor requires at least Python 3.9."
msgstr ""

#: ../sphinx.rst:64
msgid "Secondly, add the following to your ``conf.py`` file:"
msgstr ""

#: ../sphinx.rst:66
msgid "Step 1: Add gaphor as extension."
msgstr ""

#: ../sphinx.rst:74
msgid "Step 2: Add references to models"
msgstr ""

#: ../sphinx.rst:87
msgid "Now include ``diagram`` directives in your documents."
msgstr ""

#: ../sphinx.rst:91
msgid "Read the Docs"
msgstr ""

#: ../sphinx.rst:93
msgid ""
"The diagram directive plays nice with `Read the docs`_. To make diagrams "
"render, it's best to use a `.readthedocs.yaml`_ file in your project. "
"Make sure to include the extra ``apt_packages`` as shown below."
msgstr ""

#: ../sphinx.rst:97
msgid "This is the ``.readthedocs.yaml`` file we use for Gaphor:"
msgstr ""

#: ../sphinx.rst:102
msgid "``libgirepository1.0-dev`` is required to build PyGObject."
msgstr ""

#: ../sphinx.rst:103
msgid "``gir1.2-pango-1.0`` is required for text rendering."
msgstr ""

#: ../sphinx.rst:107
msgid ""
"For Gaphor 2.7.0, ``gir1.2-gtk-3.0`` and ``gir1.2-gtksource-4`` are "
"required ``apt_packages``, although we do not use the GUI. From Gaphor "
"2.7.1 onwards all you need is GI-repository and Pango."
msgstr ""

#: ../sphinx.rst:112
msgid "Errors"
msgstr "Greške"

#: ../sphinx.rst:114
msgid ""
"Errors are shown on the console when the documentation is built and in "
"the document."
msgstr ""

#: ../sphinx.rst:116
msgid "An error will appear in the documentation. Something like this:"
msgstr ""

#: ../sphinx.rst:120
msgid ""
"No diagram ‘Wrong name’ in model ‘example’ (../examples/sequence-"
"diagram.gaphor)."
msgstr ""

#: ../stereotypes.md:1
msgid "Stereotypes"
msgstr "Stereotipi"

#: ../stereotypes.md:3
msgid ""
"In UML, stereotypes are way to extend the application of the UML language"
" to new domains. For example: SysML started as a profile for UML."
msgstr ""

#: ../stereotypes.md:6
msgid ""
"Gaphor supports stereotypes too. They're *the* way for you to adapt your "
"models to your specific needs."
msgstr ""

#: ../stereotypes.md:9
msgid ""
"The UML, SysML, RAAML and other models used in Gaphor – the code is "
"generated from Gaphor model files – make use of stereotypes to provide "
"specific information used when generating the data model code."
msgstr ""

#: ../stereotypes.md:13
msgid ""
"To create a stereotype, ensure the UML Profile is active and open the "
"*Profile* section of the toolbox. First add a *Metaclass* to your "
"diagram. Next add a *Stereotype*, and connect both with a *Extension*. "
"The `«metaclass»` stereotype will only show once the *Extension* is "
"connected both class and stereotype."
msgstr ""

#: ../stereotypes.md:20
msgid ""
"The class names in the metaclass should be a class name from the UML "
"model, such as `Class`, `Interface`, `Property`, `Association`. Or even "
"`Element` if you want to use the stereotype on all elements."
msgstr ""

#: ../stereotypes.md:25
msgid "Your stereotype declaration may look something like this:"
msgstr ""

#: ../stereotypes.md:31
msgid ""
"The `Asynchronous` stereotype has a property `priority`. This property "
"can be proved a value once the stereotype is applied to a *Property*, "
"such as an association end."
msgstr ""

#: ../stereotypes.md:35
msgid ""
"When a stereotype can be applied to a model element, a *Stereotype* "
"section will appear in the editor."
msgstr ""

#: ../stereotypes.md:38
msgid ""
"![The Gaphor main window showing a stereotype usage example.](images"
"/stereotype-usage.png)"
msgstr ""

#: ../stereotypes.md:38
msgid "The Gaphor main window showing a stereotype usage example."
msgstr ""

#: ../stereotypes.md:40
msgid "Creating a profile"
msgstr ""

#: ../stereotypes.md:42
msgid ""
"In SysML extending the profile using stereotypes is often required to "
"tailor the model to your needs. For example, creating Customer vs System "
"requirements."
msgstr ""

#: ../stereotypes.md:45
msgid "To add a profile to your model:"
msgstr ""

#: ../stereotypes.md:47
msgid ""
"Create a package called `profile` this can be done by right clicking in "
"the left hand column."
msgstr ""

#: ../stereotypes.md:48
msgid ""
"Switch modelling language to the UML profile (top of left hand menu drop "
"down)"
msgstr ""

#: ../stereotypes.md:49
msgid "Within the package create a profile diagram (prf)"
msgstr ""

#: ../stereotypes.md:50
msgid "Add a profile element to the diagram"
msgstr ""

#: ../stereotypes.md:51
msgid "Add a meta-class element to the diagram, within the profile."
msgstr ""

#: ../stereotypes.md:52
msgid "Add a stereotype element to the diagram, within the profile."
msgstr ""

#: ../stereotypes.md:53
msgid ""
"Connect meta-class and stereotype with an Extension relation. The head "
"should be attached to the class. As soon as the Extension is connected, "
"the class will get a stereotype _metaclass_ assigned."
msgstr ""

#: ../stereotypes.md:55
msgid "With the meta-class and stereotype placed on the diagram, either:"
msgstr ""

#: ../stereotypes.md:57
msgid ""
"Double-click the meta-class and name it after the base element you want "
"to create your stereotype from."
msgstr ""

#: ../stereotypes.md:58
msgid ""
"Select the base element from the drop down menu in the Property Editor on"
" the right hand side. In this case only UML elements can be used as base "
"elements."
msgstr ""

#: ../stereotypes.md:60
#, fuzzy
msgid "Styling Stereotypes"
msgstr "Stereotipi"

#: ../stereotypes.md:62
msgid ""
"You can apply styling to stereotypes. For example here the base element "
"`requirement` has a stereotype `system requirement`"
msgstr ""

#: ../stereotypes.md:77
msgid "[Style Sheets](style_sheets) has more detail on how CSS works in Gaphor"
msgstr ""

#: ../storage.md:1
msgid "File Format"
msgstr "Datotečni format"

#: ../storage.md:3
msgid ""
"The root element of Gaphor models is the `Gaphor` tag, all other elements"
" are contained in this. The Gaphor element delimits the beginning and the"
" end of an Gaphor model."
msgstr ""

#: ../storage.md:7
msgid ""
"The idea is to keep the file format as simple and extensible as possible:"
" UML elements (including Diagram) are at the top level with no nesting. A"
" UML element can have two tags: references (`ref`) and values (`val`). "
"References are used to point to other UML elements. Values have a value "
"inside (an integer or a string)."
msgstr ""

#: ../storage.md:11
msgid ""
"Since many references are bi-directional, you'll find both ends defined "
"in the file (e.g. `Package.ownedType` - `Actor.package`, and "
"`Diagram.ownedPresentation` and `UseCaseItem.diagram`)."
msgstr ""

#: ../style_sheets.md:1
msgid "Style Sheets"
msgstr ""

#: ../style_sheets.md:3
msgid ""
"Since Gaphor 2.0, diagrams can have a different look by means of style "
"sheets. Style sheets use the Cascading Style Sheets (CSS) syntax. CSS is "
"used to describe the presentation of a document written in a markup "
"language, and is most commonly used with HTML for web pages."
msgstr ""

#: ../style_sheets.md:8
msgid ""
"On the [W3C CSS home "
"page](https://www.w3.org/Style/CSS/Overview.en.html), CSS is described "
"as:"
msgstr ""

#: ../style_sheets.md:11
msgid ""
"Cascading Style Sheets (CSS) is a simple mechanism for adding style "
"(e.g., fonts, colors, spacing) to Web documents."
msgstr ""

#: ../style_sheets.md:14
msgid ""
"Its application goes well beyond web documents, though. Gaphor uses CSS "
"to provide style elements to items in diagrams. CSS allows us, users of "
"Gaphor, to change the visual appearance of our diagrams. Color and line "
"styles can be changed to make it easier to read the diagrams."
msgstr ""

#: ../style_sheets.md:19
msgid ""
"Since we're dealing with a diagram, and not a HTML document, some CSS "
"features have been left out."
msgstr ""

#: ../style_sheets.md:22
msgid ""
"The style is part of the model, so everyone working on a model will have "
"the same style. To edit the style press the tools page button at the top "
"right corner in gaphor:"
msgstr ""

#: ../style_sheets.md:26
msgid "![Button to access style code](images/css-button.png)"
msgstr ""

#: ../style_sheets.md:26
msgid "Button to access style code"
msgstr ""

#: ../style_sheets.md:28
msgid "Here is a simple example of how to change the background color of a class:"
msgstr ""

#: ../style_sheets.md:36
msgid "background beige"
msgstr ""

#: ../style_sheets.md:41
msgid "Or change the color of a component, only when it's nested in a node:"
msgstr ""

#: ../style_sheets.md:49
msgid "nested component"
msgstr ""

#: ../style_sheets.md:54
msgid ""
"The diagram itself is also expressed as a CSS node. It's pretty easy to "
"define a \"dark\" style:"
msgstr ""

#: ../style_sheets.md:68
msgid "dark-style"
msgstr ""

#: ../style_sheets.md:75
msgid ""
"Here you already see the first custom attribute: `text-color`. This "
"property allows you to control the color of the text drawn in an item. "
"`color` is used for the lines (strokes) that make the layout of a diagram"
" item."
msgstr ""

#: ../style_sheets.md:79
msgid "Supported selectors"
msgstr ""

#: ../style_sheets.md:81
msgid ""
"Since we are dealing with diagrams and models, we do not need all the "
"features of CSS. Below you'll find a summary of all CSS features "
"supported by Gaphor."
msgstr ""

#: ../style_sheets.md:86
msgid "``*``"
msgstr ""

#: ../style_sheets.md:86
msgid "All items on the diagram, including the diagram itself."
msgstr ""

#: ../style_sheets.md:87
msgid "``node component``"
msgstr ""

#: ../style_sheets.md:87
msgid "Any component item which is a descendant of a node."
msgstr ""

#: ../style_sheets.md:88
msgid "``node > component``"
msgstr ""

#: ../style_sheets.md:88
msgid "A component item which is a child of a node."
msgstr ""

#: ../style_sheets.md:89
msgid "``generalization[subject]``"
msgstr ""

#: ../style_sheets.md:89
msgid "A generalization item with a subject present."
msgstr ""

#: ../style_sheets.md:90
msgid "``class[name=Foo]``"
msgstr ""

#: ../style_sheets.md:90
msgid "A class with name \"Foo\"."
msgstr ""

#: ../style_sheets.md:91
msgid "``diagram[name^=draft]``"
msgstr ""

#: ../style_sheets.md:91
msgid "A diagram with a name starting with \"draft\"."
msgstr ""

#: ../style_sheets.md:92
msgid "``diagram[name$=draft]``"
msgstr ""

#: ../style_sheets.md:92
msgid "A diagram with a name ends with \"draft\"."
msgstr ""

#: ../style_sheets.md:93
msgid "``diagram[name*=draft]``"
msgstr ""

#: ../style_sheets.md:93
msgid "A diagram with a name containing the text \"draft\"."
msgstr ""

#: ../style_sheets.md:94
msgid "``diagram[name~=draft item]``"
msgstr ""

#: ../style_sheets.md:94
msgid "A diagram with a name of \"draft\" or \"item\"."
msgstr ""

#: ../style_sheets.md:95
msgid "``diagram[name|=draft]``"
msgstr ""

#: ../style_sheets.md:95
msgid "A diagram with a name is \"draft\" or starts with \"draft-\"."
msgstr ""

#: ../style_sheets.md:96
#, fuzzy
msgid "``:focus``"
msgstr "``class``"

#: ../style_sheets.md:96
msgid "The focused item. Other pseudo classes are:"
msgstr ""

#: ../style_sheets.md:98
msgid "``:active`` selected items"
msgstr ""

#: ../style_sheets.md:99
msgid "``:hover`` for the item under the mouse"
msgstr ""

#: ../style_sheets.md:100
msgid "``:drop`` if an item is dragged and can be dropped on this item"
msgstr ""

#: ../style_sheets.md:101
msgid "``:disabled`` if an element is grayed out during handle movement"
msgstr ""

#: ../style_sheets.md:102
#, fuzzy
msgid "``:empty``"
msgstr "``opacity``"

#: ../style_sheets.md:102
msgid "A node containing no child nodes in the diagram."
msgstr ""

#: ../style_sheets.md:103
msgid "``:root``"
msgstr ""

#: ../style_sheets.md:103
msgid "Refers to the diagram itself."
msgstr ""

#: ../style_sheets.md:105
msgid "This is only applicable for the diagram"
msgstr ""

#: ../style_sheets.md:106
msgid "``:first-child``"
msgstr ""

#: ../style_sheets.md:106
msgid "A node is the first element among a group of sibling."
msgstr ""

#: ../style_sheets.md:107
msgid "``:has()``"
msgstr ""

#: ../style_sheets.md:107
msgid "The item contains any of the provided selectors."
msgstr ""

#: ../style_sheets.md:109
msgid "E.g. ``node:has(component)``: a node containing a component item."
msgstr ""

#: ../style_sheets.md:110
msgid "``:is()``"
msgstr ""

#: ../style_sheets.md:110
msgid "Match any of the provided selectors."
msgstr ""

#: ../style_sheets.md:112
msgid "E.g. ``:is(node, subsystem) > component``: a node or subsystem."
msgstr ""

#: ../style_sheets.md:113
msgid "``:not()``"
msgstr ""

#: ../style_sheets.md:113
msgid "Negate the selector."
msgstr ""

#: ../style_sheets.md:115
msgid "E.g. ``:not([subject])``: Any item that has no \"subject\"."
msgstr ""

#: ../style_sheets.md:116
#, fuzzy
msgid "``::after``"
msgstr "``datatype``"

#: ../style_sheets.md:116
msgid ""
"Provide extra content after a text. Only the ``content`` property is "
"supported."
msgstr ""

#: ../style_sheets.md:121
msgid ""
"The official specification of [CSS3 attribute "
"selectors](https://www.w3.org/TR/2018/REC-selectors-3-20181106"
"/#attribute-selectors)."
msgstr ""
"Službena specifikacija za [CSS3 selektore "
"atributa](https://www.w3.org/TR/2018/REC-selectors-3-20181106/#attribute-"
"selectors)."

#: ../style_sheets.md:122
msgid ""
"Gaphor provides the `|=` attribute selector for the sake of completeness."
" It's probably not very useful in this context, though."
msgstr ""
"Gaphor omogućuje selektor atributa `|=` radi cjelovitosti. U ovom "
"kontekstu vjerojatno ipak nije od velike koristi."

#: ../style_sheets.md:124
msgid ""
"Please note that Gaphor CSS does not support IDs for diagram items, so "
"the CSS syntax for IDs (`#some-id`) is not used. Also, class syntax "
"(`.some-class`) is not supported currently."
msgstr ""
"Gaphor CSS ne podržava ID-ove za elemente dijagrama, stoga se CSS "
"sintaksa za ID-ove (`#some-id`) ne koristi. Sintaksa za klase (`.some-"
"class`) se trenutačno također ne podržava."

#: ../style_sheets.md:128
msgid "Style properties"
msgstr "Svojstva stilova"

#: ../style_sheets.md:130
msgid ""
"Gaphor supports a subset of CSS properties and some Gaphor specific "
"properties. The style sheet interpreter is relatively straight forward. "
"All widths, heights, and sizes are measured in pixels. You can’t use "
"complex style declarations, like the `font` property in HTML/CSS which "
"can contain font family, size, weight."
msgstr ""
"Gaphor podržava podskup CSS svojstava i neka Gaphor specifična svojstva. "
"Tumač stilske tablice je relativno jednostavan. Sve širine, visine i "
"veličine mjere se u pikselima. Ne možeš koristiti složene deklaracije "
"stilova poput HTML/CSS svojstva `font`, koje može sadržavati obitelj "
"fontova, veličinu, debljinu."

#: ../style_sheets.md:136
msgid ""
"Some properties are inherited from the parent style. The parent often is "
"a diagram. When you set a `color`` or a `font-family` on `diagram`, it "
"will propagate down to the items contained in the diagram."
msgstr ""

#: ../style_sheets.md:140
msgid "Colors"
msgstr "Boje"

#: ../style_sheets.md:144
msgid "``background-color``"
msgstr "``background-color``"

#: ../style_sheets.md:144
msgid "Examples:"
msgstr "Primjeri:"

#: ../style_sheets.md:146
msgid "``background-color: azure;``"
msgstr "``background-color: azure;``"

#: ../style_sheets.md:148
msgid "``background-color: rgb(255, 255, 255);``"
msgstr "``background-color: rgb(255, 255, 255);``"

#: ../style_sheets.md:150
msgid "``background-color: hsl(130, 95%, 10%);``"
msgstr "``background-color: hsl(130, 95%, 10%);``"

#: ../style_sheets.md:151
msgid "``color``"
msgstr "``color``"

#: ../style_sheets.md:151
msgid "Color used for lines. *(inherited)*"
msgstr "Boja za linije. *(naslijeđeno)*"

#: ../style_sheets.md:152
msgid "``text-color``"
msgstr "``text-color``"

#: ../style_sheets.md:152
msgid "Color for text. *(inherited)*"
msgstr "Boja za tekst. *(naslijeđeno)*"

#: ../style_sheets.md:154
msgid "Use color if possible."
msgstr "Koristi boju ako je moguće."

#: ../style_sheets.md:155
msgid "``opacity``"
msgstr "``opacity``"

#: ../style_sheets.md:155
msgid "Color opacity factor (``0.0`` - ``1.0``), applied to all colors."
msgstr ""
"Faktor neprozirnosti boje (``0.0`` - ``1.0``). Primijenjuje se na sve "
"boje."

#: ../style_sheets.md:160
msgid ""
"A color can be any [CSS3 color code](https://www.w3.org/TR/2018/REC-css-"
"color-3-20180619/), as described in the CSS documentation. Gaphor "
"supports all color notations: `rgb()`, `rgba()`, `hsl()`, `hsla()`, Hex "
"code (`#ffffff`) and color names."
msgstr ""
"Boja može biti bilo koji [CSS3 kod boje](https://www.w3.org/TR/2018/REC-"
"css-color-3-20180619/), kao što je opisano u CSS dokumentaciji. Gaphor "
"podržava sve oznake boja: `rgb()`, `rgba()`, `hsl()`, `hsla()`, "
"heksadecimalni kod (`#ffffff`) i imena boja."

#: ../style_sheets.md:164
msgid "Text and fonts"
msgstr "Tekst i fontovi"

#: ../style_sheets.md:168
msgid "``font-family``"
msgstr "``font-family``"

#: ../style_sheets.md:168
msgid "A single font name (e.g. ``sans``, ``serif``, ``courier``). *(inherited)*"
msgstr "Ime fonta (npr. ``sans``, ``serif``, ``courier``). *(naslijeđeno)*"

#: ../style_sheets.md:169
msgid "``font-size``"
msgstr "``font-size``"

#: ../style_sheets.md:169
msgid ""
"An absolute size (e.g. ``14``) or a size value (e.g. ``small``). "
"*(inherited)*"
msgstr ""
"Apsolutna veličina (npr. ``14``) ili vrijednost (npr. ``small``). "
"*(naslijeđeno)*"

#: ../style_sheets.md:170
msgid "``font-style``"
msgstr "``font-style``"

#: ../style_sheets.md:170
msgid "Either ``normal`` or ``italic``. *(inherited)*"
msgstr "``normal`` ili ``italic``. *(naslijeđeno)*"

#: ../style_sheets.md:171
msgid "``font-weight``"
msgstr "``font-weight``"

#: ../style_sheets.md:171
msgid "Either ``normal`` or ``bold``. *(inherited)*"
msgstr "``normal`` ili ``bold``. *(naslijeđeno)*"

#: ../style_sheets.md:172
msgid "``text-align``"
msgstr "``text-align``"

#: ../style_sheets.md:172
msgid "Either ``left``, ``center``, ``right``. *(inherited)*"
msgstr "``left``, ``center``ili ``right``. *(naslijeđeno)*"

#: ../style_sheets.md:173
msgid "``text-decoration``"
msgstr "``text-decoration``"

#: ../style_sheets.md:173
msgid "Either ``none`` or ``underline``."
msgstr "``none`` ili ``underline``."

#: ../style_sheets.md:174
msgid "``vertical-align``"
msgstr "``vertical-align``"

#: ../style_sheets.md:174
msgid "Vertical alignment for text."
msgstr "Okomiti položaj teksta."

#: ../style_sheets.md:176
msgid "Either ``top``, ``middle`` or ``bottom``."
msgstr "``top``, ``middle`` or ``bottom``."

#: ../style_sheets.md:177
msgid "``vertical-spacing``"
msgstr "``vertical-spacing``"

#: ../style_sheets.md:177
msgid "Set vertical spacing for icon-like items (actors, start state)."
msgstr "Postavi okomiti razmak za ikonske elemente (aktori, početno stanje)."

#: ../style_sheets.md:179
msgid "Example: ``vertical-spacing: 4``."
msgstr "Primjer: ``vertical-spacing: 4``."

#: ../style_sheets.md:180
#, fuzzy
msgid "``white-space``"
msgstr "``line-style``"

#: ../style_sheets.md:180
msgid "Change the line wrapping behavior for text. *(inherited)*"
msgstr ""

#: ../style_sheets.md:184
msgid ""
"`font-family` can be only one font name, not a list of (fallback) names, "
"as is used for HTML."
msgstr ""
"`font-family` mora biti samo jedno ime fonta. Navođenje popisa fontova "
"kao u HTML-u nije moguće."

#: ../style_sheets.md:186
msgid ""
"`font-size` can be a number or [CSS absolute-size "
"values](https://drafts.csswg.org/css-fonts-3/#font-size-prop). Only the "
"values `x-small`, `small`, `medium`, `large` and `x-large` are supported."
msgstr ""
"`font-size` može biti broj [CSS absolute-size "
"values](https://drafts.csswg.org/css-fonts-3/#font-size-prop). Podržane "
"su samo vrijednosti `x-small`, `small`, `medium`, `large` i `x-large`."

#: ../style_sheets.md:189
msgid "Drawing and spacing"
msgstr "Crtanje i razmaci"

#: ../style_sheets.md:193
msgid "``border-radius``"
msgstr "``border-radius``"

#: ../style_sheets.md:193
msgid "Radius for rectangles: ``border-radius: 4``."
msgstr "Radijus pravokutnika: ``border-radius: 4``."

#: ../style_sheets.md:194
msgid "``dash-style``"
msgstr "``dash-style``"

#: ../style_sheets.md:194
msgid "Style for dashed lines: ``dash-style: 7 5``."
msgstr "Stil crtica: ``dash-style: 7 5``."

#: ../style_sheets.md:195
msgid "``justify-content``"
msgstr "``justify-content``"

#: ../style_sheets.md:195
msgid "Content alignment for boxes."
msgstr "Poravnanje sadržaja za okvire."

#: ../style_sheets.md:197
msgid "Either ``start``, ``end``, ``center`` or ``stretch``."
msgstr "``start``, ``end``, ``center`` ili ``stretch``."

#: ../style_sheets.md:198
msgid "``line-style``"
msgstr "``line-style``"

#: ../style_sheets.md:198
msgid "Either ``normal`` or ``sloppy [factor]``."
msgstr "``normal`` ili ``sloppy [factor]``."

#: ../style_sheets.md:199
msgid "``line-width``"
msgstr "``line-width``"

#: ../style_sheets.md:199
msgid "Set the width for lines: ``line-width: 2``. *(inherited)*"
msgstr "Postavi debljinu linija: ``line-width: 2``. *(naslijeđeno)*"

#: ../style_sheets.md:200
msgid "``min-height``"
msgstr "``min-height``"

#: ../style_sheets.md:200
msgid "Set minimal height for an item: ``min-height: 50``."
msgstr "Postavi minimalnu visinu elementa: ``min-height: 50``."

#: ../style_sheets.md:201
msgid "``min-width``"
msgstr "``min-width``"

#: ../style_sheets.md:201
msgid "Set minimal width for an item: ``min-width: 100``."
msgstr "Postavi minimalnu širinu elementa: ``min-width: 100``."

#: ../style_sheets.md:202
#, fuzzy
msgid "``max-width``"
msgstr "``min-width``"

#: ../style_sheets.md:202
#, fuzzy
msgid "Set maximum width (text fields only): ``max-width: 100``."
msgstr "Postavi minimalnu širinu elementa: ``min-width: 100``."

#: ../style_sheets.md:203
msgid "``padding``"
msgstr "``padding``"

#: ../style_sheets.md:203
msgid "CSS style padding (top, right, bottom, left)."
msgstr "CSS odmak (gore, desno, dolje, lijevo)."

#: ../style_sheets.md:205
msgid "Example: ``padding: 3 4``."
msgstr "Primjer: ``padding: 3 4``."

#: ../style_sheets.md:209
msgid ""
"`padding` is defined by integers in the range of 1 to 4. No unit (px, pt,"
" em) needs to be used. All values are in pixel distance."
msgstr ""
"`padding` (odmak) se određuje cijelim brojevima od 1 do 4. Jedinice (px, "
"pt, em) se ne moraju koristiti. Za sve vrijednosti se koriste pikseli."

#: ../style_sheets.md:211
msgid "`dash-style` is a list of numbers (line, gap, line, gap, …)"
msgstr "`dash-style` je popis brojeva (crtica, razmak, crtica, razmak, …)"

#: ../style_sheets.md:212
msgid ""
"`line-style` only has an effect when defined on a `diagram`. A sloppiness"
" factor can be provided in the range of -2 to 2."
msgstr ""
"`line-style` djeluje samo kada je definiran u `dijagramu`. Iskrivljenost "
"linija se može odrediti faktorom u rasponu od -2 do 2."

#: ../style_sheets.md:215
#, fuzzy
msgid "Pseudo elements"
msgstr "Elementi"

#: ../style_sheets.md:217
msgid "Currently, only the `::after` pseudo element is supported."
msgstr ""

#: ../style_sheets.md:221
#, fuzzy
msgid "``content``"
msgstr "``justify-content``"

#: ../style_sheets.md:221
msgid "Extra content to be shown after a text."
msgstr ""

#: ../style_sheets.md:225
msgid "Variables"
msgstr ""

#: ../style_sheets.md:227
msgid ""
"Since Gaphor 2.16.0 you can use [CSS "
"variables](https://developer.mozilla.org/en-"
"US/docs/Web/CSS/Using_CSS_custom_properties) in your style sheets."
msgstr ""

#: ../style_sheets.md:229
msgid ""
"This allows you to define often used values in a more generic way. Think "
"of things like line dash style and colors."
msgstr ""

#: ../style_sheets.md:232
msgid "The `var()` function has some limitations:"
msgstr ""

#: ../style_sheets.md:234
msgid "Values can’t have a default value."
msgstr ""

#: ../style_sheets.md:235
msgid "Variables can’t have a variable as their value."
msgstr ""

#: ../style_sheets.md:237
msgid "Example:"
msgstr ""

#: ../style_sheets.md:250
msgid ""
"All diagrams have a white background. Sequence diagrams get a blue-ish "
"background."
msgstr ""

#: ../style_sheets.md:252
msgid "Media queries"
msgstr ""

#: ../style_sheets.md:254
msgid ""
"Gaphor supports dark and light mode since 2.16.0. Dark and light color "
"schemes are exclusively used for on-screen editing. When exporting "
"images, only the default color scheme is applied. Color schemes can be "
"defined with `@media` queries. The official `prefers-color-scheme = dark`"
" query is supported, as well as a more convenient `dark-mode`."
msgstr ""

#: ../style_sheets.md:280
msgid "Diagram styles"
msgstr ""

#: ../style_sheets.md:282
msgid ""
"Only a few properties can be defined on a diagram, namely `background-"
"color` and `line-style`. You define the diagram style separately from the"
" diagram item styles. That way it's possible to set the background color "
"for diagrams specifically. The line style can be the normal straight "
"lines, or a more playful \"sloppy\" style. For the sloppy style an "
"optional wobliness factor can be provided to set the level of line "
"wobbliness. 0.5 is default, 0.0 is a straight line. The value should be "
"between -2.0 and 2.0. Values between 0.0 and 0.5 make for a subtle "
"effect."
msgstr ""

#: ../style_sheets.md:291
#, fuzzy
msgid "CSS model elements"
msgstr "CSS element"

#: ../style_sheets.md:293
msgid ""
"Gaphor has many model elements. How can you find out which item should be"
" styled?"
msgstr ""

#: ../style_sheets.md:295
msgid ""
"Gaphor only styles the elements that are in the model, so you should be "
"explicit on their names. For example: `Component` inherits from `Class` "
"in the UML model, but changing a color for `Class` does not change it for"
" `Component`."
msgstr ""

#: ../style_sheets.md:299
msgid ""
"If you hover over a button the toolbox (bottom-left section), a popup "
"will appear with the item's name and a shortcut. As a general rule, you "
"can use the component name, glued together as the name in the stylesheet."
" A *Component* can be addressed as `component`, *Use Case* as `usecase`. "
"The name matching is case insensitive. CSS names are written in lower "
"case by default."
msgstr ""

#: ../style_sheets.md:306
msgid ""
"However, since the CSS element names are derived from names used within "
"Gaphor, there are a few exceptions."
msgstr ""

#: ../style_sheets.md:310
msgid "Profile"
msgstr "Profil"

#: ../style_sheets.md:310
msgid "Group"
msgstr "Grupa"

#: ../style_sheets.md:310
msgid "Element"
msgstr "Element"

#: ../style_sheets.md:310
msgid "CSS element"
msgstr "CSS element"

#: ../style_sheets.md:312
msgid "\\*"
msgstr "\\*"

#: ../style_sheets.md:312
msgid "*element name*"
msgstr "*ime elementa*"

#: ../style_sheets.md:312
msgid "element name without spaces"
msgstr "ime elementa bez znakova razmaka"

#: ../style_sheets.md:314
msgid "E.g. ``class``, ``usecase``."
msgstr "Npr. ``class``, ``usecase``."

#: ../style_sheets.md:315 ../style_sheets.md:316 ../style_sheets.md:317
#: ../style_sheets.md:318 ../style_sheets.md:319 ../style_sheets.md:320
#: ../style_sheets.md:321 ../style_sheets.md:322 ../style_sheets.md:323
msgid "UML"
msgstr "UML"

#: ../style_sheets.md:315
msgid "Classes"
msgstr "Klase"

#: ../style_sheets.md:315
msgid "all Association's"
msgstr "sve veze"

#: ../style_sheets.md:315
msgid "``association``"
msgstr "``association``"

#: ../style_sheets.md:316
msgid "Components"
msgstr "Komponente"

#: ../style_sheets.md:316
msgid "Device/Node"
msgstr "Uređaj/čvor"

#: ../style_sheets.md:316
msgid "``node``"
msgstr "``node``"

#: ../style_sheets.md:317 ../style_sheets.md:318 ../style_sheets.md:319
msgid "Actions"
msgstr "Radnje"

#: ../style_sheets.md:317
msgid "Decision/Merge Node"
msgstr "Čvor odluke/sjedinjavanja"

#: ../style_sheets.md:317
msgid "``decisionnode``"
msgstr "``decisionnode``"

#: ../style_sheets.md:318
msgid "Fork/Join Node"
msgstr "Čvor grananja/spajanja"

#: ../style_sheets.md:318
msgid "``forknode``"
msgstr "``forknode``"

#: ../style_sheets.md:319
msgid "Swimlane"
msgstr "Traka"

#: ../style_sheets.md:319
msgid "``partition``"
msgstr "``partition``"

#: ../style_sheets.md:320
msgid "Interactions"
msgstr "Interakcije"

#: ../style_sheets.md:320
msgid "Reflexive message"
msgstr "Refleksivna poruka"

#: ../style_sheets.md:320
msgid "``message``"
msgstr "``message``"

#: ../style_sheets.md:321 ../style_sheets.md:322
msgid "States"
msgstr "Stanja"

#: ../style_sheets.md:321
msgid "Initial Pseudostate"
msgstr "Početno pseudostanje"

#: ../style_sheets.md:321 ../style_sheets.md:322
msgid "``pseudostate``"
msgstr "``pseudostate``"

#: ../style_sheets.md:322
msgid "History Pseudostate"
msgstr "Povijest pseudostanja"

#: ../style_sheets.md:323
msgid "Profiles"
msgstr "Profili"

#: ../style_sheets.md:323
msgid "Metaclass"
msgstr "Metaklasa"

#: ../style_sheets.md:323
msgid "``class``"
msgstr "``class``"

#: ../style_sheets.md:324 ../style_sheets.md:325 ../style_sheets.md:326
#: ../style_sheets.md:327 ../style_sheets.md:328
msgid "C4 Model"
msgstr "C4 model"

#: ../style_sheets.md:324
msgid "Person"
msgstr "Osoba"

#: ../style_sheets.md:324
msgid "``c4person``"
msgstr "``c4person``"

#: ../style_sheets.md:325
msgid "Software System"
msgstr "Softverski sustav"

#: ../style_sheets.md:325
msgid "``c4container[type=\"Software System\"]``"
msgstr "``c4container[type=\"Software System\"]``"

#: ../style_sheets.md:326
msgid "Component"
msgstr "Komponenta"

#: ../style_sheets.md:326
msgid "``c4container[type=\"Component\"]``"
msgstr "``c4container[type=\"Component\"]``"

#: ../style_sheets.md:327
msgid "Container"
msgstr "Kontejner"

#: ../style_sheets.md:327
msgid "``c4container[type=\"Container\"]``"
msgstr "``c4container[type=\"Container\"]``"

#: ../style_sheets.md:328
msgid "Container: Database"
msgstr "Kontejner: Baza podataka"

#: ../style_sheets.md:328
msgid "``c4database``"
msgstr "``c4database``"

#: ../style_sheets.md:329 ../style_sheets.md:330 ../style_sheets.md:331
msgid "SysML"
msgstr "SysML"

#: ../style_sheets.md:329
msgid "ValueType"
msgstr "Vrsta vrijednosti"

#: ../style_sheets.md:329 ../style_sheets.md:330
msgid "``datatype``"
msgstr "``datatype``"

#: ../style_sheets.md:330
msgid "Primitive"
msgstr "Osnovni element"

#: ../style_sheets.md:331
msgid "Derive Requirement"
msgstr "Izvedeni uvjet"

#: ../style_sheets.md:331
msgid "``derivedreq``"
msgstr "``derivedreq``"

#: ../style_sheets.md:332
msgid "RAAML"
msgstr "RAAML"

#: ../style_sheets.md:332
msgid "FTA"
msgstr "FTA (analiza kvarova)"

#: ../style_sheets.md:332
msgid "any AND/OR/… Gate"
msgstr "jedan od I/ILI/… sklopova"

#: ../style_sheets.md:332
msgid "``and``, ``or``, etc."
msgstr "``and``, ``or``, itd."

#: ../style_sheets.md:337
msgid "Ideas"
msgstr "Ideje"

#: ../style_sheets.md:339
msgid ""
"Here are some ideas that go just beyond changing a color or a font. With "
"the following examples we dig in to Gaphor's model structure to reveal "
"more information to the users."
msgstr ""

#: ../style_sheets.md:343
msgid ""
"To create your own expression you may want to use the Console (![Menu "
"icon](images/open-menu-symbolic.svg) → Tools → Console). Drop us a line "
"on [Gitter](https://gitter.im/gaphor/Lobby) and we would be happy to help"
" you."
msgstr ""

#: ../style_sheets.md:346
msgid "The drafts package"
msgstr ""

#: ../style_sheets.md:348
msgid "All diagrams in the package \"Drafts\" should be drawn using sloppy lines:"
msgstr ""

#: ../style_sheets.md:360
msgid "draft style"
msgstr ""

#: ../style_sheets.md:365
msgid "Wrap long attributes, operations, and stereotype values"
msgstr ""

#: ../style_sheets.md:367
msgid ""
"Sometimes attribute values get a bit lengthy. By default, Gaphor will not"
" wrap text. If you want to, you can add this little snippet to wrap text "
"for lengthy attributes on classes. You can also apply this to other "
"types, of course."
msgstr ""

#: ../style_sheets.md:377
msgid "wrap long attribute"
msgstr ""

#: ../style_sheets.md:382
msgid "Unconnected relationships"
msgstr "Nepovezani odnosi"

#: ../style_sheets.md:384
msgid ""
"All items on a diagram that are not backed by a model element, should be "
"drawn in a dark red color. This can be used to spot not-so-well connected"
" relationships, such as Generalization, Implementation, and Dependency. "
"These items will only be backed by a model element once you connect both "
"line ends. This rule will exclude simple elements, like lines and boxes, "
"which will never have a backing model element."
msgstr ""

#: ../style_sheets.md:397
msgid "unconnected relationship"
msgstr "nepovezani odnos"

#: ../style_sheets.md:402
msgid "Navigable associations"
msgstr ""

#: ../style_sheets.md:404
msgid ""
"An example of how to apply a style to a navigable association is to color"
" an association blue if neither of the ends are navigable. This color "
"could act as a validation rule for a model where at least one end of each"
" association should be navigable. This is actually the case for the model"
" file used to create Gaphor's data model."
msgstr ""

#: ../style_sheets.md:416
msgid "navigable association"
msgstr ""

#: ../style_sheets.md:421
msgid "Solid Control Flow lines"
msgstr ""

#: ../style_sheets.md:423
msgid ""
"In Gaphor, Control Flow lines follow the SysML styling: dashed. If you "
"want, or need to strictly follow the official UML specifications, you can"
" simply make those solid lines."
msgstr ""

#: ../style_sheets.md:433
msgid "control flow"
msgstr ""

#: ../style_sheets.md:438
msgid "Todo note highlight"
msgstr ""

#: ../style_sheets.md:440
msgid ""
"All comments beginning with the phrase \"todo\" can be highlighted in a "
"different user-specific colour. This can be used to make yourself aware "
"that you have to do some additional work to finalize the diagram."
msgstr ""

#: ../style_sheets.md:450
msgid "highlighted todo note"
msgstr ""

#: ../style_sheets.md:455
msgid "Emphesize abstract classes and operations"
msgstr ""

#: ../style_sheets.md:457
msgid ""
"It may be that the italic font used is not distinguishable enough to "
"differentiate between concrete and abstract classes or operations. To "
"make this work we check if the `isAbstract` attribute is set on the "
"element:"
msgstr ""

#: ../style_sheets.md:467
msgid "emphasize abstract elements"
msgstr ""

#: ../style_sheets.md:472
msgid "System Style Sheet"
msgstr ""

#: ../undo.md:1
msgid "Undo Manager"
msgstr ""

#: ../undo.md:3
msgid ""
"Undo is a required feature in modern applications. Gaphor is no "
"exception. Having an undo function in place means you can change the "
"model and easily revert to an older state."
msgstr ""

#: ../undo.md:7
msgid "Overview of Transactions"
msgstr ""

#: ../undo.md:9
msgid ""
"The recording and playback of changes in Gaphor is handled by the the "
"Undo Manager. The Undo Manager works transactionally. A transaction must "
"succeed or fail as a complete unit. If the transaction fails in the "
"middle, it is rolled back. In Gaphor this is achieved by the "
"{mod}`~gaphor.transaction` module, which provides a context manager "
"{obj}`~gaphor.transaction.Transaction`."
msgstr ""

#: ../undo.md:16
msgid ""
"When transactions take place, they emit events when the top-most "
"transaction begins and is finished. The event notifications are for the "
"begin of the transaction, and the commit of the transaction if it is "
"successful or the rollback of the transaction if it fails."
msgstr ""

#: ../undo.md:20
msgid ""
"The Undo Manager only allows changes to be made in a transaction. If a "
"change is made outside a transaction, an exception is raised."
msgstr ""

#: ../undo.md:23
msgid "Start of a Transaction"
msgstr ""

#: ../undo.md:25
msgid "A `Transaction` object is created."
msgstr ""

#: ../undo.md:26
msgid "`TransactionBegin` event is emitted."
msgstr ""

#: ../undo.md:27
msgid ""
"The `UndoManager` instantiates a new `ActionStack` which is the "
"transaction object, and adds the undo action to the stack."
msgstr ""

#: ../undo.md:30
msgid ""
"Nested transactions are supported to allow a transaction to be added "
"inside of another transaction that is already in progress."
msgstr ""

#: ../undo.md:33
msgid "Successful Transaction"
msgstr "Uspjela transakcija"

#: ../undo.md:35
msgid "A `TransactionCommit` event is emitted"
msgstr ""

#: ../undo.md:36
msgid "The `UndoManager` closes and stores the transaction."
msgstr ""

#: ../undo.md:38
msgid "Failed Transaction"
msgstr "Neuspjela transakcija"

#: ../undo.md:40
msgid "A `TransactionRollback` event is emitted."
msgstr ""

#: ../undo.md:41
msgid ""
"The `UndoManager` plays back all the recorded actions, but does not store"
" it."
msgstr ""

#: ../undo.md:44
#, fuzzy
msgid "Transaction API"
msgstr "Transakcijski"

#: ../undo.md:47
msgid "You only require transactions if the undo manager is active."
msgstr ""

#: gaphor.transaction.Transaction:1 of
msgid "The transaction."
msgstr "Transakcija."

#: gaphor.transaction.Transaction:3 of
msgid ""
"On start and end of a transaction an event is emitted. Transactions can "
"be nested. Events are only emitted when the outermost transaction begins "
"and finishes."
msgstr ""

#: gaphor.transaction.Transaction:7 of
msgid "Note that transactions are a global construct."
msgstr ""

#: gaphor.transaction.Transaction:12 of
msgid ""
"Transactions can be nested. If the outermost transaction is committed or "
"rolled back, an event is emitted."
msgstr ""

#: gaphor.transaction.Transaction:15 of
msgid "It's most convenient to use ``Transaction`` as a context manager:"
msgstr ""

#: gaphor.transaction.Transaction:22 of
msgid "Events can be handled programmatically, although this is discouraged:"
msgstr ""

#: gaphor.transaction.Transaction.commit:1 of
msgid "Commit the transaction."
msgstr "Promijeni transakciju."

#: gaphor.transaction.Transaction.commit:3 of
msgid ""
"The transaction is closed. A :obj:`~gaphor.event.TransactionCommit` event"
" is emitted. If the transaction needs to be rolled back, a "
":obj:`~gaphor.event.TransactionRollback` event is emitted instead."
msgstr ""

#: gaphor.transaction.Transaction.in_transaction:1 of
msgid "Are you running inside a transaction?"
msgstr ""

#: gaphor.transaction.Transaction.mark_rollback:1 of
msgid "Mark the transaction for rollback."
msgstr ""

#: gaphor.transaction.Transaction.mark_rollback:3 of
msgid ""
"This operation itself will not close the transaction, instead it will "
"allow you to elegantly revert changes."
msgstr ""

#: gaphor.transaction.Transaction.rollback:1 of
msgid "Roll-back the transaction."
msgstr "Vrati transakciju."

#: gaphor.transaction.Transaction.rollback:3 of
msgid ""
"First, the transaction is closed. A "
":obj:`~gaphor.event.TransactionRollback` event is emitted."
msgstr ""

#: gaphor.event.TransactionBegin:1 of
msgid "This event denotes the beginning of a transaction."
msgstr ""

#: gaphor.event.TransactionBegin:3 of
msgid "Nested (sub-) transactions should not emit this signal."
msgstr ""

#: gaphor.event.TransactionCommit:1 of
msgid ""
"This event is emitted when a transaction (toplevel) is successfully "
"committed."
msgstr ""

#: gaphor.event.TransactionRollback:1 of
msgid "This event is emitted to tell the operation has failed."
msgstr ""

#: gaphor.event.TransactionRollback:3 of
msgid ""
"If a set of operations fail (e.i. due to an exception) the transaction "
"should be marked for rollback."
msgstr ""

#: ../undo.md:61
msgid "References"
msgstr "Reference"

#: ../undo.md:63
msgid ""
"[A Framework for Undoing Actions in Collaborative "
"Systems](http://web.eecs.umich.edu/~aprakash/papers/undo-tochi94.pdf)"
msgstr ""
"[A Framework for Undoing Actions in Collaborative "
"Systems](http://web.eecs.umich.edu/~aprakash/papers/undo-tochi94.pdf) "
"(Okruženje za poništavanje radnji u kolaborativnim sustavima)"

#: ../undo.md:65
msgid ""
"[Undoing Actions in Collaborative Work: Framework and "
"Experience](https://www.eecs.umich.edu/techreports/cse/94/CSE-"
"TR-196-94.pdf)"
msgstr ""
"[Undoing Actions in Collaborative Work: Framework and "
"Experience](https://www.eecs.umich.edu/techreports/cse/94/CSE-"
"TR-196-94.pdf) (Poništavanje radnji u zajedničkom radu: okruženje i "
"iskustvo)"

#: ../undo.md:67
msgid ""
"[Implementing a Selective Undo Framework in "
"Python](https://legacy.python.org/workshops/1997-10/proceedings/zukowski.html)"
msgstr ""
"[Implementing a Selective Undo Framework in "
"Python](https://legacy.python.org/workshops/1997-10/proceedings/zukowski.html)"
" (Implementacija okruženja selektivnog poništavanja u Pythonu)"

#: ../windows.md:1
msgid "Gaphor on Windows"
msgstr "Gaphor na Windowsu"

#: ../windows.md:3
#, fuzzy
msgid ""
"Gaphor can be installed as with our installer. Check out the [Gaphor "
"download page](https://gaphor.org/download#windows) for details."
msgstr ""
"Gaphor se može instalirati kao s našim instalaterom. Za detalje pogledaj "
"[stranicu za preuzimanje "
"Gaphora](https://gaphor.org/download.html#windows)."

#: ../windows.md:13
msgid "WinGet"
msgstr ""

#: ../windows.md:15
msgid ""
"We recommend using [WinGet](https://learn.microsoft.com/en-us/windows"
"/package-manager/winget) as a package manager in Windows. It is available"
" on Windows 11 and modern versions of Windows 10 as a part of the App "
"Installer."
msgstr ""

#: ../windows.md:18
msgid ""
"If you have a slightly older version of Windows, you can alternatively "
"use [Chocolatey](https://chocolatey.org) as a package manager. After it "
"is installed, execute `choco install` instead of the `winget install` "
"commands below."
msgstr ""

#: ../windows.md:21
msgid "Git"
msgstr "Git"

#: ../windows.md:23
#, fuzzy
msgid ""
"To set up a development environment in Windows first install "
"[Git](https://gitforwindows.org) by executing as an administrator:"
msgstr ""
"Za postavljanje razvojnog okruženja u sustavu Windows najprije instaliraj"
" [Git](https://gitforwindows.org) kao administrator:"

#: ../windows.md:30
#, fuzzy
msgid "GTK and Python with Gvsbuild"
msgstr "GTK i Python s gvsbuild"

#: ../windows.md:32
msgid ""
"Gvsbuild provides pre-built GTK libraries for Windows. We will install "
"these libraries and Python."
msgstr ""

#: ../windows.md:35
msgid "Install the Latest Python"
msgstr "Instaliraj najnoviju Python verziju"

#: ../windows.md:37
msgid ""
"In Windows, The full installer contains all the Python components and is "
"the best option for developers using Python for any kind of project."
msgstr ""

#: ../windows.md:40
msgid ""
"For more information on how to use the official installer, please see the"
" [full installer "
"instructions](https://docs.python.org/3/using/windows.html#windows-full)."
" The default installation options should be fine for use with Gaphor."
msgstr ""

#: ../windows.md:44
msgid ""
"Install the latest Python version using the [official "
"installer](https://www.python.org/downloads/windows/)."
msgstr ""

#: ../windows.md:47
msgid "Open a PowerShell terminal as a normal user and check the python version:"
msgstr ""

#: ../windows.md:53
msgid "Install Graphviz"
msgstr "Instaliraj Graphviz"

#: ../windows.md:55
msgid "Graphviz is used by Gaphor for automatic diagram formatting."
msgstr ""

#: ../windows.md:57
msgid "Install from WinGet with administrator PowerShell:"
msgstr ""

#: ../windows.md:63
msgid "Install pipx"
msgstr "Instaliraj pipx"

#: ../windows.md:65
msgid "From the regular user PowerShell terminal execute:"
msgstr "Iz običnog korisničkog PowerShell terminala izvrši:"

#: ../windows.md:71
msgid "Download GTK"
msgstr ""

#: ../windows.md:73
msgid ""
"Download the latest release asset at "
"https://github.com/wingtk/gvsbuild/releases. The file will be called "
"`GTK4_Gvsbuild_VERSION_x64.zip`, where `VERSION` is the latest released "
"version."
msgstr ""

#: ../windows.md:76
msgid ""
"Unzip the `GTK4_Gvsbuild_VERSION_x64.zip` file to `C:\\gtk`. For example "
"with 7Zip:"
msgstr ""

#: ../windows.md:82
msgid "The resulting directory structure should look like:"
msgstr ""

#: ../windows.md:94
msgid "Setup Gaphor"
msgstr "Postavi Gaphor"

#: ../windows.md:96
msgid "In the same PowerShell terminal, clone the repository:"
msgstr "U istom PowerShell terminalu kopiraj repozitorij:"

#: ../windows.md:103
msgid "Install Poetry"
msgstr "Instaliraj Poetry"

#: ../windows.md:108
msgid "Add GTK to your environmental variables:"
msgstr "Dodaj GTK svojim varijablama okruženja:"

#: ../windows.md:116
msgid ""
"You can also edit your account's Environmental Variables to persist "
"across PowerShell sessions."
msgstr ""
"Također možeš urediti varijable okruženja svog računa kako bi postojale "
"tijekom PowerShell sesija."

#: ../windows.md:119
msgid "Install Gaphor's dependencies"
msgstr "Instaliraj Gaphor ovisnosti"

#: ../windows.md:124 ../windows.md:155
msgid "Reinstall PyGObject and pycairo using gvsbuild wheels"
msgstr "Ponovo instaliraj PyGObject i pycairo pomoću gvsbuild kotačića"

#: ../windows.md:130 ../windows.md:164
msgid "Launch Gaphor!"
msgstr "Pokreni Gaphor!"

#: ../windows.md:135
msgid "Setting Up A Plugin Workspace for Gaphor"
msgstr ""

#: ../windows.md:137
msgid ""
"When setting up a plugin workspace you need to perform the following "
"steps:"
msgstr ""

#: ../windows.md:139 ../windows.md:197
msgid "cd (your project's workspace)"
msgstr ""

#: ../windows.md:141
msgid ""
"If your project does not already have a pyproject.toml file, create one. "
"For details see the [Poetry documentation](https://python-poetry.org/docs"
"/basic-usage/). If you already have a .toml file, make sure you have "
"gaphor as a development dependency. For details see the [Gaphor Hello "
"World Plugin](https://github.com/gaphor/gaphor_plugin_helloworld)."
msgstr ""

#: ../windows.md:149
msgid ""
"Install your project's dependencies. If you have made your project "
"dependent upon Gaphor, this will pull in Gaphor."
msgstr ""

#: ../windows.md:161
msgid ""
"Note that if you have forgotten to reinstall PyGObject and pycairo, the "
"first time you add an element to a diagram that has text, gaphor will "
"crash!"
msgstr ""

#: ../windows.md:171
msgid ""
"Start a new PowerShell terminal, and set current directory to the project"
" folder:"
msgstr ""

#: ../windows.md:176
msgid "Ensure that path environment variable is set:"
msgstr ""

#: ../windows.md:181
msgid "Start Visual Studio Code:"
msgstr ""

#: ../windows.md:186
msgid "To start the debugger, execute the following steps:"
msgstr ""

#: ../windows.md:187
msgid "Open `__main__.py` file from `gaphor` folder"
msgstr ""

#: ../windows.md:188
msgid "Add a breakpoint on line `main(sys.argv)`"
msgstr ""

#: ../windows.md:189
msgid "In the menu, select Run → Start debugging"
msgstr ""

#: ../windows.md:190 ../windows.md:201
msgid "Choose Select module from the list"
msgstr ""

#: ../windows.md:191 ../windows.md:202
msgid "Enter `gaphor` as module name"
msgstr ""

#: ../windows.md:193
msgid ""
"Visual Studio Code will start the application in debug mode, and will "
"stop at main."
msgstr ""

#: ../windows.md:195
msgid "Debugging Your Plugin Using Visual Studio Code"
msgstr ""

#: ../windows.md:199
msgid "Start gaphor:"
msgstr "Pokreni Gaphor:"

#: ../windows.md:200
msgid "In the VSCode menu, select Run → Start debugging"
msgstr ""

#: ../windows.md:204
msgid "Your plugin should appear under the Tools menu."
msgstr ""

#: ../windows.md:206
msgid "Packaging for Windows"
msgstr "Paketiranje za Windows"

#: ../windows.md:208
msgid ""
"In order to create an exe installation package for Windows, we utilize "
"[PyInstaller](https://pyinstaller.org) which analyzes Gaphor to find all "
"the dependencies and bundle them in to a single folder. We then use a "
"custom bash script that creates a Windows installer using "
"[NSIS](https://nsis.sourceforge.io/Main_Page) and a portable installer "
"using [7-Zip](https://www.7-zip.org). To install them, open PowerShell as"
" an administrator, then execute:"
msgstr ""

#: ../windows.md:220
msgid "Then build your installer using:"
msgstr ""

#: ../windows.md:229
msgid "Limited Anaconda Install"
msgstr ""

#: ../windows.md:231
msgid ""
"Sometimes, it may be helpful to call Gaphor functionality from a python "
"console on computers without the ability for a full development install "
"(e.g., without administrative privileges). Because not all necessary "
"Gaphor build dependencies (specifically,  `gtksourceview5` and "
"`libadwaita`) are not available as anaconda packages, you will not be "
"able to build the program or instantiate/run application classes like "
"`Application` and `Session`."
msgstr ""

#: ../windows.md:233
msgid ""
"However, this setup can still be helpful if you want to use or call "
"Gaphor as a library in the context of a larger project. In these cases, "
"Gaphor can be installed as a package in an anaconda environment using the"
" following process:"
msgstr ""

#: ../windows.md:236
msgid "Create new anaconda environment"
msgstr ""

#: ../windows.md:238
msgid ""
"If you use anaconda for other projects, it's a good idea to create a new "
"environment for Gaphor, so that its dependencies don't end up conflicting"
" with your pre-existing development environment. To do this, run the "
"following command from anaconda prompt:"
msgstr ""

#: ../windows.md:244
msgid "where  ``gaphor`` can be any name desired for the environment."
msgstr ""

#: ../windows.md:246
msgid "Update packages in the new environment"
msgstr ""

#: ../windows.md:248
msgid "Get the most recent packages using:"
msgstr ""

#: ../windows.md:254
#, fuzzy
msgid "Install dependencies"
msgstr "Instaliraj Gaphor ovisnosti"

#: ../windows.md:256
msgid "The following Gaphor dependencies are installable from anaconda:"
msgstr ""

#: ../windows.md:261
msgid ""
"Unfortunately, the `gtksourceview5` and `libadwaita` dependencies are not"
" available as anaconda packages. So you may not be able to fully "
"build/run the program in this environment."
msgstr ""

#: ../windows.md:263
msgid "Set up your development environment"
msgstr ""

#: ../windows.md:265
msgid ""
"Now, to develop with Gaphor, you will want to set it up with your "
"development. If you want to work with `ipython`, install it below:"
msgstr ""

#: ../windows.md:269
msgid "VSCode Tips"
msgstr ""

#: ../windows.md:270
msgid ""
"VSCode should work out-of-the box if it is already installed. Just set "
"'gaphor' as the kernel in your VSCode Profile or notebook."
msgstr ""

#: ../windows.md:272
msgid "Spyder Tips"
msgstr ""

#: ../windows.md:273
msgid "You can install spyder in this environment using `conda install spyder`."
msgstr ""

#: ../windows.md:275
msgid ""
"If this does not work, (i.e., if `conda install spyder` reveals "
"conflicts), you can instead use the following workaround:"
msgstr ""

#: ../windows.md:279
msgid "Then, in spyder, set 'gaphor' as your python interpreter"
msgstr ""

#: ../windows.md:281
#, fuzzy
msgid "Install Gaphor"
msgstr "Instaliraj Graphviz"

#: ../windows.md:283
msgid ""
"From a python console running within your new anaconda environment, you "
"may then install Gaphor using pip:"
msgstr ""

#~ msgid "The Event Manager."
#~ msgstr "Upravljač događaja."

#~ msgid ""
#~ "Priority handlers are executed directly. "
#~ "They should not raise other events, "
#~ "cause that can cause a problem in"
#~ " the exection order."
#~ msgstr ""

#~ msgid ""
#~ "It's basically to make sure that "
#~ "all events are recorded by the "
#~ "undo manager."
#~ msgstr "U osnovi osigurava da sve događaje snima upravljač poništavanja."

#~ msgid ""
#~ "Handlers are triggered (executed) when "
#~ "specific events are emitted through the"
#~ " handle() method."
#~ msgstr ""

#~ msgid ""
#~ "Select an element you want to "
#~ "place, in this case a Class (![new"
#~ " class](../gaphor/ui/icons/hicolor/scalable/actions/gaphor-"
#~ "class-symbolic.svg)) by clicking on the "
#~ "icon in the Toolbox and click on"
#~ " the diagram. This will place a "
#~ "new Class item instance on the "
#~ "diagram and add a new Class to "
#~ "the model -- it shows up in "
#~ "the Model Browser. The selected tool "
#~ "will reset itself to the Pointer "
#~ "tool after the element is placed "
#~ "on the diagram."
#~ msgstr ""

#~ msgid "newclass"
#~ msgstr ""

#~ msgid ""
#~ "The Property Editor on the right "
#~ "side will show you details about "
#~ "the newly added class, such as its"
#~ " name (_New Class_), attributes and "
#~ "operations (methods)."
#~ msgstr ""

#~ msgid "![image](images/first-model-class.png)"
#~ msgstr "![slika](images/first-model-class.png)"

#~ msgid "image"
#~ msgstr "slika"

#~ msgid "newgeneralization"
#~ msgstr ""

#~ msgid "![image](images/first-model-generalization.png)"
#~ msgstr "![slika](images/first-model-generalization.png)"

#~ msgid ""
#~ "Optionally you can run the auto-"
#~ "layout (![open menu](images/open-menu-"
#~ "symbolic.svg) → Tools → Auto Layout) "
#~ "to align the elements on the "
#~ "diagram."
#~ msgstr ""

#~ msgid "openmenu"
#~ msgstr ""

#~ msgid ""
#~ "In this example we're doing something"
#~ " a little less trivial. In Gaphor,"
#~ " services are defined as entry "
#~ "points. Each service is a class, "
#~ "and takes parameters with names that "
#~ "match other services. This allows "
#~ "services to depend on other services."
#~ msgstr ""

#~ msgid ""
#~ "You can find installers for Gaphor "
#~ "on the [Gaphor "
#~ "Website](https://gaphor.org/download). Gaphor can be"
#~ " installed on Linux (Flatpak, AppImage),"
#~ " Windows, and macOS."
#~ msgstr ""

#~ msgid "welcome screen"
#~ msgstr "uvodni ekran"

#~ msgid "![new model](images/getting-started-new-model.png)"
#~ msgstr "![novi model](images/getting-started-new-model.png)"

#~ msgid "new model"
#~ msgstr "novi model"

#~ msgid ""
#~ "The Property Editor is present on "
#~ "the right side of the diagrams. "
#~ "When no item is selected in the"
#~ " diagram, it shows you some tips "
#~ "and tricks. When an item is "
#~ "selected on the diagram, it contains "
#~ "the item details like name, attributes"
#~ " and stereotypes. It can be opened"
#~ " with <kbd>F9</kbd> and the ![sidebar-"
#~ "show-right-symbolic](images/sidebar-show-"
#~ "right-symbolic.svg) icon in the header "
#~ "bar."
#~ msgstr ""

#~ msgid "sidebar-show-right-symbolic"
#~ msgstr ""

#~ msgid ""
#~ "The Property Editor also contains model"
#~ " preferences: Click the ![document-"
#~ "properties-symbolic](images/document-properties-"
#~ "symbolic.svg) button. Here you can set"
#~ " a few model related settings and "
#~ "edit the [style sheet](style_sheets)."
#~ msgstr ""

#~ msgid "document-properties-symbolic"
#~ msgstr ""

#~ msgid ""
#~ "Gaphor is 100% Open source. The "
#~ "code and issue tracker can be "
#~ "found on `GitHub "
#~ "<https://github.com/gaphor/gaphor>`_."
#~ msgstr ""

#~ msgid ""
#~ "Gaphor has excellent integration with "
#~ ":doc:`Sphinx <sphinx>` and :doc:`Jupyter "
#~ "notebooks <scripting>`."
#~ msgstr ""

#~ msgid ""
#~ "Gaphor can be installed as Flatpak "
#~ "and AppImage on Linux, some "
#~ "distributions provide packages. Check out "
#~ "the [Gaphor download "
#~ "page](https://gaphor.org/download.html#linux) for details."
#~ msgstr ""

#~ msgid ""
#~ "[Clone the repository](https://help.github.com/en/github"
#~ "/creating-cloning-and-archiving-"
#~ "repositories/cloning-a-repository)."
#~ msgstr ""

#~ msgid ""
#~ "The main method that Gaphor is "
#~ "packaged for Linux is with a "
#~ "Flatpak package. [Flatpak](https://flatpak.org) is"
#~ " a software utility for software "
#~ "deployment and package management for "
#~ "Linux. It offer a sandbox environment"
#~ " in which users can run application"
#~ " software in isolation from the rest"
#~ " of the system."
#~ msgstr ""

#~ msgid "Create an AppImage Package"
#~ msgstr "Stvori AppImage paket"

#~ msgid ""
#~ "[AppImage](https://appimage.org/) is a format "
#~ "for distributing portable software on "
#~ "Linux without needing superuser permissions"
#~ " to install the application. The "
#~ "AppImage file is one executable which"
#~ " contains both Gaphor and Python. It"
#~ " allows Gaphor to be run on any"
#~ " AppImage supported platform without "
#~ "installation or root access."
#~ msgstr ""

#~ msgid ""
#~ "We build our AppImage by first "
#~ "bundling Gaphor with PyInstaller and "
#~ "then converting it in to an "
#~ "AppImage."
#~ msgstr ""

#~ msgid ""
#~ "In order for the built AppImage to"
#~ " be compatible with older versions of"
#~ " Linux, we build the release versions"
#~ " using Docker with an older LTS "
#~ "version of Ubuntu."
#~ msgstr ""

#~ msgid ""
#~ "The latest release of Gaphor can "
#~ "be downloaded from the [Gaphor download"
#~ " page](https://gaphor.org/download.html#macos). Gaphor "
#~ "can also be installed as a "
#~ "[Homebrew cask](https://formulae.brew.sh/cask/gaphor)."
#~ msgstr ""

#~ msgid "To setup a development environment with macOS:"
#~ msgstr ""

#~ msgid ""
#~ "If PyGObject does not compile and "
#~ "complains about a missing `ffi.h` file,"
#~ " set the following environment variable "
#~ "and run `poetry install` again:"
#~ msgstr ""

#~ msgid ""
#~ "From Gaphor 2.18 onwards Gaphor is "
#~ "also capable of merging models. Once "
#~ "a merge conflict has been detected, "
#~ "Gaphor will offer the option to "
#~ "open the current model, the incoming "
#~ "model or merge changes manually via "
#~ "the Merge Editor."
#~ msgstr ""

#~ msgid "![merge dialog](images/merge-dialog.png)"
#~ msgstr ""

#~ msgid "merge dialog"
#~ msgstr ""

#~ msgid "![merge conflict window](images/merge-conflict-window.png)"
#~ msgstr ""

#~ msgid "merge conflict window"
#~ msgstr ""

#~ msgid ""
#~ "A modeling language in Gaphor is "
#~ "defined by a class implementing the "
#~ "`gaphor.abc.ModelingLanguage` abstract base class."
#~ " The modeling language should be "
#~ "registered as a `gaphor.modelinglanguage` "
#~ "entry point."
#~ msgstr ""

#~ msgid ""
#~ "The first three by functionalities are"
#~ " exposed by the `ModelingLanguage` class."
#~ " The other functionalities can be "
#~ "extended by adding handlers to the "
#~ "respective generic functions."
#~ msgstr ""

#~ msgid ""
#~ "Modeling languages can also provide new"
#~ " UI components. Those components are "
#~ "not loaded directly when you import "
#~ "a modeling language package. Instead "
#~ "they should be imported via the "
#~ "`gaphor.modules` entrypoint."
#~ msgstr ""

#~ msgid ""
#~ "[Editor pages](#editor-property-pages), shown"
#~ " in the collapsible pane on the "
#~ "right side"
#~ msgstr ""

#~ msgid "The following methods are required to make this work:"
#~ msgstr ""

#~ msgid ""
#~ "``allow()``: is the connection allowed "
#~ "at all (during mouse movement for "
#~ "example)."
#~ msgstr ""

#~ msgid ""
#~ "``connect()``: Establish a connection between"
#~ " element and line. Also takes care"
#~ " of disconnects, if required (e.g. "
#~ "1:1 relationships)"
#~ msgstr ""

#~ msgid ""
#~ "``disconnect()``: Break connection, called "
#~ "when dropping a handle on a point"
#~ " where it can not connect."
#~ msgstr ""

#~ msgid ""
#~ "Connect to an element. Note that "
#~ "at this point the line may be "
#~ "connected to some other, or the "
#~ "same element. The connection at model"
#~ " level also still exists."
#~ msgstr ""

#~ msgid ""
#~ "Copy and paste works out of the"
#~ " box for simple items: one diagram"
#~ " item with one model element (the "
#~ "`subject`). It leveages the `load()` and"
#~ " `save()` methods of the elements to"
#~ " ensure all relevant data is copied."
#~ msgstr ""

#~ msgid ""
#~ "Create a copy of an element (or"
#~ " list of elements). The returned type"
#~ " should be distinct, so the `paste()`"
#~ " function can properly dispatch."
#~ msgstr ""

#~ msgid ""
#~ "Paste previously copied data. Based on"
#~ " the data type created in the "
#~ "``copy()`` function, try to duplicate "
#~ "the copied elements. Returns the newly"
#~ " created item or element"
#~ msgstr ""

#~ msgid ""
#~ "Create a copy of the Presentation "
#~ "element, but try to link the "
#~ "underlying model element. A shallow "
#~ "copy."
#~ msgstr ""

#~ msgid "Create a copy of both Presentation and model element. A deep copy."
#~ msgstr ""

#~ msgid ""
#~ "To serialize the copied elements and "
#~ "deserialize them again, there are two"
#~ " functions available:"
#~ msgstr ""

#~ msgid ""
#~ "Return a serialized version of a "
#~ "value. If the ``value`` is an "
#~ "element, it's referenced."
#~ msgstr ""

#~ msgid ""
#~ "Deserialize a value previously serialized "
#~ "with ``serialize()``. The ``lookup`` function"
#~ " is used to resolve references to "
#~ "other elements."
#~ msgstr ""

#~ msgid ""
#~ "The drop function creates a new "
#~ "presentation for an element on the "
#~ "diagram. For relationships, a drop only"
#~ " works if both connected elements are"
#~ " present in the same diagram."
#~ msgstr ""

#~ msgid ""
#~ "The big difference with dragging an "
#~ "element from the toolbox, is that "
#~ "dragging from the toolbox will actually"
#~ " place a new ``Presentation`` element "
#~ "on the diagram. ``drop`` works the "
#~ "other way around: it starts with a"
#~ " model element and creates an "
#~ "accompanying ``Presentation``."
#~ msgstr ""

#~ msgid "Editor property pages"
#~ msgstr ""

#~ msgid ""
#~ "When you double click on an item"
#~ " in a diagram, a popup can show"
#~ " up so you can easily change "
#~ "the name."
#~ msgstr ""

#~ msgid ""
#~ "By default this works for any "
#~ "named element. You can register your "
#~ "own inline editor function if you "
#~ "need to."
#~ msgstr ""

#~ msgid ""
#~ "The `Element` class acts as the "
#~ "root for all gaphor domain classes. "
#~ "`Diagram` and `Presentation` form the "
#~ "basis for everything you see in a"
#~ " diagram."
#~ msgstr ""

#~ msgid ""
#~ "The `Element` base class provides event"
#~ " notification and integrates with the "
#~ "model repository (internally known as "
#~ "`ElementFactory`). Bi-directional relationships "
#~ "are also possible, as well as "
#~ "derived relations."
#~ msgstr ""

#~ msgid ""
#~ "The first step is to load a "
#~ "model. For this you’ll need an "
#~ "`ElementFactory`. The `ElementFactory` is "
#~ "responsible to creating and maintaining "
#~ "the model. It acts as a repository"
#~ " for the model while you’re working"
#~ " on it."
#~ msgstr ""

#~ msgid ""
#~ "A nice example of a service in "
#~ "use is the ElementFactory. It is "
#~ "one of the core services."
#~ msgstr ""

#~ msgid ""
#~ "The UndoManager depends on the events"
#~ " emitted by the ElementFactory. When "
#~ "an important events occurs, like an "
#~ "element is created or destroyed, that"
#~ " event is emitted. We then use "
#~ "an event handler for ElementFactory that"
#~ " stores the add/remove signals in the"
#~ " undo system. Another example of "
#~ "events that are emitted are with "
#~ "`UML.Element`s. Those classes, or more "
#~ "specifically, the properties, send "
#~ "notifications every time their state "
#~ "changes."
#~ msgstr ""

#~ msgid "Gaphor uses a main entry point group called `gaphor.services`."
#~ msgstr ""

#~ msgid ""
#~ "Typically a service and UI component "
#~ "would like to present some actions "
#~ "to the user, by means of menu "
#~ "entries. Every service and UI component"
#~ " can advertise actions by implementing "
#~ "the `gaphor.abc.ActionProvider` interface:"
#~ msgstr ""

#~ msgid ""
#~ "A small example is provided by "
#~ "means of the Hello world plugin. "
#~ "Take a look at the files at "
#~ "[GitHub](https://github.com/gaphor/gaphor.plugins.helloworld). "
#~ "The example plugin needs to be "
#~ "updated to support versions 1.0.0 and"
#~ " later of Gaphor."
#~ msgstr ""

#~ msgid ""
#~ "The "
#~ "[setup.py](https://github.com/gaphor/gaphor.plugins.helloworld/blob/master/setup.py)"
#~ " file contains an entry point:"
#~ msgstr ""

#~ msgid ""
#~ "This refers to the class "
#~ "`HelloWorldPlugin` in package/module "
#~ "[gaphor.plugins.helloworld](https://github.com/gaphor/gaphor.plugins.helloworld/blob/master/gaphor/plugins/helloworld/__init__.py)."
#~ msgstr ""

#~ msgid ""
#~ "Here we cover the reStructured Text "
#~ "syntax. If you prefer markdown, we "
#~ "suggest you have a look at the "
#~ "`MyST-parser <https://myst-"
#~ "parser.readthedocs.io/>`_, as it `supports "
#~ "Sphinx directives <https://myst-"
#~ "parser.readthedocs.io/en/latest/syntax/syntax.html>`_."
#~ msgstr ""

#~ msgid "![Stereotype usage example](images/stereotype-usage.png)"
#~ msgstr ""

#~ msgid "Stereotype usage example"
#~ msgstr ""

#~ msgid "``generaliation[subject]``"
#~ msgstr ""

#~ msgid "``*:focus``"
#~ msgstr ""

#~ msgid "``node:empty``"
#~ msgstr ""

#~ msgid "An item is at the top level of the diagram."
#~ msgstr ""

#~ msgid "Working with model elements"
#~ msgstr ""

#~ msgid ""
#~ "To create your own expression you "
#~ "may want to use the Console (Tools"
#~ " -> Console, in the Hamburger menu)."
#~ " Drop us a line on "
#~ "[Gitter](https://gitter.im/gaphor/Lobby) and we "
#~ "would be happy to help you."
#~ msgstr ""

#~ msgid "Transaction support"
#~ msgstr ""

#~ msgid "Transaction support is located in module `gaphor.transaction`:"
#~ msgstr ""

#~ msgid ""
#~ "Do some basic initialization, so event"
#~ " emission will work. Since the "
#~ "transaction decorator does not know "
#~ "about the active user session (window),"
#~ " it emits it's events via a "
#~ "global list of subscribers:"
#~ msgstr ""

#~ msgid ""
#~ "The Transaction class is used mainly "
#~ "to signal the begin and end of "
#~ "a transaction. This is done by the"
#~ " TransactionBegin, TransactionCommit and "
#~ "TransactionRollback events:"
#~ msgstr ""

#~ msgid "Same goes for commit and rollback events:"
#~ msgstr ""

#~ msgid "A Transaction is started by initiating a Transaction instance:"
#~ msgstr ""

#~ msgid "On success, a transaction can be committed:"
#~ msgstr ""

#~ msgid ""
#~ "After a commit, a rollback is no"
#~ " longer allowed (the transaction is "
#~ "closed):"
#~ msgstr ""

#~ msgid "Transactions may be nested:"
#~ msgstr ""

#~ msgid ""
#~ "Transactions should be closed in the "
#~ "right order (subtransactions first):"
#~ msgstr ""

#~ msgid ""
#~ "The transactional decorator can be used"
#~ " to mark functions as transactional:"
#~ msgstr ""

#~ msgid ""
#~ "If an exception is raised from "
#~ "within the decorated function a rollback"
#~ " is performed:"
#~ msgstr ""

#~ msgid "Cleanup:"
#~ msgstr ""

#~ msgid ""
#~ "The recording and playback of changes"
#~ " in Gaphor is handled by the "
#~ "the Undo Manager. The Undo Manager "
#~ "works transactionally. A transaction must "
#~ "succeed or fail as a complete "
#~ "unit. If the transaction fails in "
#~ "the middle, it is rolled back. In"
#~ " Gaphor this is achieved by the "
#~ "`transaction` module, which provides a "
#~ "context manager `Transaction`."
#~ msgstr ""

#~ msgid ""
#~ "When transactions take place, they emit"
#~ " event notifications on the key "
#~ "transaction milestones so that other "
#~ "services can make use of the "
#~ "events. The event notifications are for"
#~ " the begin of the transaction, and"
#~ " the commit of the transaction if "
#~ "it is successful or the rollback "
#~ "of the transaction if it fails."
#~ msgstr ""

#~ msgid "Choco"
#~ msgstr "Choco"

#~ msgid ""
#~ "We recommend using "
#~ "[Chocolately](https://chocolatey.org/) as a package"
#~ " manager in Windows."
#~ msgstr ""
#~ "Preporučujemo korištenje "
#~ "[Chocolately](https://chocolatey.org/) kao upravlajača "
#~ "paketima u Windowsu."

#~ msgid "To install it, open PowerShell as an administrator, then execute:"
#~ msgstr "Za instaliranje otvori PowerShell kao administrator, a zatim izvrši:"

#~ msgid "To run local scripts in follow-on steps, also execute"
#~ msgstr "Za pokretanje lokalnih skripta u sljedećim koracima, također izvrši"

#~ msgid ""
#~ "This allows for local PowerShell scripts"
#~ " to run without signing, but still"
#~ " requires signing for remote scripts."
#~ msgstr ""
#~ "To omogućuje pokretanje lokalnih PowerShell"
#~ " skripta bez potpisivanja, ali još "
#~ "uvijek zahtijeva potpisivanje za udaljena "
#~ "skripta."

#~ msgid "MSYS2"
#~ msgstr "MSYS2"

#~ msgid ""
#~ "The development environment in the next"
#~ " step needs MSYS2 installed to "
#~ "provide some Linux command line tools"
#~ " in Windows."
#~ msgstr ""
#~ "Razvojno okruženje u sljedećem koraku "
#~ "mora imati instaliran MSYS2 za pružanje"
#~ " nekih Linuxovih alata naredbenog retka "
#~ "u sustavu Windows."

#~ msgid ""
#~ "Keep PowerShell open as administrator "
#~ "and install [MSYS2](http://www.msys2.org/):"
#~ msgstr ""
#~ "Ostavi PowerShell otvorenim kao administrator"
#~ " i instaliraj [MSYS2](http://www.msys2.org/):"

#~ msgid ""
#~ "gvsbuild provides a Python script helps"
#~ " you build the GTK library stack "
#~ "for Windows using Visual Studio. By "
#~ "compiling GTK with Visual Studio, we "
#~ "can then use a standard Python "
#~ "development environment in Windows."
#~ msgstr ""

#~ msgid "First we will install the gvsbuild dependencies:"
#~ msgstr ""

#~ msgid "Visual C++ build tools workload for Visual Studio 2022 Build Tools"
#~ msgstr ""

#~ msgid "Python"
#~ msgstr "Python"

#~ msgid "Install Visual Studio 2022"
#~ msgstr "Instaliraj Visual Studio 2022"

#~ msgid "With your admin PowerShell terminal:"
#~ msgstr "S tojim administratorskim PowerShell terminalom:"

#~ msgid "Install from Chocolately with administrator PowerShell:"
#~ msgstr ""

#~ msgid ""
#~ "Restart your PowerShell terminal as a"
#~ " normal user and check that the "
#~ "dot command is available:"
#~ msgstr ""

#~ msgid "Install gvsbuild"
#~ msgstr "Instaliraj gvsbuild"

#~ msgid "Build GTK"
#~ msgstr "Izgradi GTK"

#~ msgid "In the same PowerShell terminal, execute:"
#~ msgstr "U istom PowerShell terminalu izvrši:"

#~ msgid "Grab a coffee, the build will take a few minutes to complete."
#~ msgstr "Popij kavu, izgradnja će trajati nekoliko minuta."

#~ msgid "`Image properties`_ can also be applied:"
#~ msgstr ""
